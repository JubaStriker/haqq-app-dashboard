{"ast":null,"code":"/*-\n * ‌\n * Hedera JavaScript SDK\n * ​\n * Copyright (C) 2020 - 2022 Hedera Hashgraph, LLC\n * ​\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * ‍\n */\n\n/**\n * @typedef {import(\"./contract/ContractId.js\").default} ContractId\n * @typedef {import(\"./account/AccountId.js\").default} AccountId\n * @typedef {import(\"./KeyList.js\").default} KeyList\n * @typedef {import(\"./PublicKey.js\").default} PublicKey\n * @typedef {import(\"./PrivateKey.js\").default} PrivateKey\n * @typedef {import(\"./EvmAddress.js\").default} EvmAddress\n * @typedef {import(\"./EthereumTransactionData.js\").default} EthereumTransactionData\n * @typedef {import(\"./transaction/TransactionReceiptQuery.js\").default} TransactionReceiptQuery\n * @typedef {import(\"./transaction/TransactionRecordQuery.js\").default} TransactionRecordQuery\n * @typedef {import(\"./network/AddressBookQuery.js\").default} AddressBookQuery\n */\n\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").proto.IKey} HashgraphProto.proto.IKey\n * @typedef {import(\"@hashgraph/proto\").proto.IKeyList} HashgraphProto.proto.IKeyList\n * @typedef {import(\"@hashgraph/proto\").proto.IThresholdKey} HashgraphProto.proto.IThresholdKey\n * @typedef {import(\"@hashgraph/proto\").proto.IContractID} HashgraphProto.proto.IContractID\n */\n\n/**\n * @namespace cryptography\n * @typedef {import(\"@hashgraph/cryptography\").PrivateKey} cryptography.PrivateKey\n */\n\n/**\n * @template {object} ProtobufT\n * @template {object} SdkT\n * @typedef {{ (proto: ProtobufT): SdkT }} FromProtobufKeyFuncT\n */\n\n/**\n * This variable is strictly designed to prevent cyclic dependencies.\n */\nclass Cache {\n  constructor() {\n    /** @type {number} */\n    this._timeDrift = 0;\n    /** @type {FromProtobufKeyFuncT<HashgraphProto.proto.IContractID, ContractId> | null} */\n\n    this._contractId = null;\n    /** @type {FromProtobufKeyFuncT<HashgraphProto.proto.IKeyList, KeyList> | null} */\n\n    this._keyList = null;\n    /** @type {FromProtobufKeyFuncT<HashgraphProto.proto.IThresholdKey, KeyList> | null} */\n\n    this._thresholdKey = null;\n    /** @type {FromProtobufKeyFuncT<Uint8Array, PublicKey> | null} */\n\n    this._publicKeyED25519 = null;\n    /** @type {FromProtobufKeyFuncT<Uint8Array, PublicKey> | null} */\n\n    this._publicKeyECDSA = null;\n    /** @type {((key: cryptography.PrivateKey) => PrivateKey) | null} */\n\n    this._privateKeyConstructor = null;\n    /** @type {((shard: Long | number, realm: Long | number, key: PublicKey) => AccountId) | null} */\n\n    this._accountIdConstructor = null;\n    /** @type {FromProtobufKeyFuncT<HashgraphProto.proto.IContractID, ContractId> | null} */\n\n    this._delegateContractId = null;\n    /** @type {FromProtobufKeyFuncT<Uint8Array, EvmAddress> | null} */\n\n    this._evmAddress = null;\n    /** @type {((bytes: Uint8Array) => EthereumTransactionData) | null} */\n\n    this._ethereumTransactionDataLegacyFromBytes = null;\n    /** @type {((bytes: Uint8Array) => EthereumTransactionData) | null} */\n\n    this._ethereumTransactionDataEip1559FromBytes = null;\n    /** @type {(() => TransactionReceiptQuery) | null} */\n\n    this._transactionReceiptQueryConstructor = null;\n    /** @type {(() => TransactionRecordQuery) | null} */\n\n    this._transactionRecordQueryConstructor = null;\n  }\n  /**\n   * @param {number} timeDrift\n   */\n\n\n  setTimeDrift(timeDrift) {\n    this._timeDrift = timeDrift;\n  }\n  /**\n   * @returns {number}\n   */\n\n\n  get timeDrift() {\n    if (this._timeDrift == null) {\n      throw new Error(\"Cache.timeDrift was used before it was set\");\n    }\n\n    return this._timeDrift;\n  }\n  /**\n   * @param {FromProtobufKeyFuncT<HashgraphProto.proto.IContractID, ContractId>} contractId\n   */\n\n\n  setContractId(contractId) {\n    this._contractId = contractId;\n  }\n  /**\n   * @returns {FromProtobufKeyFuncT<HashgraphProto.proto.IContractID, ContractId>}\n   */\n\n\n  get contractId() {\n    if (this._contractId == null) {\n      throw new Error(\"Cache.contractId was used before it was set\");\n    }\n\n    return this._contractId;\n  }\n  /**\n   * @param {FromProtobufKeyFuncT<HashgraphProto.proto.IKeyList, KeyList>} keyList\n   */\n\n\n  setKeyList(keyList) {\n    this._keyList = keyList;\n  }\n  /**\n   * @returns {FromProtobufKeyFuncT<HashgraphProto.proto.IKeyList, KeyList>}\n   */\n\n\n  get keyList() {\n    if (this._keyList == null) {\n      throw new Error(\"Cache.keyList was used before it was set\");\n    }\n\n    return this._keyList;\n  }\n  /**\n   * @param {FromProtobufKeyFuncT<HashgraphProto.proto.IThresholdKey, KeyList>} thresholdKey\n   */\n\n\n  setThresholdKey(thresholdKey) {\n    this._thresholdKey = thresholdKey;\n  }\n  /**\n   * @returns {FromProtobufKeyFuncT<HashgraphProto.proto.IThresholdKey, KeyList>}\n   */\n\n\n  get thresholdKey() {\n    if (this._thresholdKey == null) {\n      throw new Error(\"Cache.thresholdKey was used before it was set\");\n    }\n\n    return this._thresholdKey;\n  }\n  /**\n   * @param {FromProtobufKeyFuncT<Uint8Array, PublicKey>} publicKeyED25519\n   */\n\n\n  setPublicKeyED25519(publicKeyED25519) {\n    this._publicKeyED25519 = publicKeyED25519;\n  }\n  /**\n   * @returns {FromProtobufKeyFuncT<Uint8Array, PublicKey>}\n   */\n\n\n  get publicKeyED25519() {\n    if (this._publicKeyED25519 == null) {\n      throw new Error(\"Cache.publicKeyED25519 was used before it was set\");\n    }\n\n    return this._publicKeyED25519;\n  }\n  /**\n   * @param {FromProtobufKeyFuncT<Uint8Array, PublicKey>} publicKeyECDSA\n   */\n\n\n  setPublicKeyECDSA(publicKeyECDSA) {\n    this._publicKeyECDSA = publicKeyECDSA;\n  }\n  /**\n   * @returns {FromProtobufKeyFuncT<Uint8Array, PublicKey>}\n   */\n\n\n  get publicKeyECDSA() {\n    if (this._publicKeyECDSA == null) {\n      throw new Error(\"Cache.publicKeyECDSA was used before it was set\");\n    }\n\n    return this._publicKeyECDSA;\n  }\n  /**\n   * @param {((key: cryptography.PrivateKey) => PrivateKey)} privateKeyConstructor\n   */\n\n\n  setPrivateKeyConstructor(privateKeyConstructor) {\n    this._privateKeyConstructor = privateKeyConstructor;\n  }\n  /**\n   * @returns {((key: cryptography.PrivateKey) => PrivateKey)}\n   */\n\n\n  get privateKeyConstructor() {\n    if (this._privateKeyConstructor == null) {\n      throw new Error(\"Cache.privateKeyConstructor was used before it was set\");\n    }\n\n    return this._privateKeyConstructor;\n  }\n  /**\n   * @param {((shard: Long | number, realm: Long | number, key: PublicKey) => AccountId)} accountIdConstructor\n   */\n\n\n  setAccountIdConstructor(accountIdConstructor) {\n    this._accountIdConstructor = accountIdConstructor;\n  }\n  /**\n   * @returns {((shard: Long | number, realm: Long | number, key: PublicKey) => AccountId)}\n   */\n\n\n  get accountIdConstructor() {\n    if (this._accountIdConstructor == null) {\n      throw new Error(\"Cache.accountIdConstructor was used before it was set\");\n    }\n\n    return this._accountIdConstructor;\n  }\n  /**\n   * @param {FromProtobufKeyFuncT<HashgraphProto.proto.IContractID, ContractId>} delegateContractId\n   */\n\n\n  setDelegateContractId(delegateContractId) {\n    this._delegateContractId = delegateContractId;\n  }\n  /**\n   * @returns {FromProtobufKeyFuncT<HashgraphProto.proto.IContractID, ContractId>}\n   */\n\n\n  get delegateContractId() {\n    if (this._delegateContractId == null) {\n      throw new Error(\"Cache.delegateContractId was used before it was set\");\n    }\n\n    return this._delegateContractId;\n  }\n  /**\n   * @param {FromProtobufKeyFuncT<Uint8Array, EvmAddress>} evmAddress\n   */\n\n\n  setEvmAddress(evmAddress) {\n    this._evmAddress = evmAddress;\n  }\n  /**\n   * @returns {FromProtobufKeyFuncT<Uint8Array, EvmAddress>}\n   */\n\n\n  get evmAddress() {\n    if (this._evmAddress == null) {\n      throw new Error(\"Cache.evmAddress was used before it was set\");\n    }\n\n    return this._evmAddress;\n  }\n  /**\n   * @param {((bytes: Uint8Array) => EthereumTransactionData)} ethereumTransactionDataLegacyFromBytes\n   */\n\n\n  setEthereumTransactionDataLegacyFromBytes(ethereumTransactionDataLegacyFromBytes) {\n    this._ethereumTransactionDataLegacyFromBytes = ethereumTransactionDataLegacyFromBytes;\n  }\n  /**\n   * @returns {((bytes: Uint8Array) => EthereumTransactionData)}\n   */\n\n\n  get ethereumTransactionDataLegacyFromBytes() {\n    if (this._ethereumTransactionDataLegacyFromBytes == null) {\n      throw new Error(\"Cache.ethereumTransactionDataLegacyFromBytes was used before it was set\");\n    }\n\n    return this._ethereumTransactionDataLegacyFromBytes;\n  }\n  /**\n   * @param {((bytes: Uint8Array) => EthereumTransactionData)} ethereumTransactionDataEip1559FromBytes\n   */\n\n\n  setEthereumTransactionDataEip1559FromBytes(ethereumTransactionDataEip1559FromBytes) {\n    this._ethereumTransactionDataEip1559FromBytes = ethereumTransactionDataEip1559FromBytes;\n  }\n  /**\n   * @returns {((bytes: Uint8Array) => EthereumTransactionData)}\n   */\n\n\n  get ethereumTransactionDataEip1559FromBytes() {\n    if (this._ethereumTransactionDataEip1559FromBytes == null) {\n      throw new Error(\"Cache.ethereumTransactionDataEip1559FromBytes was used before it was set\");\n    }\n\n    return this._ethereumTransactionDataEip1559FromBytes;\n  }\n  /**\n   * @param {(() => TransactionReceiptQuery)} transactionReceiptQueryConstructor\n   */\n\n\n  setTransactionReceiptQueryConstructor(transactionReceiptQueryConstructor) {\n    this._transactionReceiptQueryConstructor = transactionReceiptQueryConstructor;\n  }\n  /**\n   * @returns {(() => TransactionReceiptQuery)}\n   */\n\n\n  get transactionReceiptQueryConstructor() {\n    if (this._transactionReceiptQueryConstructor == null) {\n      throw new Error(\"Cache.transactionReceiptQueryConstructor was used before it was set\");\n    }\n\n    return this._transactionReceiptQueryConstructor;\n  }\n  /**\n   * @param {(() => TransactionRecordQuery)} transactionRecordQueryConstructor\n   */\n\n\n  setTransactionRecordQueryConstructor(transactionRecordQueryConstructor) {\n    this._transactionRecordQueryConstructor = transactionRecordQueryConstructor;\n  }\n  /**\n   * @returns {(() => TransactionRecordQuery)}\n   */\n\n\n  get transactionRecordQueryConstructor() {\n    if (this._transactionRecordQueryConstructor == null) {\n      throw new Error(\"Cache.transactionRecordQueryConstructor was used before it was set\");\n    }\n\n    return this._transactionRecordQueryConstructor;\n  }\n  /**\n   * @param {() => AddressBookQuery} addressBookQueryConstructor\n   */\n\n\n  setAddressBookQueryConstructor(addressBookQueryConstructor) {\n    this._addressBookQueryConstructor = addressBookQueryConstructor;\n  }\n  /**\n   * @returns {() => AddressBookQuery}\n   */\n\n\n  get addressBookQueryConstructor() {\n    if (this._addressBookQueryConstructor == null) {\n      throw new Error(\"Cache.addressBookQueryConstructor was used before it was set\");\n    }\n\n    return this._addressBookQueryConstructor;\n  }\n\n}\n\nconst CACHE = new Cache();\nexport default CACHE;","map":{"version":3,"sources":["/Users/jithendra/Desktop/Work/hbar-shop/hbar-shopify-coupon-client/node_modules/@hashgraph/sdk/src/Cache.js"],"names":["Cache","constructor","_timeDrift","_contractId","_keyList","_thresholdKey","_publicKeyED25519","_publicKeyECDSA","_privateKeyConstructor","_accountIdConstructor","_delegateContractId","_evmAddress","_ethereumTransactionDataLegacyFromBytes","_ethereumTransactionDataEip1559FromBytes","_transactionReceiptQueryConstructor","_transactionRecordQueryConstructor","setTimeDrift","timeDrift","Error","setContractId","contractId","setKeyList","keyList","setThresholdKey","thresholdKey","setPublicKeyED25519","publicKeyED25519","setPublicKeyECDSA","publicKeyECDSA","setPrivateKeyConstructor","privateKeyConstructor","setAccountIdConstructor","accountIdConstructor","setDelegateContractId","delegateContractId","setEvmAddress","evmAddress","setEthereumTransactionDataLegacyFromBytes","ethereumTransactionDataLegacyFromBytes","setEthereumTransactionDataEip1559FromBytes","ethereumTransactionDataEip1559FromBytes","setTransactionReceiptQueryConstructor","transactionReceiptQueryConstructor","setTransactionRecordQueryConstructor","transactionRecordQueryConstructor","setAddressBookQueryConstructor","addressBookQueryConstructor","_addressBookQueryConstructor","CACHE"],"mappings":"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","sourcesContent":["/*-\n * ‌\n * Hedera JavaScript SDK\n * ​\n * Copyright (C) 2020 - 2022 Hedera Hashgraph, LLC\n * ​\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * ‍\n */\n\n/**\n * @typedef {import(\"./contract/ContractId.js\").default} ContractId\n * @typedef {import(\"./account/AccountId.js\").default} AccountId\n * @typedef {import(\"./KeyList.js\").default} KeyList\n * @typedef {import(\"./PublicKey.js\").default} PublicKey\n * @typedef {import(\"./PrivateKey.js\").default} PrivateKey\n * @typedef {import(\"./EvmAddress.js\").default} EvmAddress\n * @typedef {import(\"./EthereumTransactionData.js\").default} EthereumTransactionData\n * @typedef {import(\"./transaction/TransactionReceiptQuery.js\").default} TransactionReceiptQuery\n * @typedef {import(\"./transaction/TransactionRecordQuery.js\").default} TransactionRecordQuery\n * @typedef {import(\"./network/AddressBookQuery.js\").default} AddressBookQuery\n */\n\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").proto.IKey} HashgraphProto.proto.IKey\n * @typedef {import(\"@hashgraph/proto\").proto.IKeyList} HashgraphProto.proto.IKeyList\n * @typedef {import(\"@hashgraph/proto\").proto.IThresholdKey} HashgraphProto.proto.IThresholdKey\n * @typedef {import(\"@hashgraph/proto\").proto.IContractID} HashgraphProto.proto.IContractID\n */\n\n/**\n * @namespace cryptography\n * @typedef {import(\"@hashgraph/cryptography\").PrivateKey} cryptography.PrivateKey\n */\n\n/**\n * @template {object} ProtobufT\n * @template {object} SdkT\n * @typedef {{ (proto: ProtobufT): SdkT }} FromProtobufKeyFuncT\n */\n\n/**\n * This variable is strictly designed to prevent cyclic dependencies.\n */\nclass Cache {\n    constructor() {\n        /** @type {number} */\n        this._timeDrift = 0;\n\n        /** @type {FromProtobufKeyFuncT<HashgraphProto.proto.IContractID, ContractId> | null} */\n        this._contractId = null;\n\n        /** @type {FromProtobufKeyFuncT<HashgraphProto.proto.IKeyList, KeyList> | null} */\n        this._keyList = null;\n\n        /** @type {FromProtobufKeyFuncT<HashgraphProto.proto.IThresholdKey, KeyList> | null} */\n        this._thresholdKey = null;\n\n        /** @type {FromProtobufKeyFuncT<Uint8Array, PublicKey> | null} */\n        this._publicKeyED25519 = null;\n\n        /** @type {FromProtobufKeyFuncT<Uint8Array, PublicKey> | null} */\n        this._publicKeyECDSA = null;\n\n        /** @type {((key: cryptography.PrivateKey) => PrivateKey) | null} */\n        this._privateKeyConstructor = null;\n\n        /** @type {((shard: Long | number, realm: Long | number, key: PublicKey) => AccountId) | null} */\n        this._accountIdConstructor = null;\n\n        /** @type {FromProtobufKeyFuncT<HashgraphProto.proto.IContractID, ContractId> | null} */\n        this._delegateContractId = null;\n\n        /** @type {FromProtobufKeyFuncT<Uint8Array, EvmAddress> | null} */\n        this._evmAddress = null;\n\n        /** @type {((bytes: Uint8Array) => EthereumTransactionData) | null} */\n        this._ethereumTransactionDataLegacyFromBytes = null;\n\n        /** @type {((bytes: Uint8Array) => EthereumTransactionData) | null} */\n        this._ethereumTransactionDataEip1559FromBytes = null;\n\n        /** @type {(() => TransactionReceiptQuery) | null} */\n        this._transactionReceiptQueryConstructor = null;\n\n        /** @type {(() => TransactionRecordQuery) | null} */\n        this._transactionRecordQueryConstructor = null;\n    }\n\n    /**\n     * @param {number} timeDrift\n     */\n    setTimeDrift(timeDrift) {\n        this._timeDrift = timeDrift;\n    }\n\n    /**\n     * @returns {number}\n     */\n    get timeDrift() {\n        if (this._timeDrift == null) {\n            throw new Error(\"Cache.timeDrift was used before it was set\");\n        }\n\n        return this._timeDrift;\n    }\n\n    /**\n     * @param {FromProtobufKeyFuncT<HashgraphProto.proto.IContractID, ContractId>} contractId\n     */\n    setContractId(contractId) {\n        this._contractId = contractId;\n    }\n\n    /**\n     * @returns {FromProtobufKeyFuncT<HashgraphProto.proto.IContractID, ContractId>}\n     */\n    get contractId() {\n        if (this._contractId == null) {\n            throw new Error(\"Cache.contractId was used before it was set\");\n        }\n\n        return this._contractId;\n    }\n\n    /**\n     * @param {FromProtobufKeyFuncT<HashgraphProto.proto.IKeyList, KeyList>} keyList\n     */\n    setKeyList(keyList) {\n        this._keyList = keyList;\n    }\n\n    /**\n     * @returns {FromProtobufKeyFuncT<HashgraphProto.proto.IKeyList, KeyList>}\n     */\n    get keyList() {\n        if (this._keyList == null) {\n            throw new Error(\"Cache.keyList was used before it was set\");\n        }\n\n        return this._keyList;\n    }\n\n    /**\n     * @param {FromProtobufKeyFuncT<HashgraphProto.proto.IThresholdKey, KeyList>} thresholdKey\n     */\n    setThresholdKey(thresholdKey) {\n        this._thresholdKey = thresholdKey;\n    }\n\n    /**\n     * @returns {FromProtobufKeyFuncT<HashgraphProto.proto.IThresholdKey, KeyList>}\n     */\n    get thresholdKey() {\n        if (this._thresholdKey == null) {\n            throw new Error(\"Cache.thresholdKey was used before it was set\");\n        }\n\n        return this._thresholdKey;\n    }\n\n    /**\n     * @param {FromProtobufKeyFuncT<Uint8Array, PublicKey>} publicKeyED25519\n     */\n    setPublicKeyED25519(publicKeyED25519) {\n        this._publicKeyED25519 = publicKeyED25519;\n    }\n\n    /**\n     * @returns {FromProtobufKeyFuncT<Uint8Array, PublicKey>}\n     */\n    get publicKeyED25519() {\n        if (this._publicKeyED25519 == null) {\n            throw new Error(\n                \"Cache.publicKeyED25519 was used before it was set\"\n            );\n        }\n\n        return this._publicKeyED25519;\n    }\n\n    /**\n     * @param {FromProtobufKeyFuncT<Uint8Array, PublicKey>} publicKeyECDSA\n     */\n    setPublicKeyECDSA(publicKeyECDSA) {\n        this._publicKeyECDSA = publicKeyECDSA;\n    }\n\n    /**\n     * @returns {FromProtobufKeyFuncT<Uint8Array, PublicKey>}\n     */\n    get publicKeyECDSA() {\n        if (this._publicKeyECDSA == null) {\n            throw new Error(\"Cache.publicKeyECDSA was used before it was set\");\n        }\n\n        return this._publicKeyECDSA;\n    }\n\n    /**\n     * @param {((key: cryptography.PrivateKey) => PrivateKey)} privateKeyConstructor\n     */\n    setPrivateKeyConstructor(privateKeyConstructor) {\n        this._privateKeyConstructor = privateKeyConstructor;\n    }\n\n    /**\n     * @returns {((key: cryptography.PrivateKey) => PrivateKey)}\n     */\n    get privateKeyConstructor() {\n        if (this._privateKeyConstructor == null) {\n            throw new Error(\n                \"Cache.privateKeyConstructor was used before it was set\"\n            );\n        }\n\n        return this._privateKeyConstructor;\n    }\n\n    /**\n     * @param {((shard: Long | number, realm: Long | number, key: PublicKey) => AccountId)} accountIdConstructor\n     */\n    setAccountIdConstructor(accountIdConstructor) {\n        this._accountIdConstructor = accountIdConstructor;\n    }\n\n    /**\n     * @returns {((shard: Long | number, realm: Long | number, key: PublicKey) => AccountId)}\n     */\n    get accountIdConstructor() {\n        if (this._accountIdConstructor == null) {\n            throw new Error(\n                \"Cache.accountIdConstructor was used before it was set\"\n            );\n        }\n\n        return this._accountIdConstructor;\n    }\n\n    /**\n     * @param {FromProtobufKeyFuncT<HashgraphProto.proto.IContractID, ContractId>} delegateContractId\n     */\n    setDelegateContractId(delegateContractId) {\n        this._delegateContractId = delegateContractId;\n    }\n\n    /**\n     * @returns {FromProtobufKeyFuncT<HashgraphProto.proto.IContractID, ContractId>}\n     */\n    get delegateContractId() {\n        if (this._delegateContractId == null) {\n            throw new Error(\n                \"Cache.delegateContractId was used before it was set\"\n            );\n        }\n\n        return this._delegateContractId;\n    }\n\n    /**\n     * @param {FromProtobufKeyFuncT<Uint8Array, EvmAddress>} evmAddress\n     */\n    setEvmAddress(evmAddress) {\n        this._evmAddress = evmAddress;\n    }\n\n    /**\n     * @returns {FromProtobufKeyFuncT<Uint8Array, EvmAddress>}\n     */\n    get evmAddress() {\n        if (this._evmAddress == null) {\n            throw new Error(\"Cache.evmAddress was used before it was set\");\n        }\n\n        return this._evmAddress;\n    }\n\n    /**\n     * @param {((bytes: Uint8Array) => EthereumTransactionData)} ethereumTransactionDataLegacyFromBytes\n     */\n    setEthereumTransactionDataLegacyFromBytes(\n        ethereumTransactionDataLegacyFromBytes\n    ) {\n        this._ethereumTransactionDataLegacyFromBytes =\n            ethereumTransactionDataLegacyFromBytes;\n    }\n\n    /**\n     * @returns {((bytes: Uint8Array) => EthereumTransactionData)}\n     */\n    get ethereumTransactionDataLegacyFromBytes() {\n        if (this._ethereumTransactionDataLegacyFromBytes == null) {\n            throw new Error(\n                \"Cache.ethereumTransactionDataLegacyFromBytes was used before it was set\"\n            );\n        }\n\n        return this._ethereumTransactionDataLegacyFromBytes;\n    }\n\n    /**\n     * @param {((bytes: Uint8Array) => EthereumTransactionData)} ethereumTransactionDataEip1559FromBytes\n     */\n    setEthereumTransactionDataEip1559FromBytes(\n        ethereumTransactionDataEip1559FromBytes\n    ) {\n        this._ethereumTransactionDataEip1559FromBytes =\n            ethereumTransactionDataEip1559FromBytes;\n    }\n\n    /**\n     * @returns {((bytes: Uint8Array) => EthereumTransactionData)}\n     */\n    get ethereumTransactionDataEip1559FromBytes() {\n        if (this._ethereumTransactionDataEip1559FromBytes == null) {\n            throw new Error(\n                \"Cache.ethereumTransactionDataEip1559FromBytes was used before it was set\"\n            );\n        }\n\n        return this._ethereumTransactionDataEip1559FromBytes;\n    }\n\n    /**\n     * @param {(() => TransactionReceiptQuery)} transactionReceiptQueryConstructor\n     */\n    setTransactionReceiptQueryConstructor(transactionReceiptQueryConstructor) {\n        this._transactionReceiptQueryConstructor =\n            transactionReceiptQueryConstructor;\n    }\n\n    /**\n     * @returns {(() => TransactionReceiptQuery)}\n     */\n    get transactionReceiptQueryConstructor() {\n        if (this._transactionReceiptQueryConstructor == null) {\n            throw new Error(\n                \"Cache.transactionReceiptQueryConstructor was used before it was set\"\n            );\n        }\n\n        return this._transactionReceiptQueryConstructor;\n    }\n\n    /**\n     * @param {(() => TransactionRecordQuery)} transactionRecordQueryConstructor\n     */\n    setTransactionRecordQueryConstructor(transactionRecordQueryConstructor) {\n        this._transactionRecordQueryConstructor =\n            transactionRecordQueryConstructor;\n    }\n\n    /**\n     * @returns {(() => TransactionRecordQuery)}\n     */\n    get transactionRecordQueryConstructor() {\n        if (this._transactionRecordQueryConstructor == null) {\n            throw new Error(\n                \"Cache.transactionRecordQueryConstructor was used before it was set\"\n            );\n        }\n\n        return this._transactionRecordQueryConstructor;\n    }\n\n    /**\n     * @param {() => AddressBookQuery} addressBookQueryConstructor\n     */\n    setAddressBookQueryConstructor(addressBookQueryConstructor) {\n        this._addressBookQueryConstructor = addressBookQueryConstructor;\n    }\n\n    /**\n     * @returns {() => AddressBookQuery}\n     */\n    get addressBookQueryConstructor() {\n        if (this._addressBookQueryConstructor == null) {\n            throw new Error(\n                \"Cache.addressBookQueryConstructor was used before it was set\"\n            );\n        }\n\n        return this._addressBookQueryConstructor;\n    }\n}\n\nconst CACHE = new Cache();\n\nexport default CACHE;\n"]},"metadata":{},"sourceType":"module"}