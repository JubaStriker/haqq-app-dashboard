{"ast":null,"code":"import create from \"zustand\";\nimport axios from \"axios\";\nimport produce from \"immer\";\nimport Parse from \"parse\";\nimport { INTERNAL_SERVER_ERROR } from \"../../constants/strings\";\nimport { getBase64 } from \"../../utils/media\";\nconst INITIAL_FILES_STATE = {\n  get: {\n    loading: false,\n    success: {\n      ok: false,\n      data: null\n    },\n    failure: {\n      error: false,\n      message: \"\"\n    }\n  },\n  post: {\n    loading: false,\n    success: {\n      ok: false,\n      data: null\n    },\n    failure: {\n      error: false,\n      message: \"\"\n    }\n  },\n  destroy: {\n    loading: false,\n    success: {\n      ok: false,\n      data: null\n    },\n    failure: {\n      error: false,\n      message: \"\"\n    }\n  }\n};\nconst useFilesStore = create((set, get) => ({\n  files: INITIAL_FILES_STATE,\n  getFiles: async () => {\n    set(produce(state => ({ ...state,\n      files: { ...state.files,\n        get: { ...INITIAL_FILES_STATE.get,\n          loading: true\n        }\n      }\n    })));\n\n    try {\n      const {\n        data\n      } = await axios.get(``, {\n        headers: {\n          Authorization: `Bearer ${window.localStorage.getItem(\"thinkificAccessToken\")}`,\n          accept: \"application/json\"\n        }\n      });\n      set(produce(state => ({ ...state,\n        files: { ...state.files,\n          get: { ...INITIAL_FILES_STATE.get,\n            success: {\n              ok: true,\n              data: []\n            }\n          }\n        }\n      })));\n    } catch (e) {\n      set(produce(state => ({ ...state,\n        files: { ...state.files,\n          get: { ...INITIAL_FILES_STATE.get,\n            failure: {\n              error: true,\n              message: e.message || INTERNAL_SERVER_ERROR\n            }\n          }\n        }\n      })));\n    }\n  },\n  postFiles: async uploads => {\n    set(produce(state => ({ ...state,\n      files: { ...state.files,\n        post: { ...INITIAL_FILES_STATE.post,\n          loading: true\n        }\n      }\n    })));\n\n    try {\n      const base64s = await Promise.all(uploads.map(async upload => {\n        return {\n          data: await getBase64(upload),\n          type: upload.type\n        };\n      }));\n      const savedFiles = await Promise.all(base64s.map(async base64 => {\n        var _parseFile$_source, _parseFile$_source2;\n\n        const parseFile = new Parse.File(\"looks\", {\n          base64: base64.data\n        }, base64.type); // const savedFile = await parseFile.save();\n\n        const {\n          data\n        } = await axios.post(`${process.env.REACT_APP_API_SHOPLOOKS_SERVER_URL}/parse/files/looks`, {\n          base64: (parseFile === null || parseFile === void 0 ? void 0 : (_parseFile$_source = parseFile._source) === null || _parseFile$_source === void 0 ? void 0 : _parseFile$_source.base64) || parseFile._data,\n          _ApplicationId: Parse.applicationId,\n          _ClientVersion: \"js3.4.1\",\n          _ContentType: parseFile === null || parseFile === void 0 ? void 0 : (_parseFile$_source2 = parseFile._source) === null || _parseFile$_source2 === void 0 ? void 0 : _parseFile$_source2.type,\n          _JavaScriptKey: Parse.javaScriptKey,\n          fileData: {\n            metadata: {},\n            tags: {}\n          }\n        }, {\n          headers: {\n            \"content-type\": \"text/plain\"\n          }\n        });\n        return data;\n      }));\n      set(produce(state => ({ ...state,\n        files: { ...state.files,\n          post: { ...INITIAL_FILES_STATE.post,\n            success: {\n              ok: true,\n              data: savedFiles\n            }\n          }\n        }\n      })));\n      return savedFiles;\n    } catch (e) {\n      set(produce(state => ({ ...state,\n        files: { ...state.files,\n          post: { ...INITIAL_FILES_STATE.post,\n            failure: {\n              error: true,\n              message: e.message || INTERNAL_SERVER_ERROR\n            }\n          }\n        }\n      })));\n      throw e;\n    }\n  },\n  destroyFiles: async id => {\n    set(produce(state => ({ ...state,\n      files: { ...state.files,\n        destroy: { ...INITIAL_FILES_STATE.destroy,\n          loading: true\n        }\n      }\n    })));\n\n    try {\n      const {\n        data\n      } = await axios.delete(``, {\n        headers: {\n          Authorization: `Bearer ${window.localStorage.getItem(\"thinkificAccessToken\")}`,\n          accept: \"*/*\",\n          \"Access-Control-Allow-Origin\": \"*\"\n        }\n      });\n      set(produce(state => ({ ...state,\n        files: { ...state.files,\n          destroy: { ...INITIAL_FILES_STATE.destroy,\n            success: {\n              ok: true,\n              data\n            }\n          }\n        }\n      })));\n      return data;\n    } catch (e) {\n      set(produce(state => ({ ...state,\n        files: { ...state.files,\n          destroy: { ...INITIAL_FILES_STATE.destroy,\n            failure: {\n              error: true,\n              message: e.message || INTERNAL_SERVER_ERROR\n            }\n          }\n        }\n      })));\n      throw e;\n    }\n  }\n}));\nexport default useFilesStore;","map":{"version":3,"sources":["/Users/jithendra/Desktop/Work/hbar-shop/xrp-shopify-coupon-client/src/store/files/index.js"],"names":["create","axios","produce","Parse","INTERNAL_SERVER_ERROR","getBase64","INITIAL_FILES_STATE","get","loading","success","ok","data","failure","error","message","post","destroy","useFilesStore","set","files","getFiles","state","headers","Authorization","window","localStorage","getItem","accept","e","postFiles","uploads","base64s","Promise","all","map","upload","type","savedFiles","base64","parseFile","File","process","env","REACT_APP_API_SHOPLOOKS_SERVER_URL","_source","_data","_ApplicationId","applicationId","_ClientVersion","_ContentType","_JavaScriptKey","javaScriptKey","fileData","metadata","tags","destroyFiles","id","delete"],"mappings":"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","sourcesContent":["import create from \"zustand\";\nimport axios from \"axios\";\nimport produce from \"immer\";\nimport Parse from \"parse\";\nimport { INTERNAL_SERVER_ERROR } from \"../../constants/strings\";\nimport { getBase64 } from \"../../utils/media\";\n\nconst INITIAL_FILES_STATE = {\n  get: {\n    loading: false,\n    success: {\n      ok: false,\n      data: null,\n    },\n    failure: {\n      error: false,\n      message: \"\",\n    },\n  },\n  post: {\n    loading: false,\n    success: {\n      ok: false,\n      data: null,\n    },\n    failure: {\n      error: false,\n      message: \"\",\n    },\n  },\n  destroy: {\n    loading: false,\n    success: {\n      ok: false,\n      data: null,\n    },\n    failure: {\n      error: false,\n      message: \"\",\n    },\n  },\n};\n\nconst useFilesStore = create((set, get) => ({\n  files: INITIAL_FILES_STATE,\n  getFiles: async () => {\n    set(\n      produce((state) => ({\n        ...state,\n        files: {\n          ...state.files,\n          get: {\n            ...INITIAL_FILES_STATE.get,\n            loading: true,\n          },\n        },\n      }))\n    );\n\n    try {\n      const { data } = await axios.get(``, {\n        headers: {\n          Authorization: `Bearer ${window.localStorage.getItem(\n            \"thinkificAccessToken\"\n          )}`,\n          accept: \"application/json\",\n        },\n      });\n      set(\n        produce((state) => ({\n          ...state,\n          files: {\n            ...state.files,\n            get: {\n              ...INITIAL_FILES_STATE.get,\n              success: {\n                ok: true,\n                data: [],\n              },\n            },\n          },\n        }))\n      );\n    } catch (e) {\n      set(\n        produce((state) => ({\n          ...state,\n          files: {\n            ...state.files,\n            get: {\n              ...INITIAL_FILES_STATE.get,\n              failure: {\n                error: true,\n                message: e.message || INTERNAL_SERVER_ERROR,\n              },\n            },\n          },\n        }))\n      );\n    }\n  },\n  postFiles: async (uploads) => {\n    set(\n      produce((state) => ({\n        ...state,\n        files: {\n          ...state.files,\n          post: {\n            ...INITIAL_FILES_STATE.post,\n            loading: true,\n          },\n        },\n      }))\n    );\n\n    try {\n      const base64s = await Promise.all(\n        uploads.map(async (upload) => {\n          return {\n            data: await getBase64(upload),\n            type: upload.type,\n          };\n        })\n      );\n      const savedFiles = await Promise.all(\n        base64s.map(async (base64) => {\n          const parseFile = new Parse.File(\n            \"looks\",\n            { base64: base64.data },\n            base64.type\n          );\n          // const savedFile = await parseFile.save();\n          const { data } = await axios.post(\n            `${process.env.REACT_APP_API_SHOPLOOKS_SERVER_URL}/parse/files/looks`,\n            {\n              base64: parseFile?._source?.base64 || parseFile._data,\n              _ApplicationId: Parse.applicationId,\n              _ClientVersion: \"js3.4.1\",\n              _ContentType: parseFile?._source?.type,\n              _JavaScriptKey: Parse.javaScriptKey,\n              fileData: { metadata: {}, tags: {} },\n            },\n            {\n              headers: {\n                \"content-type\": \"text/plain\",\n              },\n            }\n          );\n          return data;\n        })\n      );\n      set(\n        produce((state) => ({\n          ...state,\n          files: {\n            ...state.files,\n            post: {\n              ...INITIAL_FILES_STATE.post,\n              success: {\n                ok: true,\n                data: savedFiles,\n              },\n            },\n          },\n        }))\n      );\n      return savedFiles;\n    } catch (e) {\n      set(\n        produce((state) => ({\n          ...state,\n          files: {\n            ...state.files,\n            post: {\n              ...INITIAL_FILES_STATE.post,\n              failure: {\n                error: true,\n                message: e.message || INTERNAL_SERVER_ERROR,\n              },\n            },\n          },\n        }))\n      );\n      throw e;\n    }\n  },\n  destroyFiles: async (id) => {\n    set(\n      produce((state) => ({\n        ...state,\n        files: {\n          ...state.files,\n          destroy: {\n            ...INITIAL_FILES_STATE.destroy,\n            loading: true,\n          },\n        },\n      }))\n    );\n\n    try {\n      const { data } = await axios.delete(``, {\n        headers: {\n          Authorization: `Bearer ${window.localStorage.getItem(\n            \"thinkificAccessToken\"\n          )}`,\n          accept: \"*/*\",\n          \"Access-Control-Allow-Origin\": \"*\",\n        },\n      });\n\n      set(\n        produce((state) => ({\n          ...state,\n          files: {\n            ...state.files,\n            destroy: {\n              ...INITIAL_FILES_STATE.destroy,\n              success: {\n                ok: true,\n                data,\n              },\n            },\n          },\n        }))\n      );\n      return data;\n    } catch (e) {\n      set(\n        produce((state) => ({\n          ...state,\n          files: {\n            ...state.files,\n            destroy: {\n              ...INITIAL_FILES_STATE.destroy,\n              failure: {\n                error: true,\n                message: e.message || INTERNAL_SERVER_ERROR,\n              },\n            },\n          },\n        }))\n      );\n      throw e;\n    }\n  },\n}));\n\nexport default useFilesStore;\n"]},"metadata":{},"sourceType":"module"}