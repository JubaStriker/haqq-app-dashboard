{"ast":null,"code":"/*-\n * ‌\n * Hedera JavaScript SDK\n * ​\n * Copyright (C) 2020 - 2022 Hedera Hashgraph, LLC\n * ​\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * ‍\n */\nimport ExchangeRate from \"./ExchangeRate.js\";\nimport * as HashgraphProto from \"@hashgraph/proto\";\nconst {\n  proto\n} = HashgraphProto;\nexport default class ExchangeRates {\n  /**\n   * @private\n   * @param {object} props\n   * @param {ExchangeRate} props.currentRate\n   * @param {ExchangeRate} props.nextRate\n   */\n  constructor(props) {\n    /**\n     * @readonly\n     */\n    this.currentRate = props.currentRate;\n    /**\n     * @readonly\n     */\n\n    this.nextRate = props.nextRate;\n    Object.freeze(this);\n  }\n  /**\n   * @internal\n   * @param {HashgraphProto.proto.IExchangeRateSet} rateSet\n   * @returns {ExchangeRates}\n   */\n\n\n  static _fromProtobuf(rateSet) {\n    return new ExchangeRates({\n      currentRate: ExchangeRate._fromProtobuf(\n      /** @type {HashgraphProto.proto.IExchangeRate} */\n      rateSet.currentRate),\n      nextRate: ExchangeRate._fromProtobuf(\n      /** @type {HashgraphProto.proto.IExchangeRate} */\n      rateSet.nextRate)\n    });\n  }\n  /**\n   * @internal\n   * @returns {HashgraphProto.proto.IExchangeRateSet}\n   */\n\n\n  _toProtobuf() {\n    return {\n      currentRate: this.currentRate._toProtobuf(),\n      nextRate: this.nextRate._toProtobuf()\n    };\n  }\n  /**\n   * @param {Uint8Array} bytes\n   * @returns {ExchangeRates}\n   */\n\n\n  static fromBytes(bytes) {\n    return ExchangeRates._fromProtobuf(proto.ExchangeRateSet.decode(bytes));\n  }\n\n}","map":{"version":3,"sources":["/Users/jithendra/Desktop/Work/hbar-shop/hbar-shop-dashboard/node_modules/@hashgraph/sdk/src/ExchangeRates.js"],"names":["ExchangeRate","HashgraphProto","proto","ExchangeRates","constructor","props","currentRate","nextRate","Object","freeze","_fromProtobuf","rateSet","_toProtobuf","fromBytes","bytes","ExchangeRateSet","decode"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,YAAP,MAAyB,mBAAzB;AACA,OAAO,KAAKC,cAAZ,MAAgC,kBAAhC;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAYD,cAAlB;AAEA,eAAe,MAAME,aAAN,CAAoB;AAC/B;AACJ;AACA;AACA;AACA;AACA;AACIC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf;AACR;AACA;AACQ,SAAKC,WAAL,GAAmBD,KAAK,CAACC,WAAzB;AAEA;AACR;AACA;;AACQ,SAAKC,QAAL,GAAgBF,KAAK,CAACE,QAAtB;AAEAC,IAAAA,MAAM,CAACC,MAAP,CAAc,IAAd;AACH;AAED;AACJ;AACA;AACA;AACA;;;AACwB,SAAbC,aAAa,CAACC,OAAD,EAAU;AAC1B,WAAO,IAAIR,aAAJ,CAAkB;AACrBG,MAAAA,WAAW,EAAEN,YAAY,CAACU,aAAb;AACT;AACIC,MAAAA,OAAO,CAACL,WAFH,CADQ;AAMrBC,MAAAA,QAAQ,EAAEP,YAAY,CAACU,aAAb;AACN;AACIC,MAAAA,OAAO,CAACJ,QAFN;AANW,KAAlB,CAAP;AAYH;AAED;AACJ;AACA;AACA;;;AACIK,EAAAA,WAAW,GAAG;AACV,WAAO;AACHN,MAAAA,WAAW,EAAE,KAAKA,WAAL,CAAiBM,WAAjB,EADV;AAEHL,MAAAA,QAAQ,EAAE,KAAKA,QAAL,CAAcK,WAAd;AAFP,KAAP;AAIH;AAED;AACJ;AACA;AACA;;;AACoB,SAATC,SAAS,CAACC,KAAD,EAAQ;AACpB,WAAOX,aAAa,CAACO,aAAd,CAA4BR,KAAK,CAACa,eAAN,CAAsBC,MAAtB,CAA6BF,KAA7B,CAA5B,CAAP;AACH;;AA1D8B","sourcesContent":["/*-\n * ‌\n * Hedera JavaScript SDK\n * ​\n * Copyright (C) 2020 - 2022 Hedera Hashgraph, LLC\n * ​\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * ‍\n */\n\nimport ExchangeRate from \"./ExchangeRate.js\";\nimport * as HashgraphProto from \"@hashgraph/proto\";\n\nconst { proto } = HashgraphProto;\n\nexport default class ExchangeRates {\n    /**\n     * @private\n     * @param {object} props\n     * @param {ExchangeRate} props.currentRate\n     * @param {ExchangeRate} props.nextRate\n     */\n    constructor(props) {\n        /**\n         * @readonly\n         */\n        this.currentRate = props.currentRate;\n\n        /**\n         * @readonly\n         */\n        this.nextRate = props.nextRate;\n\n        Object.freeze(this);\n    }\n\n    /**\n     * @internal\n     * @param {HashgraphProto.proto.IExchangeRateSet} rateSet\n     * @returns {ExchangeRates}\n     */\n    static _fromProtobuf(rateSet) {\n        return new ExchangeRates({\n            currentRate: ExchangeRate._fromProtobuf(\n                /** @type {HashgraphProto.proto.IExchangeRate} */ (\n                    rateSet.currentRate\n                )\n            ),\n            nextRate: ExchangeRate._fromProtobuf(\n                /** @type {HashgraphProto.proto.IExchangeRate} */ (\n                    rateSet.nextRate\n                )\n            ),\n        });\n    }\n\n    /**\n     * @internal\n     * @returns {HashgraphProto.proto.IExchangeRateSet}\n     */\n    _toProtobuf() {\n        return {\n            currentRate: this.currentRate._toProtobuf(),\n            nextRate: this.nextRate._toProtobuf(),\n        };\n    }\n\n    /**\n     * @param {Uint8Array} bytes\n     * @returns {ExchangeRates}\n     */\n    static fromBytes(bytes) {\n        return ExchangeRates._fromProtobuf(proto.ExchangeRateSet.decode(bytes));\n    }\n}\n"]},"metadata":{},"sourceType":"module"}