{"ast":null,"code":"\"use strict\"; //---------------------------------------------------------------------\n// QRCode for JavaScript\n//\n// Copyright (c) 2009 Kazuhiko Arase\n// Re-written in TypeScript by Makito <sumimakito@hotmail.com>\n//\n// URL: http://www.d-project.com/\n//\n// Licensed under the MIT license:\n//   http://www.opensource.org/licenses/mit-license.php\n//\n// The word \"QR Code\" is registered trademark of\n// DENSO WAVE INCORPORATED\n//   http://www.denso-wave.com/qrcode/faqpatent-e.html\n//\n//---------------------------------------------------------------------\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.QRMath = exports.QRUtil = exports.QRMaskPattern = exports.QRErrorCorrectLevel = exports.QRCodeModel = void 0;\n\nfunction checkQRVersion(version, sText, nCorrectLevel) {\n  var length = _getUTF8Length(sText);\n\n  var i = version - 1;\n  var nLimit = 0;\n\n  switch (nCorrectLevel) {\n    case exports.QRErrorCorrectLevel.L:\n      nLimit = QRCodeLimitLength[i][0];\n      break;\n\n    case exports.QRErrorCorrectLevel.M:\n      nLimit = QRCodeLimitLength[i][1];\n      break;\n\n    case exports.QRErrorCorrectLevel.Q:\n      nLimit = QRCodeLimitLength[i][2];\n      break;\n\n    case exports.QRErrorCorrectLevel.H:\n      nLimit = QRCodeLimitLength[i][3];\n      break;\n  }\n\n  return length <= nLimit;\n}\n\nfunction _getTypeNumber(sText, nCorrectLevel) {\n  var nType = 1;\n\n  var length = _getUTF8Length(sText);\n\n  for (var i = 0, len = QRCodeLimitLength.length; i < len; i++) {\n    var nLimit = 0;\n\n    switch (nCorrectLevel) {\n      case exports.QRErrorCorrectLevel.L:\n        nLimit = QRCodeLimitLength[i][0];\n        break;\n\n      case exports.QRErrorCorrectLevel.M:\n        nLimit = QRCodeLimitLength[i][1];\n        break;\n\n      case exports.QRErrorCorrectLevel.Q:\n        nLimit = QRCodeLimitLength[i][2];\n        break;\n\n      case exports.QRErrorCorrectLevel.H:\n        nLimit = QRCodeLimitLength[i][3];\n        break;\n    }\n\n    if (length <= nLimit) {\n      break;\n    } else {\n      nType++;\n    }\n  }\n\n  if (nType > QRCodeLimitLength.length) {\n    throw new Error(\"Too long data\");\n  }\n\n  return nType;\n}\n\nfunction _getUTF8Length(sText) {\n  var replacedText = encodeURI(sText).toString().replace(/\\%[0-9a-fA-F]{2}/g, \"a\");\n  return replacedText.length + (replacedText.length != Number(sText) ? 3 : 0);\n}\n\nvar QR8bitByte =\n/** @class */\nfunction () {\n  function QR8bitByte(data) {\n    this.mode = QRMode.MODE_8BIT_BYTE;\n    this.parsedData = [];\n    this.data = data;\n    var byteArrays = []; // Added to support UTF-8 Characters\n\n    for (var i = 0, l = this.data.length; i < l; i++) {\n      var byteArray = [];\n      var code = this.data.charCodeAt(i);\n\n      if (code > 0x10000) {\n        byteArray[0] = 0xf0 | (code & 0x1c0000) >>> 18;\n        byteArray[1] = 0x80 | (code & 0x3f000) >>> 12;\n        byteArray[2] = 0x80 | (code & 0xfc0) >>> 6;\n        byteArray[3] = 0x80 | code & 0x3f;\n      } else if (code > 0x800) {\n        byteArray[0] = 0xe0 | (code & 0xf000) >>> 12;\n        byteArray[1] = 0x80 | (code & 0xfc0) >>> 6;\n        byteArray[2] = 0x80 | code & 0x3f;\n      } else if (code > 0x80) {\n        byteArray[0] = 0xc0 | (code & 0x7c0) >>> 6;\n        byteArray[1] = 0x80 | code & 0x3f;\n      } else {\n        byteArray[0] = code;\n      }\n\n      byteArrays.push(byteArray);\n    }\n\n    this.parsedData = Array.prototype.concat.apply([], byteArrays);\n\n    if (this.parsedData.length != this.data.length) {\n      this.parsedData.unshift(191);\n      this.parsedData.unshift(187);\n      this.parsedData.unshift(239);\n    }\n  }\n\n  QR8bitByte.prototype.getLength = function () {\n    return this.parsedData.length;\n  };\n\n  QR8bitByte.prototype.write = function (buffer) {\n    for (var i = 0, l = this.parsedData.length; i < l; i++) {\n      buffer.put(this.parsedData[i], 8);\n    }\n  };\n\n  return QR8bitByte;\n}();\n\nvar QRCodeModel =\n/** @class */\nfunction () {\n  function QRCodeModel(typeNumber, errorCorrectLevel) {\n    if (typeNumber === void 0) {\n      typeNumber = -1;\n    }\n\n    if (errorCorrectLevel === void 0) {\n      errorCorrectLevel = exports.QRErrorCorrectLevel.L;\n    }\n\n    this.moduleCount = 0;\n    this.dataList = [];\n    this.typeNumber = typeNumber;\n    this.errorCorrectLevel = errorCorrectLevel;\n    this.moduleCount = 0;\n    this.dataList = [];\n  }\n\n  QRCodeModel.prototype.addData = function (data) {\n    if (this.typeNumber <= 0) {\n      this.typeNumber = _getTypeNumber(data, this.errorCorrectLevel);\n    } else if (this.typeNumber > 40) {\n      throw new Error(\"Invalid QR version: \" + this.typeNumber);\n    } else {\n      if (!checkQRVersion(this.typeNumber, data, this.errorCorrectLevel)) {\n        throw new Error(\"Data is too long for QR version: \" + this.typeNumber);\n      }\n    }\n\n    var newData = new QR8bitByte(data);\n    this.dataList.push(newData);\n    this.dataCache = undefined;\n  };\n\n  QRCodeModel.prototype.isDark = function (row, col) {\n    if (row < 0 || this.moduleCount <= row || col < 0 || this.moduleCount <= col) {\n      throw new Error(row + \",\" + col);\n    }\n\n    return this.modules[row][col];\n  };\n\n  QRCodeModel.prototype.getModuleCount = function () {\n    return this.moduleCount;\n  };\n\n  QRCodeModel.prototype.make = function () {\n    this.makeImpl(false, this.getBestMaskPattern());\n  };\n\n  QRCodeModel.prototype.makeImpl = function (test, maskPattern) {\n    this.moduleCount = this.typeNumber * 4 + 17;\n    this.modules = new Array(this.moduleCount);\n\n    for (var row = 0; row < this.moduleCount; row++) {\n      this.modules[row] = new Array(this.moduleCount);\n\n      for (var col = 0; col < this.moduleCount; col++) {\n        this.modules[row][col] = null;\n      }\n    }\n\n    this.setupPositionProbePattern(0, 0);\n    this.setupPositionProbePattern(this.moduleCount - 7, 0);\n    this.setupPositionProbePattern(0, this.moduleCount - 7);\n    this.setupPositionAdjustPattern();\n    this.setupTimingPattern();\n    this.setupTypeInfo(test, maskPattern);\n\n    if (this.typeNumber >= 7) {\n      this.setupTypeNumber(test);\n    }\n\n    if (this.dataCache == null) {\n      this.dataCache = QRCodeModel.createData(this.typeNumber, this.errorCorrectLevel, this.dataList);\n    }\n\n    this.mapData(this.dataCache, maskPattern);\n  };\n\n  QRCodeModel.prototype.setupPositionProbePattern = function (row, col) {\n    for (var r = -1; r <= 7; r++) {\n      if (row + r <= -1 || this.moduleCount <= row + r) continue;\n\n      for (var c = -1; c <= 7; c++) {\n        if (col + c <= -1 || this.moduleCount <= col + c) continue;\n\n        if (0 <= r && r <= 6 && (c == 0 || c == 6) || 0 <= c && c <= 6 && (r == 0 || r == 6) || 2 <= r && r <= 4 && 2 <= c && c <= 4) {\n          this.modules[row + r][col + c] = true;\n        } else {\n          this.modules[row + r][col + c] = false;\n        }\n      }\n    }\n  };\n\n  QRCodeModel.prototype.getBestMaskPattern = function () {\n    if (Number.isInteger(this.maskPattern) && Object.values(exports.QRMaskPattern).includes(this.maskPattern)) {\n      return this.maskPattern;\n    }\n\n    var minLostPoint = 0;\n    var pattern = 0;\n\n    for (var i = 0; i < 8; i++) {\n      this.makeImpl(true, i);\n      var lostPoint = QRUtil.getLostPoint(this);\n\n      if (i == 0 || minLostPoint > lostPoint) {\n        minLostPoint = lostPoint;\n        pattern = i;\n      }\n    }\n\n    return pattern;\n  };\n\n  QRCodeModel.prototype.setupTimingPattern = function () {\n    for (var r = 8; r < this.moduleCount - 8; r++) {\n      if (this.modules[r][6] != null) {\n        continue;\n      }\n\n      this.modules[r][6] = r % 2 == 0;\n    }\n\n    for (var c = 8; c < this.moduleCount - 8; c++) {\n      if (this.modules[6][c] != null) {\n        continue;\n      }\n\n      this.modules[6][c] = c % 2 == 0;\n    }\n  };\n\n  QRCodeModel.prototype.setupPositionAdjustPattern = function () {\n    var pos = QRUtil.getPatternPosition(this.typeNumber);\n\n    for (var i = 0; i < pos.length; i++) {\n      for (var j = 0; j < pos.length; j++) {\n        var row = pos[i];\n        var col = pos[j];\n\n        if (this.modules[row][col] != null) {\n          continue;\n        }\n\n        for (var r = -2; r <= 2; r++) {\n          for (var c = -2; c <= 2; c++) {\n            if (r == -2 || r == 2 || c == -2 || c == 2 || r == 0 && c == 0) {\n              this.modules[row + r][col + c] = true;\n            } else {\n              this.modules[row + r][col + c] = false;\n            }\n          }\n        }\n      }\n    }\n  };\n\n  QRCodeModel.prototype.setupTypeNumber = function (test) {\n    var bits = QRUtil.getBCHTypeNumber(this.typeNumber);\n\n    for (var i = 0; i < 18; i++) {\n      var mod = !test && (bits >> i & 1) == 1;\n      this.modules[Math.floor(i / 3)][i % 3 + this.moduleCount - 8 - 3] = mod;\n    }\n\n    for (var i = 0; i < 18; i++) {\n      var mod = !test && (bits >> i & 1) == 1;\n      this.modules[i % 3 + this.moduleCount - 8 - 3][Math.floor(i / 3)] = mod;\n    }\n  };\n\n  QRCodeModel.prototype.setupTypeInfo = function (test, maskPattern) {\n    var data = this.errorCorrectLevel << 3 | maskPattern;\n    var bits = QRUtil.getBCHTypeInfo(data);\n\n    for (var i = 0; i < 15; i++) {\n      var mod = !test && (bits >> i & 1) == 1;\n\n      if (i < 6) {\n        this.modules[i][8] = mod;\n      } else if (i < 8) {\n        this.modules[i + 1][8] = mod;\n      } else {\n        this.modules[this.moduleCount - 15 + i][8] = mod;\n      }\n    }\n\n    for (var i = 0; i < 15; i++) {\n      var mod = !test && (bits >> i & 1) == 1;\n\n      if (i < 8) {\n        this.modules[8][this.moduleCount - i - 1] = mod;\n      } else if (i < 9) {\n        this.modules[8][15 - i - 1 + 1] = mod;\n      } else {\n        this.modules[8][15 - i - 1] = mod;\n      }\n    }\n\n    this.modules[this.moduleCount - 8][8] = !test;\n  };\n\n  QRCodeModel.prototype.mapData = function (data, maskPattern) {\n    var inc = -1;\n    var row = this.moduleCount - 1;\n    var bitIndex = 7;\n    var byteIndex = 0;\n\n    for (var col = this.moduleCount - 1; col > 0; col -= 2) {\n      if (col == 6) col--;\n\n      while (true) {\n        for (var c = 0; c < 2; c++) {\n          if (this.modules[row][col - c] == null) {\n            var dark = false;\n\n            if (byteIndex < data.length) {\n              dark = (data[byteIndex] >>> bitIndex & 1) == 1;\n            }\n\n            var mask = QRUtil.getMask(maskPattern, row, col - c);\n\n            if (mask) {\n              dark = !dark;\n            }\n\n            this.modules[row][col - c] = dark;\n            bitIndex--;\n\n            if (bitIndex == -1) {\n              byteIndex++;\n              bitIndex = 7;\n            }\n          }\n        }\n\n        row += inc;\n\n        if (row < 0 || this.moduleCount <= row) {\n          row -= inc;\n          inc = -inc;\n          break;\n        }\n      }\n    }\n  };\n\n  QRCodeModel.createData = function (typeNumber, errorCorrectLevel, dataList) {\n    var rsBlocks = QRRSBlock.getRSBlocks(typeNumber, errorCorrectLevel);\n    var buffer = new QRBitBuffer();\n\n    for (var i = 0; i < dataList.length; i++) {\n      var data = dataList[i];\n      buffer.put(data.mode, 4);\n      buffer.put(data.getLength(), QRUtil.getLengthInBits(data.mode, typeNumber));\n      data.write(buffer);\n    }\n\n    var totalDataCount = 0;\n\n    for (var i = 0; i < rsBlocks.length; i++) {\n      totalDataCount += rsBlocks[i].dataCount;\n    }\n\n    if (buffer.getLengthInBits() > totalDataCount * 8) {\n      throw new Error(\"code length overflow. (\" + buffer.getLengthInBits() + \">\" + totalDataCount * 8 + \")\");\n    }\n\n    if (buffer.getLengthInBits() + 4 <= totalDataCount * 8) {\n      buffer.put(0, 4);\n    }\n\n    while (buffer.getLengthInBits() % 8 != 0) {\n      buffer.putBit(false);\n    }\n\n    while (true) {\n      if (buffer.getLengthInBits() >= totalDataCount * 8) {\n        break;\n      }\n\n      buffer.put(QRCodeModel.PAD0, 8);\n\n      if (buffer.getLengthInBits() >= totalDataCount * 8) {\n        break;\n      }\n\n      buffer.put(QRCodeModel.PAD1, 8);\n    }\n\n    return QRCodeModel.createBytes(buffer, rsBlocks);\n  };\n\n  QRCodeModel.createBytes = function (buffer, rsBlocks) {\n    var offset = 0;\n    var maxDcCount = 0;\n    var maxEcCount = 0;\n    var dcdata = new Array(rsBlocks.length);\n    var ecdata = new Array(rsBlocks.length);\n\n    for (var r = 0; r < rsBlocks.length; r++) {\n      var dcCount = rsBlocks[r].dataCount;\n      var ecCount = rsBlocks[r].totalCount - dcCount;\n      maxDcCount = Math.max(maxDcCount, dcCount);\n      maxEcCount = Math.max(maxEcCount, ecCount);\n      dcdata[r] = new Array(dcCount);\n\n      for (var i = 0; i < dcdata[r].length; i++) {\n        dcdata[r][i] = 0xff & buffer.buffer[i + offset];\n      }\n\n      offset += dcCount;\n      var rsPoly = QRUtil.getErrorCorrectPolynomial(ecCount);\n      var rawPoly = new QRPolynomial(dcdata[r], rsPoly.getLength() - 1);\n      var modPoly = rawPoly.mod(rsPoly);\n      ecdata[r] = new Array(rsPoly.getLength() - 1);\n\n      for (var i = 0; i < ecdata[r].length; i++) {\n        var modIndex = i + modPoly.getLength() - ecdata[r].length;\n        ecdata[r][i] = modIndex >= 0 ? modPoly.get(modIndex) : 0;\n      }\n    }\n\n    var totalCodeCount = 0;\n\n    for (var i = 0; i < rsBlocks.length; i++) {\n      totalCodeCount += rsBlocks[i].totalCount;\n    }\n\n    var data = new Array(totalCodeCount);\n    var index = 0;\n\n    for (var i = 0; i < maxDcCount; i++) {\n      for (var r = 0; r < rsBlocks.length; r++) {\n        if (i < dcdata[r].length) {\n          data[index++] = dcdata[r][i];\n        }\n      }\n    }\n\n    for (var i = 0; i < maxEcCount; i++) {\n      for (var r = 0; r < rsBlocks.length; r++) {\n        if (i < ecdata[r].length) {\n          data[index++] = ecdata[r][i];\n        }\n      }\n    }\n\n    return data;\n  };\n\n  QRCodeModel.PAD0 = 0xec;\n  QRCodeModel.PAD1 = 0x11;\n  return QRCodeModel;\n}();\n\nexports.QRCodeModel = QRCodeModel;\nexports.QRErrorCorrectLevel = {\n  L: 1,\n  M: 0,\n  Q: 3,\n  H: 2\n};\nvar QRMode = {\n  MODE_NUMBER: 1 << 0,\n  MODE_ALPHA_NUM: 1 << 1,\n  MODE_8BIT_BYTE: 1 << 2,\n  MODE_KANJI: 1 << 3\n};\nexports.QRMaskPattern = {\n  PATTERN000: 0,\n  PATTERN001: 1,\n  PATTERN010: 2,\n  PATTERN011: 3,\n  PATTERN100: 4,\n  PATTERN101: 5,\n  PATTERN110: 6,\n  PATTERN111: 7\n};\n\nvar QRUtil =\n/** @class */\nfunction () {\n  function QRUtil() {}\n\n  QRUtil.getBCHTypeInfo = function (data) {\n    var d = data << 10;\n\n    while (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G15) >= 0) {\n      d ^= QRUtil.G15 << QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G15);\n    }\n\n    return (data << 10 | d) ^ QRUtil.G15_MASK;\n  };\n\n  QRUtil.getBCHTypeNumber = function (data) {\n    var d = data << 12;\n\n    while (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G18) >= 0) {\n      d ^= QRUtil.G18 << QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G18);\n    }\n\n    return data << 12 | d;\n  };\n\n  QRUtil.getBCHDigit = function (data) {\n    var digit = 0;\n\n    while (data != 0) {\n      digit++;\n      data >>>= 1;\n    }\n\n    return digit;\n  };\n\n  QRUtil.getPatternPosition = function (typeNumber) {\n    return QRUtil.PATTERN_POSITION_TABLE[typeNumber - 1];\n  };\n\n  QRUtil.getMask = function (maskPattern, i, j) {\n    switch (maskPattern) {\n      case exports.QRMaskPattern.PATTERN000:\n        return (i + j) % 2 == 0;\n\n      case exports.QRMaskPattern.PATTERN001:\n        return i % 2 == 0;\n\n      case exports.QRMaskPattern.PATTERN010:\n        return j % 3 == 0;\n\n      case exports.QRMaskPattern.PATTERN011:\n        return (i + j) % 3 == 0;\n\n      case exports.QRMaskPattern.PATTERN100:\n        return (Math.floor(i / 2) + Math.floor(j / 3)) % 2 == 0;\n\n      case exports.QRMaskPattern.PATTERN101:\n        return i * j % 2 + i * j % 3 == 0;\n\n      case exports.QRMaskPattern.PATTERN110:\n        return (i * j % 2 + i * j % 3) % 2 == 0;\n\n      case exports.QRMaskPattern.PATTERN111:\n        return (i * j % 3 + (i + j) % 2) % 2 == 0;\n\n      default:\n        throw new Error(\"bad maskPattern:\" + maskPattern);\n    }\n  };\n\n  QRUtil.getErrorCorrectPolynomial = function (errorCorrectLength) {\n    var a = new QRPolynomial([1], 0);\n\n    for (var i = 0; i < errorCorrectLength; i++) {\n      a = a.multiply(new QRPolynomial([1, QRMath.gexp(i)], 0));\n    }\n\n    return a;\n  };\n\n  QRUtil.getLengthInBits = function (mode, type) {\n    if (1 <= type && type < 10) {\n      switch (mode) {\n        case QRMode.MODE_NUMBER:\n          return 10;\n\n        case QRMode.MODE_ALPHA_NUM:\n          return 9;\n\n        case QRMode.MODE_8BIT_BYTE:\n          return 8;\n\n        case QRMode.MODE_KANJI:\n          return 8;\n\n        default:\n          throw new Error(\"mode:\" + mode);\n      }\n    } else if (type < 27) {\n      switch (mode) {\n        case QRMode.MODE_NUMBER:\n          return 12;\n\n        case QRMode.MODE_ALPHA_NUM:\n          return 11;\n\n        case QRMode.MODE_8BIT_BYTE:\n          return 16;\n\n        case QRMode.MODE_KANJI:\n          return 10;\n\n        default:\n          throw new Error(\"mode:\" + mode);\n      }\n    } else if (type < 41) {\n      switch (mode) {\n        case QRMode.MODE_NUMBER:\n          return 14;\n\n        case QRMode.MODE_ALPHA_NUM:\n          return 13;\n\n        case QRMode.MODE_8BIT_BYTE:\n          return 16;\n\n        case QRMode.MODE_KANJI:\n          return 12;\n\n        default:\n          throw new Error(\"mode:\" + mode);\n      }\n    } else {\n      throw new Error(\"type:\" + type);\n    }\n  };\n\n  QRUtil.getLostPoint = function (qrCode) {\n    var moduleCount = qrCode.getModuleCount();\n    var lostPoint = 0;\n\n    for (var row = 0; row < moduleCount; row++) {\n      for (var col = 0; col < moduleCount; col++) {\n        var sameCount = 0;\n        var dark = qrCode.isDark(row, col);\n\n        for (var r = -1; r <= 1; r++) {\n          if (row + r < 0 || moduleCount <= row + r) {\n            continue;\n          }\n\n          for (var c = -1; c <= 1; c++) {\n            if (col + c < 0 || moduleCount <= col + c) {\n              continue;\n            }\n\n            if (r == 0 && c == 0) {\n              continue;\n            }\n\n            if (dark == qrCode.isDark(row + r, col + c)) {\n              sameCount++;\n            }\n          }\n        }\n\n        if (sameCount > 5) {\n          lostPoint += 3 + sameCount - 5;\n        }\n      }\n    }\n\n    for (var row = 0; row < moduleCount - 1; row++) {\n      for (var col = 0; col < moduleCount - 1; col++) {\n        var count = 0;\n        if (qrCode.isDark(row, col)) count++;\n        if (qrCode.isDark(row + 1, col)) count++;\n        if (qrCode.isDark(row, col + 1)) count++;\n        if (qrCode.isDark(row + 1, col + 1)) count++;\n\n        if (count == 0 || count == 4) {\n          lostPoint += 3;\n        }\n      }\n    }\n\n    for (var row = 0; row < moduleCount; row++) {\n      for (var col = 0; col < moduleCount - 6; col++) {\n        if (qrCode.isDark(row, col) && !qrCode.isDark(row, col + 1) && qrCode.isDark(row, col + 2) && qrCode.isDark(row, col + 3) && qrCode.isDark(row, col + 4) && !qrCode.isDark(row, col + 5) && qrCode.isDark(row, col + 6)) {\n          lostPoint += 40;\n        }\n      }\n    }\n\n    for (var col = 0; col < moduleCount; col++) {\n      for (var row = 0; row < moduleCount - 6; row++) {\n        if (qrCode.isDark(row, col) && !qrCode.isDark(row + 1, col) && qrCode.isDark(row + 2, col) && qrCode.isDark(row + 3, col) && qrCode.isDark(row + 4, col) && !qrCode.isDark(row + 5, col) && qrCode.isDark(row + 6, col)) {\n          lostPoint += 40;\n        }\n      }\n    }\n\n    var darkCount = 0;\n\n    for (var col = 0; col < moduleCount; col++) {\n      for (var row = 0; row < moduleCount; row++) {\n        if (qrCode.isDark(row, col)) {\n          darkCount++;\n        }\n      }\n    }\n\n    var ratio = Math.abs(100 * darkCount / moduleCount / moduleCount - 50) / 5;\n    lostPoint += ratio * 10;\n    return lostPoint;\n  };\n\n  QRUtil.PATTERN_POSITION_TABLE = [[], [6, 18], [6, 22], [6, 26], [6, 30], [6, 34], [6, 22, 38], [6, 24, 42], [6, 26, 46], [6, 28, 50], [6, 30, 54], [6, 32, 58], [6, 34, 62], [6, 26, 46, 66], [6, 26, 48, 70], [6, 26, 50, 74], [6, 30, 54, 78], [6, 30, 56, 82], [6, 30, 58, 86], [6, 34, 62, 90], [6, 28, 50, 72, 94], [6, 26, 50, 74, 98], [6, 30, 54, 78, 102], [6, 28, 54, 80, 106], [6, 32, 58, 84, 110], [6, 30, 58, 86, 114], [6, 34, 62, 90, 118], [6, 26, 50, 74, 98, 122], [6, 30, 54, 78, 102, 126], [6, 26, 52, 78, 104, 130], [6, 30, 56, 82, 108, 134], [6, 34, 60, 86, 112, 138], [6, 30, 58, 86, 114, 142], [6, 34, 62, 90, 118, 146], [6, 30, 54, 78, 102, 126, 150], [6, 24, 50, 76, 102, 128, 154], [6, 28, 54, 80, 106, 132, 158], [6, 32, 58, 84, 110, 136, 162], [6, 26, 54, 82, 110, 138, 166], [6, 30, 58, 86, 114, 142, 170]];\n  QRUtil.G15 = 1 << 10 | 1 << 8 | 1 << 5 | 1 << 4 | 1 << 2 | 1 << 1 | 1 << 0;\n  QRUtil.G18 = 1 << 12 | 1 << 11 | 1 << 10 | 1 << 9 | 1 << 8 | 1 << 5 | 1 << 2 | 1 << 0;\n  QRUtil.G15_MASK = 1 << 14 | 1 << 12 | 1 << 10 | 1 << 4 | 1 << 1;\n  return QRUtil;\n}();\n\nexports.QRUtil = QRUtil;\n\nvar QRMath =\n/** @class */\nfunction () {\n  function QRMath() {}\n\n  QRMath.glog = function (n) {\n    if (n < 1) {\n      throw new Error(\"glog(\" + n + \")\");\n    }\n\n    return QRMath.LOG_TABLE[n];\n  };\n\n  QRMath.gexp = function (n) {\n    while (n < 0) {\n      n += 255;\n    }\n\n    while (n >= 256) {\n      n -= 255;\n    }\n\n    return QRMath.EXP_TABLE[n];\n  };\n\n  QRMath.EXP_TABLE = new Array(256);\n  QRMath.LOG_TABLE = new Array(256);\n\n  QRMath._constructor = function () {\n    for (var i = 0; i < 8; i++) {\n      QRMath.EXP_TABLE[i] = 1 << i;\n    }\n\n    for (var i = 8; i < 256; i++) {\n      QRMath.EXP_TABLE[i] = QRMath.EXP_TABLE[i - 4] ^ QRMath.EXP_TABLE[i - 5] ^ QRMath.EXP_TABLE[i - 6] ^ QRMath.EXP_TABLE[i - 8];\n    }\n\n    for (var i = 0; i < 255; i++) {\n      QRMath.LOG_TABLE[QRMath.EXP_TABLE[i]] = i;\n    }\n  }();\n\n  return QRMath;\n}();\n\nexports.QRMath = QRMath;\n\nvar QRPolynomial =\n/** @class */\nfunction () {\n  function QRPolynomial(num, shift) {\n    if (num.length == undefined) {\n      throw new Error(num.length + \"/\" + shift);\n    }\n\n    var offset = 0;\n\n    while (offset < num.length && num[offset] == 0) {\n      offset++;\n    }\n\n    this.num = new Array(num.length - offset + shift);\n\n    for (var i = 0; i < num.length - offset; i++) {\n      this.num[i] = num[i + offset];\n    }\n  }\n\n  QRPolynomial.prototype.get = function (index) {\n    return this.num[index];\n  };\n\n  QRPolynomial.prototype.getLength = function () {\n    return this.num.length;\n  };\n\n  QRPolynomial.prototype.multiply = function (e) {\n    var num = new Array(this.getLength() + e.getLength() - 1);\n\n    for (var i = 0; i < this.getLength(); i++) {\n      for (var j = 0; j < e.getLength(); j++) {\n        num[i + j] ^= QRMath.gexp(QRMath.glog(this.get(i)) + QRMath.glog(e.get(j)));\n      }\n    }\n\n    return new QRPolynomial(num, 0);\n  };\n\n  QRPolynomial.prototype.mod = function (e) {\n    if (this.getLength() - e.getLength() < 0) {\n      return this;\n    }\n\n    var ratio = QRMath.glog(this.get(0)) - QRMath.glog(e.get(0));\n    var num = new Array(this.getLength());\n\n    for (var i = 0; i < this.getLength(); i++) {\n      num[i] = this.get(i);\n    }\n\n    for (var i = 0; i < e.getLength(); i++) {\n      num[i] ^= QRMath.gexp(QRMath.glog(e.get(i)) + ratio);\n    }\n\n    return new QRPolynomial(num, 0).mod(e);\n  };\n\n  return QRPolynomial;\n}();\n\nvar QRRSBlock =\n/** @class */\nfunction () {\n  function QRRSBlock(totalCount, dataCount) {\n    this.totalCount = totalCount;\n    this.dataCount = dataCount;\n  }\n\n  QRRSBlock.getRSBlocks = function (typeNumber, errorCorrectLevel) {\n    var rsBlock = QRRSBlock.getRsBlockTable(typeNumber, errorCorrectLevel);\n\n    if (rsBlock == undefined) {\n      throw new Error(\"bad rs block @ typeNumber:\" + typeNumber + \"/errorCorrectLevel:\" + errorCorrectLevel);\n    }\n\n    var length = rsBlock.length / 3;\n    var list = [];\n\n    for (var i = 0; i < length; i++) {\n      var count = rsBlock[i * 3 + 0];\n      var totalCount = rsBlock[i * 3 + 1];\n      var dataCount = rsBlock[i * 3 + 2];\n\n      for (var j = 0; j < count; j++) {\n        list.push(new QRRSBlock(totalCount, dataCount));\n      }\n    }\n\n    return list;\n  };\n\n  QRRSBlock.getRsBlockTable = function (typeNumber, errorCorrectLevel) {\n    switch (errorCorrectLevel) {\n      case exports.QRErrorCorrectLevel.L:\n        return QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 0];\n\n      case exports.QRErrorCorrectLevel.M:\n        return QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 1];\n\n      case exports.QRErrorCorrectLevel.Q:\n        return QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 2];\n\n      case exports.QRErrorCorrectLevel.H:\n        return QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 3];\n\n      default:\n        return undefined;\n    }\n  };\n\n  QRRSBlock.RS_BLOCK_TABLE = [[1, 26, 19], [1, 26, 16], [1, 26, 13], [1, 26, 9], [1, 44, 34], [1, 44, 28], [1, 44, 22], [1, 44, 16], [1, 70, 55], [1, 70, 44], [2, 35, 17], [2, 35, 13], [1, 100, 80], [2, 50, 32], [2, 50, 24], [4, 25, 9], [1, 134, 108], [2, 67, 43], [2, 33, 15, 2, 34, 16], [2, 33, 11, 2, 34, 12], [2, 86, 68], [4, 43, 27], [4, 43, 19], [4, 43, 15], [2, 98, 78], [4, 49, 31], [2, 32, 14, 4, 33, 15], [4, 39, 13, 1, 40, 14], [2, 121, 97], [2, 60, 38, 2, 61, 39], [4, 40, 18, 2, 41, 19], [4, 40, 14, 2, 41, 15], [2, 146, 116], [3, 58, 36, 2, 59, 37], [4, 36, 16, 4, 37, 17], [4, 36, 12, 4, 37, 13], [2, 86, 68, 2, 87, 69], [4, 69, 43, 1, 70, 44], [6, 43, 19, 2, 44, 20], [6, 43, 15, 2, 44, 16], [4, 101, 81], [1, 80, 50, 4, 81, 51], [4, 50, 22, 4, 51, 23], [3, 36, 12, 8, 37, 13], [2, 116, 92, 2, 117, 93], [6, 58, 36, 2, 59, 37], [4, 46, 20, 6, 47, 21], [7, 42, 14, 4, 43, 15], [4, 133, 107], [8, 59, 37, 1, 60, 38], [8, 44, 20, 4, 45, 21], [12, 33, 11, 4, 34, 12], [3, 145, 115, 1, 146, 116], [4, 64, 40, 5, 65, 41], [11, 36, 16, 5, 37, 17], [11, 36, 12, 5, 37, 13], [5, 109, 87, 1, 110, 88], [5, 65, 41, 5, 66, 42], [5, 54, 24, 7, 55, 25], [11, 36, 12], [5, 122, 98, 1, 123, 99], [7, 73, 45, 3, 74, 46], [15, 43, 19, 2, 44, 20], [3, 45, 15, 13, 46, 16], [1, 135, 107, 5, 136, 108], [10, 74, 46, 1, 75, 47], [1, 50, 22, 15, 51, 23], [2, 42, 14, 17, 43, 15], [5, 150, 120, 1, 151, 121], [9, 69, 43, 4, 70, 44], [17, 50, 22, 1, 51, 23], [2, 42, 14, 19, 43, 15], [3, 141, 113, 4, 142, 114], [3, 70, 44, 11, 71, 45], [17, 47, 21, 4, 48, 22], [9, 39, 13, 16, 40, 14], [3, 135, 107, 5, 136, 108], [3, 67, 41, 13, 68, 42], [15, 54, 24, 5, 55, 25], [15, 43, 15, 10, 44, 16], [4, 144, 116, 4, 145, 117], [17, 68, 42], [17, 50, 22, 6, 51, 23], [19, 46, 16, 6, 47, 17], [2, 139, 111, 7, 140, 112], [17, 74, 46], [7, 54, 24, 16, 55, 25], [34, 37, 13], [4, 151, 121, 5, 152, 122], [4, 75, 47, 14, 76, 48], [11, 54, 24, 14, 55, 25], [16, 45, 15, 14, 46, 16], [6, 147, 117, 4, 148, 118], [6, 73, 45, 14, 74, 46], [11, 54, 24, 16, 55, 25], [30, 46, 16, 2, 47, 17], [8, 132, 106, 4, 133, 107], [8, 75, 47, 13, 76, 48], [7, 54, 24, 22, 55, 25], [22, 45, 15, 13, 46, 16], [10, 142, 114, 2, 143, 115], [19, 74, 46, 4, 75, 47], [28, 50, 22, 6, 51, 23], [33, 46, 16, 4, 47, 17], [8, 152, 122, 4, 153, 123], [22, 73, 45, 3, 74, 46], [8, 53, 23, 26, 54, 24], [12, 45, 15, 28, 46, 16], [3, 147, 117, 10, 148, 118], [3, 73, 45, 23, 74, 46], [4, 54, 24, 31, 55, 25], [11, 45, 15, 31, 46, 16], [7, 146, 116, 7, 147, 117], [21, 73, 45, 7, 74, 46], [1, 53, 23, 37, 54, 24], [19, 45, 15, 26, 46, 16], [5, 145, 115, 10, 146, 116], [19, 75, 47, 10, 76, 48], [15, 54, 24, 25, 55, 25], [23, 45, 15, 25, 46, 16], [13, 145, 115, 3, 146, 116], [2, 74, 46, 29, 75, 47], [42, 54, 24, 1, 55, 25], [23, 45, 15, 28, 46, 16], [17, 145, 115], [10, 74, 46, 23, 75, 47], [10, 54, 24, 35, 55, 25], [19, 45, 15, 35, 46, 16], [17, 145, 115, 1, 146, 116], [14, 74, 46, 21, 75, 47], [29, 54, 24, 19, 55, 25], [11, 45, 15, 46, 46, 16], [13, 145, 115, 6, 146, 116], [14, 74, 46, 23, 75, 47], [44, 54, 24, 7, 55, 25], [59, 46, 16, 1, 47, 17], [12, 151, 121, 7, 152, 122], [12, 75, 47, 26, 76, 48], [39, 54, 24, 14, 55, 25], [22, 45, 15, 41, 46, 16], [6, 151, 121, 14, 152, 122], [6, 75, 47, 34, 76, 48], [46, 54, 24, 10, 55, 25], [2, 45, 15, 64, 46, 16], [17, 152, 122, 4, 153, 123], [29, 74, 46, 14, 75, 47], [49, 54, 24, 10, 55, 25], [24, 45, 15, 46, 46, 16], [4, 152, 122, 18, 153, 123], [13, 74, 46, 32, 75, 47], [48, 54, 24, 14, 55, 25], [42, 45, 15, 32, 46, 16], [20, 147, 117, 4, 148, 118], [40, 75, 47, 7, 76, 48], [43, 54, 24, 22, 55, 25], [10, 45, 15, 67, 46, 16], [19, 148, 118, 6, 149, 119], [18, 75, 47, 31, 76, 48], [34, 54, 24, 34, 55, 25], [20, 45, 15, 61, 46, 16]];\n  return QRRSBlock;\n}();\n\nvar QRBitBuffer =\n/** @class */\nfunction () {\n  function QRBitBuffer() {\n    this.buffer = [];\n    this.length = 0;\n  }\n\n  QRBitBuffer.prototype.get = function (index) {\n    var bufIndex = Math.floor(index / 8);\n    return (this.buffer[bufIndex] >>> 7 - index % 8 & 1) == 1;\n  };\n\n  QRBitBuffer.prototype.put = function (num, length) {\n    for (var i = 0; i < length; i++) {\n      this.putBit((num >>> length - i - 1 & 1) == 1);\n    }\n  };\n\n  QRBitBuffer.prototype.getLengthInBits = function () {\n    return this.length;\n  };\n\n  QRBitBuffer.prototype.putBit = function (bit) {\n    var bufIndex = Math.floor(this.length / 8);\n\n    if (this.buffer.length <= bufIndex) {\n      this.buffer.push(0);\n    }\n\n    if (bit) {\n      this.buffer[bufIndex] |= 0x80 >>> this.length % 8;\n    }\n\n    this.length++;\n  };\n\n  return QRBitBuffer;\n}();\n\nvar QRCodeLimitLength = [[17, 14, 11, 7], [32, 26, 20, 14], [53, 42, 32, 24], [78, 62, 46, 34], [106, 84, 60, 44], [134, 106, 74, 58], [154, 122, 86, 64], [192, 152, 108, 84], [230, 180, 130, 98], [271, 213, 151, 119], [321, 251, 177, 137], [367, 287, 203, 155], [425, 331, 241, 177], [458, 362, 258, 194], [520, 412, 292, 220], [586, 450, 322, 250], [644, 504, 364, 280], [718, 560, 394, 310], [792, 624, 442, 338], [858, 666, 482, 382], [929, 711, 509, 403], [1003, 779, 565, 439], [1091, 857, 611, 461], [1171, 911, 661, 511], [1273, 997, 715, 535], [1367, 1059, 751, 593], [1465, 1125, 805, 625], [1528, 1190, 868, 658], [1628, 1264, 908, 698], [1732, 1370, 982, 742], [1840, 1452, 1030, 790], [1952, 1538, 1112, 842], [2068, 1628, 1168, 898], [2188, 1722, 1228, 958], [2303, 1809, 1283, 983], [2431, 1911, 1351, 1051], [2563, 1989, 1423, 1093], [2699, 2099, 1499, 1139], [2809, 2213, 1579, 1219], [2953, 2331, 1663, 1273]];","map":{"version":3,"sources":["/Users/jithendra/Desktop/Work/hbar-shop/hbar-shop-dashboard/node_modules/awesome-qr/lib/qrcode.js"],"names":["Object","defineProperty","exports","value","QRMath","QRUtil","QRMaskPattern","QRErrorCorrectLevel","QRCodeModel","checkQRVersion","version","sText","nCorrectLevel","length","_getUTF8Length","i","nLimit","L","QRCodeLimitLength","M","Q","H","_getTypeNumber","nType","len","Error","replacedText","encodeURI","toString","replace","Number","QR8bitByte","data","mode","QRMode","MODE_8BIT_BYTE","parsedData","byteArrays","l","byteArray","code","charCodeAt","push","Array","prototype","concat","apply","unshift","getLength","write","buffer","put","typeNumber","errorCorrectLevel","moduleCount","dataList","addData","newData","dataCache","undefined","isDark","row","col","modules","getModuleCount","make","makeImpl","getBestMaskPattern","test","maskPattern","setupPositionProbePattern","setupPositionAdjustPattern","setupTimingPattern","setupTypeInfo","setupTypeNumber","createData","mapData","r","c","isInteger","values","includes","minLostPoint","pattern","lostPoint","getLostPoint","pos","getPatternPosition","j","bits","getBCHTypeNumber","mod","Math","floor","getBCHTypeInfo","inc","bitIndex","byteIndex","dark","mask","getMask","rsBlocks","QRRSBlock","getRSBlocks","QRBitBuffer","getLengthInBits","totalDataCount","dataCount","putBit","PAD0","PAD1","createBytes","offset","maxDcCount","maxEcCount","dcdata","ecdata","dcCount","ecCount","totalCount","max","rsPoly","getErrorCorrectPolynomial","rawPoly","QRPolynomial","modPoly","modIndex","get","totalCodeCount","index","MODE_NUMBER","MODE_ALPHA_NUM","MODE_KANJI","PATTERN000","PATTERN001","PATTERN010","PATTERN011","PATTERN100","PATTERN101","PATTERN110","PATTERN111","d","getBCHDigit","G15","G15_MASK","G18","digit","PATTERN_POSITION_TABLE","errorCorrectLength","a","multiply","gexp","type","qrCode","sameCount","count","darkCount","ratio","abs","glog","n","LOG_TABLE","EXP_TABLE","_constructor","num","shift","e","rsBlock","getRsBlockTable","list","RS_BLOCK_TABLE","bufIndex","bit"],"mappings":"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","sourcesContent":["\"use strict\";\n//---------------------------------------------------------------------\n// QRCode for JavaScript\n//\n// Copyright (c) 2009 Kazuhiko Arase\n// Re-written in TypeScript by Makito <sumimakito@hotmail.com>\n//\n// URL: http://www.d-project.com/\n//\n// Licensed under the MIT license:\n//   http://www.opensource.org/licenses/mit-license.php\n//\n// The word \"QR Code\" is registered trademark of\n// DENSO WAVE INCORPORATED\n//   http://www.denso-wave.com/qrcode/faqpatent-e.html\n//\n//---------------------------------------------------------------------\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.QRMath = exports.QRUtil = exports.QRMaskPattern = exports.QRErrorCorrectLevel = exports.QRCodeModel = void 0;\nfunction checkQRVersion(version, sText, nCorrectLevel) {\n    var length = _getUTF8Length(sText);\n    var i = version - 1;\n    var nLimit = 0;\n    switch (nCorrectLevel) {\n        case exports.QRErrorCorrectLevel.L:\n            nLimit = QRCodeLimitLength[i][0];\n            break;\n        case exports.QRErrorCorrectLevel.M:\n            nLimit = QRCodeLimitLength[i][1];\n            break;\n        case exports.QRErrorCorrectLevel.Q:\n            nLimit = QRCodeLimitLength[i][2];\n            break;\n        case exports.QRErrorCorrectLevel.H:\n            nLimit = QRCodeLimitLength[i][3];\n            break;\n    }\n    return length <= nLimit;\n}\nfunction _getTypeNumber(sText, nCorrectLevel) {\n    var nType = 1;\n    var length = _getUTF8Length(sText);\n    for (var i = 0, len = QRCodeLimitLength.length; i < len; i++) {\n        var nLimit = 0;\n        switch (nCorrectLevel) {\n            case exports.QRErrorCorrectLevel.L:\n                nLimit = QRCodeLimitLength[i][0];\n                break;\n            case exports.QRErrorCorrectLevel.M:\n                nLimit = QRCodeLimitLength[i][1];\n                break;\n            case exports.QRErrorCorrectLevel.Q:\n                nLimit = QRCodeLimitLength[i][2];\n                break;\n            case exports.QRErrorCorrectLevel.H:\n                nLimit = QRCodeLimitLength[i][3];\n                break;\n        }\n        if (length <= nLimit) {\n            break;\n        }\n        else {\n            nType++;\n        }\n    }\n    if (nType > QRCodeLimitLength.length) {\n        throw new Error(\"Too long data\");\n    }\n    return nType;\n}\nfunction _getUTF8Length(sText) {\n    var replacedText = encodeURI(sText)\n        .toString()\n        .replace(/\\%[0-9a-fA-F]{2}/g, \"a\");\n    return replacedText.length + (replacedText.length != Number(sText) ? 3 : 0);\n}\nvar QR8bitByte = /** @class */ (function () {\n    function QR8bitByte(data) {\n        this.mode = QRMode.MODE_8BIT_BYTE;\n        this.parsedData = [];\n        this.data = data;\n        var byteArrays = [];\n        // Added to support UTF-8 Characters\n        for (var i = 0, l = this.data.length; i < l; i++) {\n            var byteArray = [];\n            var code = this.data.charCodeAt(i);\n            if (code > 0x10000) {\n                byteArray[0] = 0xf0 | ((code & 0x1c0000) >>> 18);\n                byteArray[1] = 0x80 | ((code & 0x3f000) >>> 12);\n                byteArray[2] = 0x80 | ((code & 0xfc0) >>> 6);\n                byteArray[3] = 0x80 | (code & 0x3f);\n            }\n            else if (code > 0x800) {\n                byteArray[0] = 0xe0 | ((code & 0xf000) >>> 12);\n                byteArray[1] = 0x80 | ((code & 0xfc0) >>> 6);\n                byteArray[2] = 0x80 | (code & 0x3f);\n            }\n            else if (code > 0x80) {\n                byteArray[0] = 0xc0 | ((code & 0x7c0) >>> 6);\n                byteArray[1] = 0x80 | (code & 0x3f);\n            }\n            else {\n                byteArray[0] = code;\n            }\n            byteArrays.push(byteArray);\n        }\n        this.parsedData = Array.prototype.concat.apply([], byteArrays);\n        if (this.parsedData.length != this.data.length) {\n            this.parsedData.unshift(191);\n            this.parsedData.unshift(187);\n            this.parsedData.unshift(239);\n        }\n    }\n    QR8bitByte.prototype.getLength = function () {\n        return this.parsedData.length;\n    };\n    QR8bitByte.prototype.write = function (buffer) {\n        for (var i = 0, l = this.parsedData.length; i < l; i++) {\n            buffer.put(this.parsedData[i], 8);\n        }\n    };\n    return QR8bitByte;\n}());\nvar QRCodeModel = /** @class */ (function () {\n    function QRCodeModel(typeNumber, errorCorrectLevel) {\n        if (typeNumber === void 0) { typeNumber = -1; }\n        if (errorCorrectLevel === void 0) { errorCorrectLevel = exports.QRErrorCorrectLevel.L; }\n        this.moduleCount = 0;\n        this.dataList = [];\n        this.typeNumber = typeNumber;\n        this.errorCorrectLevel = errorCorrectLevel;\n        this.moduleCount = 0;\n        this.dataList = [];\n    }\n    QRCodeModel.prototype.addData = function (data) {\n        if (this.typeNumber <= 0) {\n            this.typeNumber = _getTypeNumber(data, this.errorCorrectLevel);\n        }\n        else if (this.typeNumber > 40) {\n            throw new Error(\"Invalid QR version: \" + this.typeNumber);\n        }\n        else {\n            if (!checkQRVersion(this.typeNumber, data, this.errorCorrectLevel)) {\n                throw new Error(\"Data is too long for QR version: \" + this.typeNumber);\n            }\n        }\n        var newData = new QR8bitByte(data);\n        this.dataList.push(newData);\n        this.dataCache = undefined;\n    };\n    QRCodeModel.prototype.isDark = function (row, col) {\n        if (row < 0 || this.moduleCount <= row || col < 0 || this.moduleCount <= col) {\n            throw new Error(row + \",\" + col);\n        }\n        return this.modules[row][col];\n    };\n    QRCodeModel.prototype.getModuleCount = function () {\n        return this.moduleCount;\n    };\n    QRCodeModel.prototype.make = function () {\n        this.makeImpl(false, this.getBestMaskPattern());\n    };\n    QRCodeModel.prototype.makeImpl = function (test, maskPattern) {\n        this.moduleCount = this.typeNumber * 4 + 17;\n        this.modules = new Array(this.moduleCount);\n        for (var row = 0; row < this.moduleCount; row++) {\n            this.modules[row] = new Array(this.moduleCount);\n            for (var col = 0; col < this.moduleCount; col++) {\n                this.modules[row][col] = null;\n            }\n        }\n        this.setupPositionProbePattern(0, 0);\n        this.setupPositionProbePattern(this.moduleCount - 7, 0);\n        this.setupPositionProbePattern(0, this.moduleCount - 7);\n        this.setupPositionAdjustPattern();\n        this.setupTimingPattern();\n        this.setupTypeInfo(test, maskPattern);\n        if (this.typeNumber >= 7) {\n            this.setupTypeNumber(test);\n        }\n        if (this.dataCache == null) {\n            this.dataCache = QRCodeModel.createData(this.typeNumber, this.errorCorrectLevel, this.dataList);\n        }\n        this.mapData(this.dataCache, maskPattern);\n    };\n    QRCodeModel.prototype.setupPositionProbePattern = function (row, col) {\n        for (var r = -1; r <= 7; r++) {\n            if (row + r <= -1 || this.moduleCount <= row + r)\n                continue;\n            for (var c = -1; c <= 7; c++) {\n                if (col + c <= -1 || this.moduleCount <= col + c)\n                    continue;\n                if ((0 <= r && r <= 6 && (c == 0 || c == 6)) ||\n                    (0 <= c && c <= 6 && (r == 0 || r == 6)) ||\n                    (2 <= r && r <= 4 && 2 <= c && c <= 4)) {\n                    this.modules[row + r][col + c] = true;\n                }\n                else {\n                    this.modules[row + r][col + c] = false;\n                }\n            }\n        }\n    };\n    QRCodeModel.prototype.getBestMaskPattern = function () {\n        if (Number.isInteger(this.maskPattern) && Object.values(exports.QRMaskPattern).includes(this.maskPattern)) {\n            return this.maskPattern;\n        }\n        var minLostPoint = 0;\n        var pattern = 0;\n        for (var i = 0; i < 8; i++) {\n            this.makeImpl(true, i);\n            var lostPoint = QRUtil.getLostPoint(this);\n            if (i == 0 || minLostPoint > lostPoint) {\n                minLostPoint = lostPoint;\n                pattern = i;\n            }\n        }\n        return pattern;\n    };\n    QRCodeModel.prototype.setupTimingPattern = function () {\n        for (var r = 8; r < this.moduleCount - 8; r++) {\n            if (this.modules[r][6] != null) {\n                continue;\n            }\n            this.modules[r][6] = r % 2 == 0;\n        }\n        for (var c = 8; c < this.moduleCount - 8; c++) {\n            if (this.modules[6][c] != null) {\n                continue;\n            }\n            this.modules[6][c] = c % 2 == 0;\n        }\n    };\n    QRCodeModel.prototype.setupPositionAdjustPattern = function () {\n        var pos = QRUtil.getPatternPosition(this.typeNumber);\n        for (var i = 0; i < pos.length; i++) {\n            for (var j = 0; j < pos.length; j++) {\n                var row = pos[i];\n                var col = pos[j];\n                if (this.modules[row][col] != null) {\n                    continue;\n                }\n                for (var r = -2; r <= 2; r++) {\n                    for (var c = -2; c <= 2; c++) {\n                        if (r == -2 || r == 2 || c == -2 || c == 2 || (r == 0 && c == 0)) {\n                            this.modules[row + r][col + c] = true;\n                        }\n                        else {\n                            this.modules[row + r][col + c] = false;\n                        }\n                    }\n                }\n            }\n        }\n    };\n    QRCodeModel.prototype.setupTypeNumber = function (test) {\n        var bits = QRUtil.getBCHTypeNumber(this.typeNumber);\n        for (var i = 0; i < 18; i++) {\n            var mod = !test && ((bits >> i) & 1) == 1;\n            this.modules[Math.floor(i / 3)][(i % 3) + this.moduleCount - 8 - 3] = mod;\n        }\n        for (var i = 0; i < 18; i++) {\n            var mod = !test && ((bits >> i) & 1) == 1;\n            this.modules[(i % 3) + this.moduleCount - 8 - 3][Math.floor(i / 3)] = mod;\n        }\n    };\n    QRCodeModel.prototype.setupTypeInfo = function (test, maskPattern) {\n        var data = (this.errorCorrectLevel << 3) | maskPattern;\n        var bits = QRUtil.getBCHTypeInfo(data);\n        for (var i = 0; i < 15; i++) {\n            var mod = !test && ((bits >> i) & 1) == 1;\n            if (i < 6) {\n                this.modules[i][8] = mod;\n            }\n            else if (i < 8) {\n                this.modules[i + 1][8] = mod;\n            }\n            else {\n                this.modules[this.moduleCount - 15 + i][8] = mod;\n            }\n        }\n        for (var i = 0; i < 15; i++) {\n            var mod = !test && ((bits >> i) & 1) == 1;\n            if (i < 8) {\n                this.modules[8][this.moduleCount - i - 1] = mod;\n            }\n            else if (i < 9) {\n                this.modules[8][15 - i - 1 + 1] = mod;\n            }\n            else {\n                this.modules[8][15 - i - 1] = mod;\n            }\n        }\n        this.modules[this.moduleCount - 8][8] = !test;\n    };\n    QRCodeModel.prototype.mapData = function (data, maskPattern) {\n        var inc = -1;\n        var row = this.moduleCount - 1;\n        var bitIndex = 7;\n        var byteIndex = 0;\n        for (var col = this.moduleCount - 1; col > 0; col -= 2) {\n            if (col == 6)\n                col--;\n            while (true) {\n                for (var c = 0; c < 2; c++) {\n                    if (this.modules[row][col - c] == null) {\n                        var dark = false;\n                        if (byteIndex < data.length) {\n                            dark = ((data[byteIndex] >>> bitIndex) & 1) == 1;\n                        }\n                        var mask = QRUtil.getMask(maskPattern, row, col - c);\n                        if (mask) {\n                            dark = !dark;\n                        }\n                        this.modules[row][col - c] = dark;\n                        bitIndex--;\n                        if (bitIndex == -1) {\n                            byteIndex++;\n                            bitIndex = 7;\n                        }\n                    }\n                }\n                row += inc;\n                if (row < 0 || this.moduleCount <= row) {\n                    row -= inc;\n                    inc = -inc;\n                    break;\n                }\n            }\n        }\n    };\n    QRCodeModel.createData = function (typeNumber, errorCorrectLevel, dataList) {\n        var rsBlocks = QRRSBlock.getRSBlocks(typeNumber, errorCorrectLevel);\n        var buffer = new QRBitBuffer();\n        for (var i = 0; i < dataList.length; i++) {\n            var data = dataList[i];\n            buffer.put(data.mode, 4);\n            buffer.put(data.getLength(), QRUtil.getLengthInBits(data.mode, typeNumber));\n            data.write(buffer);\n        }\n        var totalDataCount = 0;\n        for (var i = 0; i < rsBlocks.length; i++) {\n            totalDataCount += rsBlocks[i].dataCount;\n        }\n        if (buffer.getLengthInBits() > totalDataCount * 8) {\n            throw new Error(\"code length overflow. (\" + buffer.getLengthInBits() + \">\" + totalDataCount * 8 + \")\");\n        }\n        if (buffer.getLengthInBits() + 4 <= totalDataCount * 8) {\n            buffer.put(0, 4);\n        }\n        while (buffer.getLengthInBits() % 8 != 0) {\n            buffer.putBit(false);\n        }\n        while (true) {\n            if (buffer.getLengthInBits() >= totalDataCount * 8) {\n                break;\n            }\n            buffer.put(QRCodeModel.PAD0, 8);\n            if (buffer.getLengthInBits() >= totalDataCount * 8) {\n                break;\n            }\n            buffer.put(QRCodeModel.PAD1, 8);\n        }\n        return QRCodeModel.createBytes(buffer, rsBlocks);\n    };\n    QRCodeModel.createBytes = function (buffer, rsBlocks) {\n        var offset = 0;\n        var maxDcCount = 0;\n        var maxEcCount = 0;\n        var dcdata = new Array(rsBlocks.length);\n        var ecdata = new Array(rsBlocks.length);\n        for (var r = 0; r < rsBlocks.length; r++) {\n            var dcCount = rsBlocks[r].dataCount;\n            var ecCount = rsBlocks[r].totalCount - dcCount;\n            maxDcCount = Math.max(maxDcCount, dcCount);\n            maxEcCount = Math.max(maxEcCount, ecCount);\n            dcdata[r] = new Array(dcCount);\n            for (var i = 0; i < dcdata[r].length; i++) {\n                dcdata[r][i] = 0xff & buffer.buffer[i + offset];\n            }\n            offset += dcCount;\n            var rsPoly = QRUtil.getErrorCorrectPolynomial(ecCount);\n            var rawPoly = new QRPolynomial(dcdata[r], rsPoly.getLength() - 1);\n            var modPoly = rawPoly.mod(rsPoly);\n            ecdata[r] = new Array(rsPoly.getLength() - 1);\n            for (var i = 0; i < ecdata[r].length; i++) {\n                var modIndex = i + modPoly.getLength() - ecdata[r].length;\n                ecdata[r][i] = modIndex >= 0 ? modPoly.get(modIndex) : 0;\n            }\n        }\n        var totalCodeCount = 0;\n        for (var i = 0; i < rsBlocks.length; i++) {\n            totalCodeCount += rsBlocks[i].totalCount;\n        }\n        var data = new Array(totalCodeCount);\n        var index = 0;\n        for (var i = 0; i < maxDcCount; i++) {\n            for (var r = 0; r < rsBlocks.length; r++) {\n                if (i < dcdata[r].length) {\n                    data[index++] = dcdata[r][i];\n                }\n            }\n        }\n        for (var i = 0; i < maxEcCount; i++) {\n            for (var r = 0; r < rsBlocks.length; r++) {\n                if (i < ecdata[r].length) {\n                    data[index++] = ecdata[r][i];\n                }\n            }\n        }\n        return data;\n    };\n    QRCodeModel.PAD0 = 0xec;\n    QRCodeModel.PAD1 = 0x11;\n    return QRCodeModel;\n}());\nexports.QRCodeModel = QRCodeModel;\nexports.QRErrorCorrectLevel = { L: 1, M: 0, Q: 3, H: 2 };\nvar QRMode = { MODE_NUMBER: 1 << 0, MODE_ALPHA_NUM: 1 << 1, MODE_8BIT_BYTE: 1 << 2, MODE_KANJI: 1 << 3 };\nexports.QRMaskPattern = {\n    PATTERN000: 0,\n    PATTERN001: 1,\n    PATTERN010: 2,\n    PATTERN011: 3,\n    PATTERN100: 4,\n    PATTERN101: 5,\n    PATTERN110: 6,\n    PATTERN111: 7,\n};\nvar QRUtil = /** @class */ (function () {\n    function QRUtil() {\n    }\n    QRUtil.getBCHTypeInfo = function (data) {\n        var d = data << 10;\n        while (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G15) >= 0) {\n            d ^= QRUtil.G15 << (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G15));\n        }\n        return ((data << 10) | d) ^ QRUtil.G15_MASK;\n    };\n    QRUtil.getBCHTypeNumber = function (data) {\n        var d = data << 12;\n        while (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G18) >= 0) {\n            d ^= QRUtil.G18 << (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G18));\n        }\n        return (data << 12) | d;\n    };\n    QRUtil.getBCHDigit = function (data) {\n        var digit = 0;\n        while (data != 0) {\n            digit++;\n            data >>>= 1;\n        }\n        return digit;\n    };\n    QRUtil.getPatternPosition = function (typeNumber) {\n        return QRUtil.PATTERN_POSITION_TABLE[typeNumber - 1];\n    };\n    QRUtil.getMask = function (maskPattern, i, j) {\n        switch (maskPattern) {\n            case exports.QRMaskPattern.PATTERN000:\n                return (i + j) % 2 == 0;\n            case exports.QRMaskPattern.PATTERN001:\n                return i % 2 == 0;\n            case exports.QRMaskPattern.PATTERN010:\n                return j % 3 == 0;\n            case exports.QRMaskPattern.PATTERN011:\n                return (i + j) % 3 == 0;\n            case exports.QRMaskPattern.PATTERN100:\n                return (Math.floor(i / 2) + Math.floor(j / 3)) % 2 == 0;\n            case exports.QRMaskPattern.PATTERN101:\n                return ((i * j) % 2) + ((i * j) % 3) == 0;\n            case exports.QRMaskPattern.PATTERN110:\n                return (((i * j) % 2) + ((i * j) % 3)) % 2 == 0;\n            case exports.QRMaskPattern.PATTERN111:\n                return (((i * j) % 3) + ((i + j) % 2)) % 2 == 0;\n            default:\n                throw new Error(\"bad maskPattern:\" + maskPattern);\n        }\n    };\n    QRUtil.getErrorCorrectPolynomial = function (errorCorrectLength) {\n        var a = new QRPolynomial([1], 0);\n        for (var i = 0; i < errorCorrectLength; i++) {\n            a = a.multiply(new QRPolynomial([1, QRMath.gexp(i)], 0));\n        }\n        return a;\n    };\n    QRUtil.getLengthInBits = function (mode, type) {\n        if (1 <= type && type < 10) {\n            switch (mode) {\n                case QRMode.MODE_NUMBER:\n                    return 10;\n                case QRMode.MODE_ALPHA_NUM:\n                    return 9;\n                case QRMode.MODE_8BIT_BYTE:\n                    return 8;\n                case QRMode.MODE_KANJI:\n                    return 8;\n                default:\n                    throw new Error(\"mode:\" + mode);\n            }\n        }\n        else if (type < 27) {\n            switch (mode) {\n                case QRMode.MODE_NUMBER:\n                    return 12;\n                case QRMode.MODE_ALPHA_NUM:\n                    return 11;\n                case QRMode.MODE_8BIT_BYTE:\n                    return 16;\n                case QRMode.MODE_KANJI:\n                    return 10;\n                default:\n                    throw new Error(\"mode:\" + mode);\n            }\n        }\n        else if (type < 41) {\n            switch (mode) {\n                case QRMode.MODE_NUMBER:\n                    return 14;\n                case QRMode.MODE_ALPHA_NUM:\n                    return 13;\n                case QRMode.MODE_8BIT_BYTE:\n                    return 16;\n                case QRMode.MODE_KANJI:\n                    return 12;\n                default:\n                    throw new Error(\"mode:\" + mode);\n            }\n        }\n        else {\n            throw new Error(\"type:\" + type);\n        }\n    };\n    QRUtil.getLostPoint = function (qrCode) {\n        var moduleCount = qrCode.getModuleCount();\n        var lostPoint = 0;\n        for (var row = 0; row < moduleCount; row++) {\n            for (var col = 0; col < moduleCount; col++) {\n                var sameCount = 0;\n                var dark = qrCode.isDark(row, col);\n                for (var r = -1; r <= 1; r++) {\n                    if (row + r < 0 || moduleCount <= row + r) {\n                        continue;\n                    }\n                    for (var c = -1; c <= 1; c++) {\n                        if (col + c < 0 || moduleCount <= col + c) {\n                            continue;\n                        }\n                        if (r == 0 && c == 0) {\n                            continue;\n                        }\n                        if (dark == qrCode.isDark(row + r, col + c)) {\n                            sameCount++;\n                        }\n                    }\n                }\n                if (sameCount > 5) {\n                    lostPoint += 3 + sameCount - 5;\n                }\n            }\n        }\n        for (var row = 0; row < moduleCount - 1; row++) {\n            for (var col = 0; col < moduleCount - 1; col++) {\n                var count = 0;\n                if (qrCode.isDark(row, col))\n                    count++;\n                if (qrCode.isDark(row + 1, col))\n                    count++;\n                if (qrCode.isDark(row, col + 1))\n                    count++;\n                if (qrCode.isDark(row + 1, col + 1))\n                    count++;\n                if (count == 0 || count == 4) {\n                    lostPoint += 3;\n                }\n            }\n        }\n        for (var row = 0; row < moduleCount; row++) {\n            for (var col = 0; col < moduleCount - 6; col++) {\n                if (qrCode.isDark(row, col) &&\n                    !qrCode.isDark(row, col + 1) &&\n                    qrCode.isDark(row, col + 2) &&\n                    qrCode.isDark(row, col + 3) &&\n                    qrCode.isDark(row, col + 4) &&\n                    !qrCode.isDark(row, col + 5) &&\n                    qrCode.isDark(row, col + 6)) {\n                    lostPoint += 40;\n                }\n            }\n        }\n        for (var col = 0; col < moduleCount; col++) {\n            for (var row = 0; row < moduleCount - 6; row++) {\n                if (qrCode.isDark(row, col) &&\n                    !qrCode.isDark(row + 1, col) &&\n                    qrCode.isDark(row + 2, col) &&\n                    qrCode.isDark(row + 3, col) &&\n                    qrCode.isDark(row + 4, col) &&\n                    !qrCode.isDark(row + 5, col) &&\n                    qrCode.isDark(row + 6, col)) {\n                    lostPoint += 40;\n                }\n            }\n        }\n        var darkCount = 0;\n        for (var col = 0; col < moduleCount; col++) {\n            for (var row = 0; row < moduleCount; row++) {\n                if (qrCode.isDark(row, col)) {\n                    darkCount++;\n                }\n            }\n        }\n        var ratio = Math.abs((100 * darkCount) / moduleCount / moduleCount - 50) / 5;\n        lostPoint += ratio * 10;\n        return lostPoint;\n    };\n    QRUtil.PATTERN_POSITION_TABLE = [\n        [],\n        [6, 18],\n        [6, 22],\n        [6, 26],\n        [6, 30],\n        [6, 34],\n        [6, 22, 38],\n        [6, 24, 42],\n        [6, 26, 46],\n        [6, 28, 50],\n        [6, 30, 54],\n        [6, 32, 58],\n        [6, 34, 62],\n        [6, 26, 46, 66],\n        [6, 26, 48, 70],\n        [6, 26, 50, 74],\n        [6, 30, 54, 78],\n        [6, 30, 56, 82],\n        [6, 30, 58, 86],\n        [6, 34, 62, 90],\n        [6, 28, 50, 72, 94],\n        [6, 26, 50, 74, 98],\n        [6, 30, 54, 78, 102],\n        [6, 28, 54, 80, 106],\n        [6, 32, 58, 84, 110],\n        [6, 30, 58, 86, 114],\n        [6, 34, 62, 90, 118],\n        [6, 26, 50, 74, 98, 122],\n        [6, 30, 54, 78, 102, 126],\n        [6, 26, 52, 78, 104, 130],\n        [6, 30, 56, 82, 108, 134],\n        [6, 34, 60, 86, 112, 138],\n        [6, 30, 58, 86, 114, 142],\n        [6, 34, 62, 90, 118, 146],\n        [6, 30, 54, 78, 102, 126, 150],\n        [6, 24, 50, 76, 102, 128, 154],\n        [6, 28, 54, 80, 106, 132, 158],\n        [6, 32, 58, 84, 110, 136, 162],\n        [6, 26, 54, 82, 110, 138, 166],\n        [6, 30, 58, 86, 114, 142, 170],\n    ];\n    QRUtil.G15 = (1 << 10) | (1 << 8) | (1 << 5) | (1 << 4) | (1 << 2) | (1 << 1) | (1 << 0);\n    QRUtil.G18 = (1 << 12) | (1 << 11) | (1 << 10) | (1 << 9) | (1 << 8) | (1 << 5) | (1 << 2) | (1 << 0);\n    QRUtil.G15_MASK = (1 << 14) | (1 << 12) | (1 << 10) | (1 << 4) | (1 << 1);\n    return QRUtil;\n}());\nexports.QRUtil = QRUtil;\nvar QRMath = /** @class */ (function () {\n    function QRMath() {\n    }\n    QRMath.glog = function (n) {\n        if (n < 1) {\n            throw new Error(\"glog(\" + n + \")\");\n        }\n        return QRMath.LOG_TABLE[n];\n    };\n    QRMath.gexp = function (n) {\n        while (n < 0) {\n            n += 255;\n        }\n        while (n >= 256) {\n            n -= 255;\n        }\n        return QRMath.EXP_TABLE[n];\n    };\n    QRMath.EXP_TABLE = new Array(256);\n    QRMath.LOG_TABLE = new Array(256);\n    QRMath._constructor = (function () {\n        for (var i = 0; i < 8; i++) {\n            QRMath.EXP_TABLE[i] = 1 << i;\n        }\n        for (var i = 8; i < 256; i++) {\n            QRMath.EXP_TABLE[i] =\n                QRMath.EXP_TABLE[i - 4] ^ QRMath.EXP_TABLE[i - 5] ^ QRMath.EXP_TABLE[i - 6] ^ QRMath.EXP_TABLE[i - 8];\n        }\n        for (var i = 0; i < 255; i++) {\n            QRMath.LOG_TABLE[QRMath.EXP_TABLE[i]] = i;\n        }\n    })();\n    return QRMath;\n}());\nexports.QRMath = QRMath;\nvar QRPolynomial = /** @class */ (function () {\n    function QRPolynomial(num, shift) {\n        if (num.length == undefined) {\n            throw new Error(num.length + \"/\" + shift);\n        }\n        var offset = 0;\n        while (offset < num.length && num[offset] == 0) {\n            offset++;\n        }\n        this.num = new Array(num.length - offset + shift);\n        for (var i = 0; i < num.length - offset; i++) {\n            this.num[i] = num[i + offset];\n        }\n    }\n    QRPolynomial.prototype.get = function (index) {\n        return this.num[index];\n    };\n    QRPolynomial.prototype.getLength = function () {\n        return this.num.length;\n    };\n    QRPolynomial.prototype.multiply = function (e) {\n        var num = new Array(this.getLength() + e.getLength() - 1);\n        for (var i = 0; i < this.getLength(); i++) {\n            for (var j = 0; j < e.getLength(); j++) {\n                num[i + j] ^= QRMath.gexp(QRMath.glog(this.get(i)) + QRMath.glog(e.get(j)));\n            }\n        }\n        return new QRPolynomial(num, 0);\n    };\n    QRPolynomial.prototype.mod = function (e) {\n        if (this.getLength() - e.getLength() < 0) {\n            return this;\n        }\n        var ratio = QRMath.glog(this.get(0)) - QRMath.glog(e.get(0));\n        var num = new Array(this.getLength());\n        for (var i = 0; i < this.getLength(); i++) {\n            num[i] = this.get(i);\n        }\n        for (var i = 0; i < e.getLength(); i++) {\n            num[i] ^= QRMath.gexp(QRMath.glog(e.get(i)) + ratio);\n        }\n        return new QRPolynomial(num, 0).mod(e);\n    };\n    return QRPolynomial;\n}());\nvar QRRSBlock = /** @class */ (function () {\n    function QRRSBlock(totalCount, dataCount) {\n        this.totalCount = totalCount;\n        this.dataCount = dataCount;\n    }\n    QRRSBlock.getRSBlocks = function (typeNumber, errorCorrectLevel) {\n        var rsBlock = QRRSBlock.getRsBlockTable(typeNumber, errorCorrectLevel);\n        if (rsBlock == undefined) {\n            throw new Error(\"bad rs block @ typeNumber:\" + typeNumber + \"/errorCorrectLevel:\" + errorCorrectLevel);\n        }\n        var length = rsBlock.length / 3;\n        var list = [];\n        for (var i = 0; i < length; i++) {\n            var count = rsBlock[i * 3 + 0];\n            var totalCount = rsBlock[i * 3 + 1];\n            var dataCount = rsBlock[i * 3 + 2];\n            for (var j = 0; j < count; j++) {\n                list.push(new QRRSBlock(totalCount, dataCount));\n            }\n        }\n        return list;\n    };\n    QRRSBlock.getRsBlockTable = function (typeNumber, errorCorrectLevel) {\n        switch (errorCorrectLevel) {\n            case exports.QRErrorCorrectLevel.L:\n                return QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 0];\n            case exports.QRErrorCorrectLevel.M:\n                return QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 1];\n            case exports.QRErrorCorrectLevel.Q:\n                return QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 2];\n            case exports.QRErrorCorrectLevel.H:\n                return QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 3];\n            default:\n                return undefined;\n        }\n    };\n    QRRSBlock.RS_BLOCK_TABLE = [\n        [1, 26, 19],\n        [1, 26, 16],\n        [1, 26, 13],\n        [1, 26, 9],\n        [1, 44, 34],\n        [1, 44, 28],\n        [1, 44, 22],\n        [1, 44, 16],\n        [1, 70, 55],\n        [1, 70, 44],\n        [2, 35, 17],\n        [2, 35, 13],\n        [1, 100, 80],\n        [2, 50, 32],\n        [2, 50, 24],\n        [4, 25, 9],\n        [1, 134, 108],\n        [2, 67, 43],\n        [2, 33, 15, 2, 34, 16],\n        [2, 33, 11, 2, 34, 12],\n        [2, 86, 68],\n        [4, 43, 27],\n        [4, 43, 19],\n        [4, 43, 15],\n        [2, 98, 78],\n        [4, 49, 31],\n        [2, 32, 14, 4, 33, 15],\n        [4, 39, 13, 1, 40, 14],\n        [2, 121, 97],\n        [2, 60, 38, 2, 61, 39],\n        [4, 40, 18, 2, 41, 19],\n        [4, 40, 14, 2, 41, 15],\n        [2, 146, 116],\n        [3, 58, 36, 2, 59, 37],\n        [4, 36, 16, 4, 37, 17],\n        [4, 36, 12, 4, 37, 13],\n        [2, 86, 68, 2, 87, 69],\n        [4, 69, 43, 1, 70, 44],\n        [6, 43, 19, 2, 44, 20],\n        [6, 43, 15, 2, 44, 16],\n        [4, 101, 81],\n        [1, 80, 50, 4, 81, 51],\n        [4, 50, 22, 4, 51, 23],\n        [3, 36, 12, 8, 37, 13],\n        [2, 116, 92, 2, 117, 93],\n        [6, 58, 36, 2, 59, 37],\n        [4, 46, 20, 6, 47, 21],\n        [7, 42, 14, 4, 43, 15],\n        [4, 133, 107],\n        [8, 59, 37, 1, 60, 38],\n        [8, 44, 20, 4, 45, 21],\n        [12, 33, 11, 4, 34, 12],\n        [3, 145, 115, 1, 146, 116],\n        [4, 64, 40, 5, 65, 41],\n        [11, 36, 16, 5, 37, 17],\n        [11, 36, 12, 5, 37, 13],\n        [5, 109, 87, 1, 110, 88],\n        [5, 65, 41, 5, 66, 42],\n        [5, 54, 24, 7, 55, 25],\n        [11, 36, 12],\n        [5, 122, 98, 1, 123, 99],\n        [7, 73, 45, 3, 74, 46],\n        [15, 43, 19, 2, 44, 20],\n        [3, 45, 15, 13, 46, 16],\n        [1, 135, 107, 5, 136, 108],\n        [10, 74, 46, 1, 75, 47],\n        [1, 50, 22, 15, 51, 23],\n        [2, 42, 14, 17, 43, 15],\n        [5, 150, 120, 1, 151, 121],\n        [9, 69, 43, 4, 70, 44],\n        [17, 50, 22, 1, 51, 23],\n        [2, 42, 14, 19, 43, 15],\n        [3, 141, 113, 4, 142, 114],\n        [3, 70, 44, 11, 71, 45],\n        [17, 47, 21, 4, 48, 22],\n        [9, 39, 13, 16, 40, 14],\n        [3, 135, 107, 5, 136, 108],\n        [3, 67, 41, 13, 68, 42],\n        [15, 54, 24, 5, 55, 25],\n        [15, 43, 15, 10, 44, 16],\n        [4, 144, 116, 4, 145, 117],\n        [17, 68, 42],\n        [17, 50, 22, 6, 51, 23],\n        [19, 46, 16, 6, 47, 17],\n        [2, 139, 111, 7, 140, 112],\n        [17, 74, 46],\n        [7, 54, 24, 16, 55, 25],\n        [34, 37, 13],\n        [4, 151, 121, 5, 152, 122],\n        [4, 75, 47, 14, 76, 48],\n        [11, 54, 24, 14, 55, 25],\n        [16, 45, 15, 14, 46, 16],\n        [6, 147, 117, 4, 148, 118],\n        [6, 73, 45, 14, 74, 46],\n        [11, 54, 24, 16, 55, 25],\n        [30, 46, 16, 2, 47, 17],\n        [8, 132, 106, 4, 133, 107],\n        [8, 75, 47, 13, 76, 48],\n        [7, 54, 24, 22, 55, 25],\n        [22, 45, 15, 13, 46, 16],\n        [10, 142, 114, 2, 143, 115],\n        [19, 74, 46, 4, 75, 47],\n        [28, 50, 22, 6, 51, 23],\n        [33, 46, 16, 4, 47, 17],\n        [8, 152, 122, 4, 153, 123],\n        [22, 73, 45, 3, 74, 46],\n        [8, 53, 23, 26, 54, 24],\n        [12, 45, 15, 28, 46, 16],\n        [3, 147, 117, 10, 148, 118],\n        [3, 73, 45, 23, 74, 46],\n        [4, 54, 24, 31, 55, 25],\n        [11, 45, 15, 31, 46, 16],\n        [7, 146, 116, 7, 147, 117],\n        [21, 73, 45, 7, 74, 46],\n        [1, 53, 23, 37, 54, 24],\n        [19, 45, 15, 26, 46, 16],\n        [5, 145, 115, 10, 146, 116],\n        [19, 75, 47, 10, 76, 48],\n        [15, 54, 24, 25, 55, 25],\n        [23, 45, 15, 25, 46, 16],\n        [13, 145, 115, 3, 146, 116],\n        [2, 74, 46, 29, 75, 47],\n        [42, 54, 24, 1, 55, 25],\n        [23, 45, 15, 28, 46, 16],\n        [17, 145, 115],\n        [10, 74, 46, 23, 75, 47],\n        [10, 54, 24, 35, 55, 25],\n        [19, 45, 15, 35, 46, 16],\n        [17, 145, 115, 1, 146, 116],\n        [14, 74, 46, 21, 75, 47],\n        [29, 54, 24, 19, 55, 25],\n        [11, 45, 15, 46, 46, 16],\n        [13, 145, 115, 6, 146, 116],\n        [14, 74, 46, 23, 75, 47],\n        [44, 54, 24, 7, 55, 25],\n        [59, 46, 16, 1, 47, 17],\n        [12, 151, 121, 7, 152, 122],\n        [12, 75, 47, 26, 76, 48],\n        [39, 54, 24, 14, 55, 25],\n        [22, 45, 15, 41, 46, 16],\n        [6, 151, 121, 14, 152, 122],\n        [6, 75, 47, 34, 76, 48],\n        [46, 54, 24, 10, 55, 25],\n        [2, 45, 15, 64, 46, 16],\n        [17, 152, 122, 4, 153, 123],\n        [29, 74, 46, 14, 75, 47],\n        [49, 54, 24, 10, 55, 25],\n        [24, 45, 15, 46, 46, 16],\n        [4, 152, 122, 18, 153, 123],\n        [13, 74, 46, 32, 75, 47],\n        [48, 54, 24, 14, 55, 25],\n        [42, 45, 15, 32, 46, 16],\n        [20, 147, 117, 4, 148, 118],\n        [40, 75, 47, 7, 76, 48],\n        [43, 54, 24, 22, 55, 25],\n        [10, 45, 15, 67, 46, 16],\n        [19, 148, 118, 6, 149, 119],\n        [18, 75, 47, 31, 76, 48],\n        [34, 54, 24, 34, 55, 25],\n        [20, 45, 15, 61, 46, 16],\n    ];\n    return QRRSBlock;\n}());\nvar QRBitBuffer = /** @class */ (function () {\n    function QRBitBuffer() {\n        this.buffer = [];\n        this.length = 0;\n    }\n    QRBitBuffer.prototype.get = function (index) {\n        var bufIndex = Math.floor(index / 8);\n        return ((this.buffer[bufIndex] >>> (7 - (index % 8))) & 1) == 1;\n    };\n    QRBitBuffer.prototype.put = function (num, length) {\n        for (var i = 0; i < length; i++) {\n            this.putBit(((num >>> (length - i - 1)) & 1) == 1);\n        }\n    };\n    QRBitBuffer.prototype.getLengthInBits = function () {\n        return this.length;\n    };\n    QRBitBuffer.prototype.putBit = function (bit) {\n        var bufIndex = Math.floor(this.length / 8);\n        if (this.buffer.length <= bufIndex) {\n            this.buffer.push(0);\n        }\n        if (bit) {\n            this.buffer[bufIndex] |= 0x80 >>> this.length % 8;\n        }\n        this.length++;\n    };\n    return QRBitBuffer;\n}());\nvar QRCodeLimitLength = [\n    [17, 14, 11, 7],\n    [32, 26, 20, 14],\n    [53, 42, 32, 24],\n    [78, 62, 46, 34],\n    [106, 84, 60, 44],\n    [134, 106, 74, 58],\n    [154, 122, 86, 64],\n    [192, 152, 108, 84],\n    [230, 180, 130, 98],\n    [271, 213, 151, 119],\n    [321, 251, 177, 137],\n    [367, 287, 203, 155],\n    [425, 331, 241, 177],\n    [458, 362, 258, 194],\n    [520, 412, 292, 220],\n    [586, 450, 322, 250],\n    [644, 504, 364, 280],\n    [718, 560, 394, 310],\n    [792, 624, 442, 338],\n    [858, 666, 482, 382],\n    [929, 711, 509, 403],\n    [1003, 779, 565, 439],\n    [1091, 857, 611, 461],\n    [1171, 911, 661, 511],\n    [1273, 997, 715, 535],\n    [1367, 1059, 751, 593],\n    [1465, 1125, 805, 625],\n    [1528, 1190, 868, 658],\n    [1628, 1264, 908, 698],\n    [1732, 1370, 982, 742],\n    [1840, 1452, 1030, 790],\n    [1952, 1538, 1112, 842],\n    [2068, 1628, 1168, 898],\n    [2188, 1722, 1228, 958],\n    [2303, 1809, 1283, 983],\n    [2431, 1911, 1351, 1051],\n    [2563, 1989, 1423, 1093],\n    [2699, 2099, 1499, 1139],\n    [2809, 2213, 1579, 1219],\n    [2953, 2331, 1663, 1273],\n];\n"]},"metadata":{},"sourceType":"script"}