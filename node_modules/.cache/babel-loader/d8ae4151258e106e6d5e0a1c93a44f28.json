{"ast":null,"code":"/*-\n * ‌\n * Hedera JavaScript SDK\n * ​\n * Copyright (C) 2020 - 2022 Hedera Hashgraph, LLC\n * ​\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * ‍\n */\nimport ScheduleId from \"./ScheduleId.js\";\nimport AccountId from \"../account/AccountId.js\";\nimport Timestamp from \"../Timestamp.js\";\nimport Transaction from \"../transaction/Transaction.js\";\nimport * as HashgraphProto from \"@hashgraph/proto\";\nimport TransactionId from \"../transaction/TransactionId.js\";\nimport Key from \"../Key.js\";\nimport KeyList from \"../KeyList.js\";\nconst {\n  proto\n} = HashgraphProto;\n/**\n * Response when the client sends the node ScheduleGetInfoQuery.\n */\n\nexport default class ScheduleInfo {\n  /**\n   * @private\n   * @param {object} props\n   * @param {ScheduleId} props.scheduleId;\n   * @param {?AccountId} props.creatorAccountID;\n   * @param {?AccountId} props.payerAccountID;\n   * @param {?HashgraphProto.proto.ISchedulableTransactionBody} props.schedulableTransactionBody;\n   * @param {?Key} props.adminKey\n   * @param {?KeyList} props.signers;\n   * @param {?string} props.scheduleMemo;\n   * @param {?Timestamp} props.expirationTime;\n   * @param {?Timestamp} props.executed;\n   * @param {?Timestamp} props.deleted;\n   * @param {?TransactionId} props.scheduledTransactionId;\n   * @param {boolean} props.waitForExpiry;\n   */\n  constructor(props) {\n    /**\n     * @readonly\n     */\n    this.scheduleId = props.scheduleId;\n    /**\n     * @readonly\n     */\n\n    this.creatorAccountId = props.creatorAccountID;\n    /**\n     * @readonly\n     */\n\n    this.payerAccountId = props.payerAccountID;\n    /**\n     * @readonly\n     */\n\n    this.schedulableTransactionBody = props.schedulableTransactionBody;\n    /**\n     * @readonly\n     */\n\n    this.signers = props.signers;\n    /**\n     * @readonly\n     */\n\n    this.scheduleMemo = props.scheduleMemo;\n    /**\n     * @readonly\n     */\n\n    this.adminKey = props.adminKey != null ? props.adminKey : null;\n    /**\n     * @readonly\n     */\n\n    this.expirationTime = props.expirationTime;\n    /**\n     * @readonly\n     */\n\n    this.executed = props.executed;\n    /**\n     * @readonly\n     */\n\n    this.deleted = props.deleted;\n    /**\n     * @readonly\n     */\n\n    this.scheduledTransactionId = props.scheduledTransactionId;\n    /**\n     *\n     * @readonly\n     */\n\n    this.waitForExpiry = props.waitForExpiry;\n    Object.freeze(this);\n  }\n  /**\n   * @internal\n   * @param {HashgraphProto.proto.IScheduleInfo} info\n   * @returns {ScheduleInfo}\n   */\n\n\n  static _fromProtobuf(info) {\n    return new ScheduleInfo({\n      scheduleId: ScheduleId._fromProtobuf(\n      /** @type {HashgraphProto.proto.IScheduleID} */\n      info.scheduleID),\n      creatorAccountID: info.creatorAccountID != null ? AccountId._fromProtobuf(\n      /** @type {HashgraphProto.proto.IAccountID} */\n      info.creatorAccountID) : null,\n      payerAccountID: info.payerAccountID != null ? AccountId._fromProtobuf(\n      /** @type {HashgraphProto.proto.IAccountID} */\n      info.payerAccountID) : null,\n      schedulableTransactionBody: info.scheduledTransactionBody != null ? info.scheduledTransactionBody : null,\n      adminKey: info.adminKey != null ? Key._fromProtobufKey(info.adminKey) : null,\n      signers: info.signers != null ? KeyList.__fromProtobufKeyList(info.signers) : null,\n      scheduleMemo: info.memo != null ? info.memo : null,\n      expirationTime: info.expirationTime != null ? Timestamp._fromProtobuf(\n      /** @type {HashgraphProto.proto.ITimestamp} */\n      info.expirationTime) : null,\n      executed: info.executionTime != null ? Timestamp._fromProtobuf(\n      /** @type {HashgraphProto.proto.ITimestamp} */\n      info.executionTime) : null,\n      deleted: info.deletionTime != null ? Timestamp._fromProtobuf(\n      /** @type {HashgraphProto.proto.ITimestamp} */\n      info.deletionTime) : null,\n      scheduledTransactionId: info.scheduledTransactionID != null ? TransactionId._fromProtobuf(info.scheduledTransactionID) : null,\n      waitForExpiry: info.waitForExpiry != null ? info.waitForExpiry : false\n    });\n  }\n  /**\n   * @returns {HashgraphProto.proto.IScheduleInfo}\n   */\n\n\n  _toProtobuf() {\n    return {\n      scheduleID: this.scheduleId != null ? this.scheduleId._toProtobuf() : null,\n      creatorAccountID: this.creatorAccountId != null ? this.creatorAccountId._toProtobuf() : null,\n      payerAccountID: this.payerAccountId != null ? this.payerAccountId._toProtobuf() : null,\n      scheduledTransactionBody: this.schedulableTransactionBody != null ? this.schedulableTransactionBody : null,\n      adminKey: this.adminKey != null ? this.adminKey._toProtobufKey() : null,\n      signers: this.signers != null ? this.signers._toProtobufKey().keyList : null,\n      memo: this.scheduleMemo != null ? this.scheduleMemo : \"\",\n      expirationTime: this.expirationTime != null ? this.expirationTime._toProtobuf() : null,\n      scheduledTransactionID: this.scheduledTransactionId != null ? this.scheduledTransactionId._toProtobuf() : null,\n      waitForExpiry: this.waitForExpiry\n    };\n  }\n  /**\n   * @returns {Transaction}\n   */\n\n\n  get scheduledTransaction() {\n    if (this.schedulableTransactionBody == null) {\n      throw new Error(\"Scheduled transaction body is empty\");\n    }\n\n    const scheduled = new proto.SchedulableTransactionBody(this.schedulableTransactionBody);\n    const data =\n    /** @type {NonNullable<HashgraphProto.proto.SchedulableTransactionBody[\"data\"]>} */\n    scheduled.data;\n    return Transaction.fromBytes(proto.TransactionList.encode({\n      transactionList: [{\n        signedTransactionBytes: proto.SignedTransaction.encode({\n          bodyBytes: proto.TransactionBody.encode({\n            transactionFee: this.schedulableTransactionBody.transactionFee,\n            memo: this.schedulableTransactionBody.memo,\n            [data]: scheduled[data]\n          }).finish()\n        }).finish()\n      }]\n    }).finish());\n  }\n\n}","map":{"version":3,"sources":["/Users/jithendra/Desktop/Work/hbar-shop/hbar-shopify-coupon-client/node_modules/@hashgraph/sdk/src/schedule/ScheduleInfo.js"],"names":["ScheduleId","AccountId","Timestamp","Transaction","HashgraphProto","TransactionId","Key","KeyList","proto","ScheduleInfo","constructor","props","scheduleId","creatorAccountId","creatorAccountID","payerAccountId","payerAccountID","schedulableTransactionBody","signers","scheduleMemo","adminKey","expirationTime","executed","deleted","scheduledTransactionId","waitForExpiry","Object","freeze","_fromProtobuf","info","scheduleID","scheduledTransactionBody","_fromProtobufKey","__fromProtobufKeyList","memo","executionTime","deletionTime","scheduledTransactionID","_toProtobuf","_toProtobufKey","keyList","scheduledTransaction","Error","scheduled","SchedulableTransactionBody","data","fromBytes","TransactionList","encode","transactionList","signedTransactionBytes","SignedTransaction","bodyBytes","TransactionBody","transactionFee","finish"],"mappings":"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","sourcesContent":["/*-\n * ‌\n * Hedera JavaScript SDK\n * ​\n * Copyright (C) 2020 - 2022 Hedera Hashgraph, LLC\n * ​\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * ‍\n */\n\nimport ScheduleId from \"./ScheduleId.js\";\nimport AccountId from \"../account/AccountId.js\";\nimport Timestamp from \"../Timestamp.js\";\nimport Transaction from \"../transaction/Transaction.js\";\nimport * as HashgraphProto from \"@hashgraph/proto\";\nimport TransactionId from \"../transaction/TransactionId.js\";\nimport Key from \"../Key.js\";\nimport KeyList from \"../KeyList.js\";\n\nconst { proto } = HashgraphProto;\n\n/**\n * Response when the client sends the node ScheduleGetInfoQuery.\n */\nexport default class ScheduleInfo {\n    /**\n     * @private\n     * @param {object} props\n     * @param {ScheduleId} props.scheduleId;\n     * @param {?AccountId} props.creatorAccountID;\n     * @param {?AccountId} props.payerAccountID;\n     * @param {?HashgraphProto.proto.ISchedulableTransactionBody} props.schedulableTransactionBody;\n     * @param {?Key} props.adminKey\n     * @param {?KeyList} props.signers;\n     * @param {?string} props.scheduleMemo;\n     * @param {?Timestamp} props.expirationTime;\n     * @param {?Timestamp} props.executed;\n     * @param {?Timestamp} props.deleted;\n     * @param {?TransactionId} props.scheduledTransactionId;\n     * @param {boolean} props.waitForExpiry;\n     */\n    constructor(props) {\n        /**\n         * @readonly\n         */\n        this.scheduleId = props.scheduleId;\n\n        /**\n         * @readonly\n         */\n        this.creatorAccountId = props.creatorAccountID;\n\n        /**\n         * @readonly\n         */\n        this.payerAccountId = props.payerAccountID;\n\n        /**\n         * @readonly\n         */\n        this.schedulableTransactionBody = props.schedulableTransactionBody;\n\n        /**\n         * @readonly\n         */\n        this.signers = props.signers;\n\n        /**\n         * @readonly\n         */\n        this.scheduleMemo = props.scheduleMemo;\n\n        /**\n         * @readonly\n         */\n        this.adminKey = props.adminKey != null ? props.adminKey : null;\n\n        /**\n         * @readonly\n         */\n        this.expirationTime = props.expirationTime;\n\n        /**\n         * @readonly\n         */\n        this.executed = props.executed;\n\n        /**\n         * @readonly\n         */\n        this.deleted = props.deleted;\n\n        /**\n         * @readonly\n         */\n        this.scheduledTransactionId = props.scheduledTransactionId;\n\n        /**\n         *\n         * @readonly\n         */\n        this.waitForExpiry = props.waitForExpiry;\n\n        Object.freeze(this);\n    }\n\n    /**\n     * @internal\n     * @param {HashgraphProto.proto.IScheduleInfo} info\n     * @returns {ScheduleInfo}\n     */\n    static _fromProtobuf(info) {\n        return new ScheduleInfo({\n            scheduleId: ScheduleId._fromProtobuf(\n                /** @type {HashgraphProto.proto.IScheduleID} */ (\n                    info.scheduleID\n                )\n            ),\n            creatorAccountID:\n                info.creatorAccountID != null\n                    ? AccountId._fromProtobuf(\n                          /** @type {HashgraphProto.proto.IAccountID} */ (\n                              info.creatorAccountID\n                          )\n                      )\n                    : null,\n            payerAccountID:\n                info.payerAccountID != null\n                    ? AccountId._fromProtobuf(\n                          /** @type {HashgraphProto.proto.IAccountID} */ (\n                              info.payerAccountID\n                          )\n                      )\n                    : null,\n            schedulableTransactionBody:\n                info.scheduledTransactionBody != null\n                    ? info.scheduledTransactionBody\n                    : null,\n            adminKey:\n                info.adminKey != null\n                    ? Key._fromProtobufKey(info.adminKey)\n                    : null,\n            signers:\n                info.signers != null\n                    ? KeyList.__fromProtobufKeyList(info.signers)\n                    : null,\n            scheduleMemo: info.memo != null ? info.memo : null,\n            expirationTime:\n                info.expirationTime != null\n                    ? Timestamp._fromProtobuf(\n                          /** @type {HashgraphProto.proto.ITimestamp} */ (\n                              info.expirationTime\n                          )\n                      )\n                    : null,\n            executed:\n                info.executionTime != null\n                    ? Timestamp._fromProtobuf(\n                          /** @type {HashgraphProto.proto.ITimestamp} */ (\n                              info.executionTime\n                          )\n                      )\n                    : null,\n            deleted:\n                info.deletionTime != null\n                    ? Timestamp._fromProtobuf(\n                          /** @type {HashgraphProto.proto.ITimestamp} */ (\n                              info.deletionTime\n                          )\n                      )\n                    : null,\n            scheduledTransactionId:\n                info.scheduledTransactionID != null\n                    ? TransactionId._fromProtobuf(info.scheduledTransactionID)\n                    : null,\n            waitForExpiry:\n                info.waitForExpiry != null ? info.waitForExpiry : false,\n        });\n    }\n\n    /**\n     * @returns {HashgraphProto.proto.IScheduleInfo}\n     */\n    _toProtobuf() {\n        return {\n            scheduleID:\n                this.scheduleId != null ? this.scheduleId._toProtobuf() : null,\n            creatorAccountID:\n                this.creatorAccountId != null\n                    ? this.creatorAccountId._toProtobuf()\n                    : null,\n            payerAccountID:\n                this.payerAccountId != null\n                    ? this.payerAccountId._toProtobuf()\n                    : null,\n            scheduledTransactionBody:\n                this.schedulableTransactionBody != null\n                    ? this.schedulableTransactionBody\n                    : null,\n            adminKey:\n                this.adminKey != null ? this.adminKey._toProtobufKey() : null,\n            signers:\n                this.signers != null\n                    ? this.signers._toProtobufKey().keyList\n                    : null,\n            memo: this.scheduleMemo != null ? this.scheduleMemo : \"\",\n            expirationTime:\n                this.expirationTime != null\n                    ? this.expirationTime._toProtobuf()\n                    : null,\n            scheduledTransactionID:\n                this.scheduledTransactionId != null\n                    ? this.scheduledTransactionId._toProtobuf()\n                    : null,\n            waitForExpiry: this.waitForExpiry,\n        };\n    }\n\n    /**\n     * @returns {Transaction}\n     */\n    get scheduledTransaction() {\n        if (this.schedulableTransactionBody == null) {\n            throw new Error(\"Scheduled transaction body is empty\");\n        }\n\n        const scheduled = new proto.SchedulableTransactionBody(\n            this.schedulableTransactionBody\n        );\n        const data =\n            /** @type {NonNullable<HashgraphProto.proto.SchedulableTransactionBody[\"data\"]>} */ (\n                scheduled.data\n            );\n\n        return Transaction.fromBytes(\n            proto.TransactionList.encode({\n                transactionList: [\n                    {\n                        signedTransactionBytes: proto.SignedTransaction.encode({\n                            bodyBytes: proto.TransactionBody.encode({\n                                transactionFee:\n                                    this.schedulableTransactionBody\n                                        .transactionFee,\n                                memo: this.schedulableTransactionBody.memo,\n                                [data]: scheduled[data],\n                            }).finish(),\n                        }).finish(),\n                    },\n                ],\n            }).finish()\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}