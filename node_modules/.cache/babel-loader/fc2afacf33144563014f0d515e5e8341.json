{"ast":null,"code":"/*-\n * ‌\n * Hedera JavaScript SDK\n * ​\n * Copyright (C) 2020 - 2022 Hedera Hashgraph, LLC\n * ​\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * ‍\n */\nimport Long from \"long\";\nimport TokenId from \"../token/TokenId.js\";\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").proto.ITokenRelationship} HashgraphProto.proto.ITokenRelationship\n * @typedef {import(\"@hashgraph/proto\").proto.TokenKycStatus} HashgraphProto.proto.TokenKycStatus\n * @typedef {import(\"@hashgraph/proto\").proto.TokenFreezeStatus} HashgraphProto.proto.TokenFreezeStatus\n * @typedef {import(\"@hashgraph/proto\").proto.ITokenID} HashgraphProto.proto.ITokenID\n */\n\n/**\n * Token's information related to the given Account\n */\n\nexport default class TokenRelationship {\n  /**\n   * @param {object} props\n   * @param {TokenId} props.tokenId\n   * @param {string} props.symbol\n   * @param {Long} props.balance\n   * @param {boolean | null} props.isKycGranted\n   * @param {boolean | null} props.isFrozen\n   * @param {boolean | null} props.automaticAssociation\n   */\n  constructor(props) {\n    /**\n     * The ID of the token\n     *\n     * @readonly\n     */\n    this.tokenId = props.tokenId;\n    /**\n     * The Symbol of the token\n     *\n     * @readonly\n     */\n\n    this.symbol = props.symbol;\n    /**\n     * The balance that the Account holds in the smallest denomination\n     *\n     * @readonly\n     */\n\n    this.balance = props.balance;\n    /**\n     * The KYC status of the account (KycNotApplicable, Granted or Revoked). If the token does\n     * not have KYC key, KycNotApplicable is returned\n     *\n     * @readonly\n     */\n\n    this.isKycGranted = props.isKycGranted;\n    /**\n     * The Freeze status of the account (FreezeNotApplicable, Frozen or Unfrozen). If the token\n     * does not have Freeze key, FreezeNotApplicable is returned\n     *\n     * @readonly\n     */\n\n    this.isFrozen = props.isFrozen;\n    /**\n     * Specifies if the relationship is created implicitly. False : explicitly associated, True :\n     * implicitly associated.\n     *\n     * @readonly\n     */\n\n    this.automaticAssociation = props.automaticAssociation;\n    Object.freeze(this);\n  }\n  /**\n   * @param {HashgraphProto.proto.ITokenRelationship} relationship\n   * @returns {TokenRelationship}\n   */\n\n\n  static _fromProtobuf(relationship) {\n    const tokenId = TokenId._fromProtobuf(\n    /** @type {HashgraphProto.proto.ITokenID} */\n    relationship.tokenId);\n\n    const isKycGranted = relationship.kycStatus == null || relationship.kycStatus === 0 ? null : relationship.kycStatus === 1;\n    const isFrozen = relationship.freezeStatus == null || relationship.freezeStatus === 0 ? null : relationship.freezeStatus === 1;\n    return new TokenRelationship({\n      tokenId,\n      symbol:\n      /** @type {string} */\n      relationship.symbol,\n      balance: relationship.balance != null ? relationship.balance instanceof Long ? relationship.balance : Long.fromValue(relationship.balance) : Long.ZERO,\n      isKycGranted,\n      isFrozen,\n      automaticAssociation: relationship.automaticAssociation != null ? relationship.automaticAssociation : null\n    });\n  }\n  /**\n   * @returns {HashgraphProto.proto.ITokenRelationship}\n   */\n\n\n  _toProtobuf() {\n    return {\n      tokenId: this.tokenId._toProtobuf(),\n      symbol: this.symbol,\n      balance: this.balance,\n      kycStatus: this.isKycGranted == null ? 0 : this.isKycGranted ? 1 : 2,\n      freezeStatus: this.isFrozen == null ? 0 : this.isFrozen ? 1 : 2,\n      automaticAssociation: this.automaticAssociation\n    };\n  }\n\n}","map":{"version":3,"sources":["/Users/jithendra/Desktop/Work/hbar-shop/hbar-shop-dashboard/node_modules/@hashgraph/sdk/src/account/TokenRelationship.js"],"names":["Long","TokenId","TokenRelationship","constructor","props","tokenId","symbol","balance","isKycGranted","isFrozen","automaticAssociation","Object","freeze","_fromProtobuf","relationship","kycStatus","freezeStatus","fromValue","ZERO","_toProtobuf"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,IAAP,MAAiB,MAAjB;AACA,OAAOC,OAAP,MAAoB,qBAApB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AACA,eAAe,MAAMC,iBAAN,CAAwB;AACnC;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACIC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf;AACR;AACA;AACA;AACA;AACQ,SAAKC,OAAL,GAAeD,KAAK,CAACC,OAArB;AAEA;AACR;AACA;AACA;AACA;;AACQ,SAAKC,MAAL,GAAcF,KAAK,CAACE,MAApB;AAEA;AACR;AACA;AACA;AACA;;AACQ,SAAKC,OAAL,GAAeH,KAAK,CAACG,OAArB;AAEA;AACR;AACA;AACA;AACA;AACA;;AACQ,SAAKC,YAAL,GAAoBJ,KAAK,CAACI,YAA1B;AAEA;AACR;AACA;AACA;AACA;AACA;;AACQ,SAAKC,QAAL,GAAgBL,KAAK,CAACK,QAAtB;AAEA;AACR;AACA;AACA;AACA;AACA;;AACQ,SAAKC,oBAAL,GAA4BN,KAAK,CAACM,oBAAlC;AAEAC,IAAAA,MAAM,CAACC,MAAP,CAAc,IAAd;AACH;AAED;AACJ;AACA;AACA;;;AACwB,SAAbC,aAAa,CAACC,YAAD,EAAe;AAC/B,UAAMT,OAAO,GAAGJ,OAAO,CAACY,aAAR;AACZ;AAA8CC,IAAAA,YAAY,CAACT,OAD/C,CAAhB;;AAGA,UAAMG,YAAY,GACdM,YAAY,CAACC,SAAb,IAA0B,IAA1B,IAAkCD,YAAY,CAACC,SAAb,KAA2B,CAA7D,GACM,IADN,GAEMD,YAAY,CAACC,SAAb,KAA2B,CAHrC;AAIA,UAAMN,QAAQ,GACVK,YAAY,CAACE,YAAb,IAA6B,IAA7B,IAAqCF,YAAY,CAACE,YAAb,KAA8B,CAAnE,GACM,IADN,GAEMF,YAAY,CAACE,YAAb,KAA8B,CAHxC;AAKA,WAAO,IAAId,iBAAJ,CAAsB;AACzBG,MAAAA,OADyB;AAEzBC,MAAAA,MAAM;AAAE;AAAuBQ,MAAAA,YAAY,CAACR,MAFnB;AAGzBC,MAAAA,OAAO,EACHO,YAAY,CAACP,OAAb,IAAwB,IAAxB,GACMO,YAAY,CAACP,OAAb,YAAgCP,IAAhC,GACIc,YAAY,CAACP,OADjB,GAEIP,IAAI,CAACiB,SAAL,CAAeH,YAAY,CAACP,OAA5B,CAHV,GAIMP,IAAI,CAACkB,IARU;AASzBV,MAAAA,YATyB;AAUzBC,MAAAA,QAVyB;AAWzBC,MAAAA,oBAAoB,EAChBI,YAAY,CAACJ,oBAAb,IAAqC,IAArC,GACMI,YAAY,CAACJ,oBADnB,GAEM;AAde,KAAtB,CAAP;AAgBH;AAED;AACJ;AACA;;;AACIS,EAAAA,WAAW,GAAG;AACV,WAAO;AACHd,MAAAA,OAAO,EAAE,KAAKA,OAAL,CAAac,WAAb,EADN;AAEHb,MAAAA,MAAM,EAAE,KAAKA,MAFV;AAGHC,MAAAA,OAAO,EAAE,KAAKA,OAHX;AAIHQ,MAAAA,SAAS,EACL,KAAKP,YAAL,IAAqB,IAArB,GAA4B,CAA5B,GAAgC,KAAKA,YAAL,GAAoB,CAApB,GAAwB,CALzD;AAMHQ,MAAAA,YAAY,EAAE,KAAKP,QAAL,IAAiB,IAAjB,GAAwB,CAAxB,GAA4B,KAAKA,QAAL,GAAgB,CAAhB,GAAoB,CAN3D;AAOHC,MAAAA,oBAAoB,EAAE,KAAKA;AAPxB,KAAP;AASH;;AA3GkC","sourcesContent":["/*-\n * ‌\n * Hedera JavaScript SDK\n * ​\n * Copyright (C) 2020 - 2022 Hedera Hashgraph, LLC\n * ​\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * ‍\n */\n\nimport Long from \"long\";\nimport TokenId from \"../token/TokenId.js\";\n\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").proto.ITokenRelationship} HashgraphProto.proto.ITokenRelationship\n * @typedef {import(\"@hashgraph/proto\").proto.TokenKycStatus} HashgraphProto.proto.TokenKycStatus\n * @typedef {import(\"@hashgraph/proto\").proto.TokenFreezeStatus} HashgraphProto.proto.TokenFreezeStatus\n * @typedef {import(\"@hashgraph/proto\").proto.ITokenID} HashgraphProto.proto.ITokenID\n */\n\n/**\n * Token's information related to the given Account\n */\nexport default class TokenRelationship {\n    /**\n     * @param {object} props\n     * @param {TokenId} props.tokenId\n     * @param {string} props.symbol\n     * @param {Long} props.balance\n     * @param {boolean | null} props.isKycGranted\n     * @param {boolean | null} props.isFrozen\n     * @param {boolean | null} props.automaticAssociation\n     */\n    constructor(props) {\n        /**\n         * The ID of the token\n         *\n         * @readonly\n         */\n        this.tokenId = props.tokenId;\n\n        /**\n         * The Symbol of the token\n         *\n         * @readonly\n         */\n        this.symbol = props.symbol;\n\n        /**\n         * The balance that the Account holds in the smallest denomination\n         *\n         * @readonly\n         */\n        this.balance = props.balance;\n\n        /**\n         * The KYC status of the account (KycNotApplicable, Granted or Revoked). If the token does\n         * not have KYC key, KycNotApplicable is returned\n         *\n         * @readonly\n         */\n        this.isKycGranted = props.isKycGranted;\n\n        /**\n         * The Freeze status of the account (FreezeNotApplicable, Frozen or Unfrozen). If the token\n         * does not have Freeze key, FreezeNotApplicable is returned\n         *\n         * @readonly\n         */\n        this.isFrozen = props.isFrozen;\n\n        /**\n         * Specifies if the relationship is created implicitly. False : explicitly associated, True :\n         * implicitly associated.\n         *\n         * @readonly\n         */\n        this.automaticAssociation = props.automaticAssociation;\n\n        Object.freeze(this);\n    }\n\n    /**\n     * @param {HashgraphProto.proto.ITokenRelationship} relationship\n     * @returns {TokenRelationship}\n     */\n    static _fromProtobuf(relationship) {\n        const tokenId = TokenId._fromProtobuf(\n            /** @type {HashgraphProto.proto.ITokenID} */ (relationship.tokenId)\n        );\n        const isKycGranted =\n            relationship.kycStatus == null || relationship.kycStatus === 0\n                ? null\n                : relationship.kycStatus === 1;\n        const isFrozen =\n            relationship.freezeStatus == null || relationship.freezeStatus === 0\n                ? null\n                : relationship.freezeStatus === 1;\n\n        return new TokenRelationship({\n            tokenId,\n            symbol: /** @type {string} */ (relationship.symbol),\n            balance:\n                relationship.balance != null\n                    ? relationship.balance instanceof Long\n                        ? relationship.balance\n                        : Long.fromValue(relationship.balance)\n                    : Long.ZERO,\n            isKycGranted,\n            isFrozen,\n            automaticAssociation:\n                relationship.automaticAssociation != null\n                    ? relationship.automaticAssociation\n                    : null,\n        });\n    }\n\n    /**\n     * @returns {HashgraphProto.proto.ITokenRelationship}\n     */\n    _toProtobuf() {\n        return {\n            tokenId: this.tokenId._toProtobuf(),\n            symbol: this.symbol,\n            balance: this.balance,\n            kycStatus:\n                this.isKycGranted == null ? 0 : this.isKycGranted ? 1 : 2,\n            freezeStatus: this.isFrozen == null ? 0 : this.isFrozen ? 1 : 2,\n            automaticAssociation: this.automaticAssociation,\n        };\n    }\n}\n"]},"metadata":{},"sourceType":"module"}