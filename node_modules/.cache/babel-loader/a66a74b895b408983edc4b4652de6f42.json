{"ast":null,"code":"/*-\n * ‌\n * Hedera JavaScript SDK\n * ​\n * Copyright (C) 2020 - 2022 Hedera Hashgraph, LLC\n * ​\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * ‍\n */\nimport AccountId from \"../account/AccountId.js\";\nimport ContractId from \"./ContractId.js\";\nimport FileId from \"../file/FileId.js\";\nimport Transaction, { TRANSACTION_REGISTRY } from \"../transaction/Transaction.js\";\nimport Duration from \"../Duration.js\";\nimport Timestamp from \"../Timestamp.js\";\nimport Key from \"../Key.js\";\nimport Long from \"long\";\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").proto.ITransaction} HashgraphProto.proto.ITransaction\n * @typedef {import(\"@hashgraph/proto\").proto.ISignedTransaction} HashgraphProto.proto.ISignedTransaction\n * @typedef {import(\"@hashgraph/proto\").proto.TransactionBody} HashgraphProto.proto.TransactionBody\n * @typedef {import(\"@hashgraph/proto\").proto.ITransactionBody} HashgraphProto.proto.ITransactionBody\n * @typedef {import(\"@hashgraph/proto\").proto.ITransactionResponse} HashgraphProto.proto.ITransactionResponse\n * @typedef {import(\"@hashgraph/proto\").proto.IContractUpdateTransactionBody} HashgraphProto.proto.IContractUpdateTransactionBody\n * @typedef {import(\"@hashgraph/proto\").proto.IAccountID} HashgraphProto.proto.IAccountID\n * @typedef {import(\"@hashgraph/proto\").proto.IContractID} HashgraphProto.proto.IContractID\n * @typedef {import(\"@hashgraph/proto\").proto.IFileID} HashgraphProto.proto.IFileID\n */\n\n/**\n * @typedef {import(\"../channel/Channel.js\").default} Channel\n * @typedef {import(\"../client/Client.js\").default<*, *>} Client\n * @typedef {import(\"../transaction/TransactionId.js\").default} TransactionId\n */\n\nexport default class ContractUpdateTransaction extends Transaction {\n  /**\n   * @param {object} props\n   * @param {ContractId | string} [props.contractId]\n   * @param {FileId | string} [props.bytecodeFileId]\n   * @param {Timestamp | Date} [props.expirationTime]\n   * @param {Key} [props.adminKey]\n   * @param {AccountId | string} [props.proxyAccountId]\n   * @param {Duration | Long | number} [props.autoRenewPeriod]\n   * @param {string} [props.contractMemo]\n   * @param {number} [props.maxAutomaticTokenAssociations]\n   * @param {AccountId | string} [props.stakedAccountId]\n   * @param {Long | number} [props.stakedNodeId]\n   * @param {boolean} [props.declineStakingReward]\n   * @param {AccountId} [props.autoRenewAccountId]\n   */\n  constructor() {\n    let props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    super();\n    /**\n     * @private\n     * @type {?ContractId}\n     */\n\n    this._contractId = null;\n    /**\n     * @private\n     * @type {?Timestamp}\n     */\n\n    this._expirationTime = null;\n    /**\n     * @private\n     * @type {?Key}\n     */\n\n    this._adminKey = null;\n    /**\n     * @private\n     * @type {?AccountId}\n     */\n\n    this._proxyAccountId = null;\n    /**\n     * @private\n     * @type {?Duration}\n     */\n\n    this._autoRenewPeriod = null;\n    /**\n     * @private\n     * @type {?FileId}\n     */\n\n    this._bytecodeFileId = null;\n    /**\n     * @private\n     * @type {?string}\n     */\n\n    this._contractMemo = null;\n    /**\n     * @private\n     * @type {?number}\n     */\n\n    this._maxAutomaticTokenAssociations = 0;\n    /**\n     * @private\n     * @type {?AccountId}\n     */\n\n    this._stakedAccountId = null;\n    /**\n     * @private\n     * @type {?Long}\n     */\n\n    this._stakedNodeId = null;\n    /**\n     * @private\n     * @type {?boolean}\n     */\n\n    this._declineStakingReward = null;\n    /**\n     * @type {?AccountId}\n     */\n\n    this._autoRenewAccountId = null;\n\n    if (props.contractId != null) {\n      this.setContractId(props.contractId);\n    }\n\n    if (props.expirationTime != null) {\n      this.setExpirationTime(props.expirationTime);\n    }\n\n    if (props.adminKey != null) {\n      this.setAdminKey(props.adminKey);\n    }\n\n    if (props.proxyAccountId != null) {\n      // eslint-disable-next-line deprecation/deprecation\n      this.setProxyAccountId(props.proxyAccountId);\n    }\n\n    if (props.autoRenewPeriod != null) {\n      this.setAutoRenewPeriod(props.autoRenewPeriod);\n    }\n\n    if (props.bytecodeFileId != null) {\n      this.setBytecodeFileId(props.bytecodeFileId);\n    }\n\n    if (props.contractMemo != null) {\n      this.setContractMemo(props.contractMemo);\n    }\n\n    if (props.maxAutomaticTokenAssociations != null) {\n      this.setMaxAutomaticTokenAssociations(props.maxAutomaticTokenAssociations);\n    }\n\n    if (props.stakedAccountId != null) {\n      this.setStakedAccountId(props.stakedAccountId);\n    }\n\n    if (props.stakedNodeId != null) {\n      this.setStakedNodeId(props.stakedNodeId);\n    }\n\n    if (props.declineStakingReward != null) {\n      this.setDeclineStakingReward(props.declineStakingReward);\n    }\n\n    if (props.autoRenewAccountId != null) {\n      this.setAutoRenewAccountId(props.autoRenewAccountId);\n    }\n  }\n  /**\n   * @internal\n   * @param {HashgraphProto.proto.ITransaction[]} transactions\n   * @param {HashgraphProto.proto.ISignedTransaction[]} signedTransactions\n   * @param {TransactionId[]} transactionIds\n   * @param {AccountId[]} nodeIds\n   * @param {HashgraphProto.proto.ITransactionBody[]} bodies\n   * @returns {ContractUpdateTransaction}\n   */\n\n\n  static _fromProtobuf(transactions, signedTransactions, transactionIds, nodeIds, bodies) {\n    const body = bodies[0];\n    const update =\n    /** @type {HashgraphProto.proto.IContractUpdateTransactionBody} */\n    body.contractUpdateInstance;\n    let autoRenewPeriod = undefined;\n\n    if (update.autoRenewPeriod != null && update.autoRenewPeriod.seconds != null) {\n      autoRenewPeriod = update.autoRenewPeriod.seconds;\n    }\n\n    let contractMemo = undefined;\n\n    if (update.memoWrapper != null && update.memoWrapper.value != null) {\n      contractMemo = update.memoWrapper.value;\n    }\n\n    let maxAutomaticTokenAssociations = undefined;\n\n    if (update.maxAutomaticTokenAssociations != null && update.maxAutomaticTokenAssociations.value != null) {\n      maxAutomaticTokenAssociations = update.maxAutomaticTokenAssociations.value;\n    }\n\n    return Transaction._fromProtobufTransactions(new ContractUpdateTransaction({\n      contractId: update.contractID != null ? ContractId._fromProtobuf(\n      /** @type {HashgraphProto.proto.IContractID} */\n      update.contractID) : undefined,\n      bytecodeFileId: update.fileID != null ? FileId._fromProtobuf(\n      /** @type {HashgraphProto.proto.IFileID} */\n      update.fileID) : undefined,\n      expirationTime: update.expirationTime != null ? Timestamp._fromProtobuf(update.expirationTime) : undefined,\n      adminKey: update.adminKey != null ? Key._fromProtobufKey(update.adminKey) : undefined,\n      proxyAccountId: update.proxyAccountID != null ? AccountId._fromProtobuf(\n      /** @type {HashgraphProto.proto.IAccountID} */\n      update.proxyAccountID) : undefined,\n      autoRenewPeriod,\n      contractMemo,\n      maxAutomaticTokenAssociations,\n      stakedAccountId: update.stakedAccountId != null ? AccountId._fromProtobuf(update.stakedAccountId) : undefined,\n      stakedNodeId: update.stakedNodeId != null ? update.stakedNodeId : undefined,\n      declineStakingReward: update.declineReward != null && update.declineReward == true,\n      autoRenewAccountId: update.autoRenewAccountId != null ? AccountId._fromProtobuf(update.autoRenewAccountId) : undefined\n    }), transactions, signedTransactions, transactionIds, nodeIds, bodies);\n  }\n  /**\n   * @returns {?ContractId}\n   */\n\n\n  get contractId() {\n    return this._contractId;\n  }\n  /**\n   * Sets the contract ID which is being deleted in this transaction.\n   *\n   * @param {ContractId | string} contractId\n   * @returns {ContractUpdateTransaction}\n   */\n\n\n  setContractId(contractId) {\n    this._requireNotFrozen();\n\n    this._contractId = typeof contractId === \"string\" ? ContractId.fromString(contractId) : contractId.clone();\n    return this;\n  }\n  /**\n   * @returns {?Timestamp}\n   */\n\n\n  get expirationTime() {\n    return this._expirationTime;\n  }\n  /**\n   * Sets the contract ID which is being deleted in this transaction.\n   *\n   * @param {Timestamp | Date} expirationTime\n   * @returns {ContractUpdateTransaction}\n   */\n\n\n  setExpirationTime(expirationTime) {\n    this._requireNotFrozen();\n\n    this._expirationTime = expirationTime instanceof Timestamp ? expirationTime : Timestamp.fromDate(expirationTime);\n    return this;\n  }\n  /**\n   * @returns {?Key}\n   */\n\n\n  get adminKey() {\n    return this._adminKey;\n  }\n  /**\n   * @param {Key} adminKey\n   * @returns {this}\n   */\n\n\n  setAdminKey(adminKey) {\n    this._requireNotFrozen();\n\n    this._adminKey = adminKey;\n    return this;\n  }\n  /**\n   * @deprecated\n   * @returns {?AccountId}\n   */\n\n\n  get proxyAccountId() {\n    return this._proxyAccountId;\n  }\n  /**\n   * @deprecated\n   * @param {AccountId | string} proxyAccountId\n   * @returns {this}\n   */\n\n\n  setProxyAccountId(proxyAccountId) {\n    this._requireNotFrozen();\n\n    this._proxyAccountId = typeof proxyAccountId === \"string\" ? AccountId.fromString(proxyAccountId) : proxyAccountId.clone();\n    return this;\n  }\n  /**\n   * @returns {?Duration}\n   */\n\n\n  get autoRenewPeriod() {\n    return this._autoRenewPeriod;\n  }\n  /**\n   * @param {Duration | Long | number} autoRenewPeriod\n   * @returns {this}\n   */\n\n\n  setAutoRenewPeriod(autoRenewPeriod) {\n    this._requireNotFrozen();\n\n    this._autoRenewPeriod = autoRenewPeriod instanceof Duration ? autoRenewPeriod : new Duration(autoRenewPeriod);\n    return this;\n  }\n  /**\n   * @returns {?FileId}\n   */\n\n\n  get bytecodeFileId() {\n    return this._bytecodeFileId;\n  }\n  /**\n   * @param {FileId | string} bytecodeFileId\n   * @returns {this}\n   */\n\n\n  setBytecodeFileId(bytecodeFileId) {\n    console.warn(\"Deprecated: there is no replacement\");\n\n    this._requireNotFrozen();\n\n    this._bytecodeFileId = typeof bytecodeFileId === \"string\" ? FileId.fromString(bytecodeFileId) : bytecodeFileId.clone();\n    return this;\n  }\n  /**\n   * @returns {?string}\n   */\n\n\n  get contractMemo() {\n    return this._contractMemo;\n  }\n  /**\n   * @param {string} contractMemo\n   * @returns {this}\n   */\n\n\n  setContractMemo(contractMemo) {\n    this._requireNotFrozen();\n\n    this._contractMemo = contractMemo;\n    return this;\n  }\n  /**\n   * @returns {this}\n   */\n\n\n  clearContractMemo() {\n    this._requireNotFrozen();\n\n    this._contractMemo = null;\n    return this;\n  }\n  /**\n   * @returns {number | null}\n   */\n\n\n  get maxAutomaticTokenAssociations() {\n    return this._maxAutomaticTokenAssociations;\n  }\n  /**\n   * @param {number} maxAutomaticTokenAssociations\n   * @returns {this}\n   */\n\n\n  setMaxAutomaticTokenAssociations(maxAutomaticTokenAssociations) {\n    this._requireNotFrozen();\n\n    this._maxAutomaticTokenAssociations = maxAutomaticTokenAssociations;\n    return this;\n  }\n  /**\n   * @returns {?AccountId}\n   */\n\n\n  get stakedAccountId() {\n    return this._stakedAccountId;\n  }\n  /**\n   * @param {AccountId | string} stakedAccountId\n   * @returns {this}\n   */\n\n\n  setStakedAccountId(stakedAccountId) {\n    this._requireNotFrozen();\n\n    this._stakedAccountId = typeof stakedAccountId === \"string\" ? AccountId.fromString(stakedAccountId) : stakedAccountId;\n    return this;\n  }\n  /**\n   * @returns {?Long}\n   */\n\n\n  get stakedNodeId() {\n    return this._stakedNodeId;\n  }\n  /**\n   * @param {Long | number} stakedNodeId\n   * @returns {this}\n   */\n\n\n  setStakedNodeId(stakedNodeId) {\n    this._requireNotFrozen();\n\n    this._stakedNodeId = Long.fromValue(stakedNodeId);\n    return this;\n  }\n  /**\n   * @returns {?boolean}\n   */\n\n\n  get declineStakingRewards() {\n    return this._declineStakingReward;\n  }\n  /**\n   * @param {boolean} declineStakingReward\n   * @returns {this}\n   */\n\n\n  setDeclineStakingReward(declineStakingReward) {\n    this._requireNotFrozen();\n\n    this._declineStakingReward = declineStakingReward;\n    return this;\n  }\n  /**\n   * @returns {?AccountId}\n   */\n\n\n  get autoRenewAccountId() {\n    return this._autoRenewAccountId;\n  }\n  /**\n   * If set to the sentinel <tt>0.0.0</tt> AccountID, this field removes the contract's auto-renew\n   * account. Otherwise it updates the contract's auto-renew account to the referenced account.\n   *\n   * @param {string | AccountId} autoRenewAccountId\n   * @returns {this}\n   */\n\n\n  setAutoRenewAccountId(autoRenewAccountId) {\n    this._requireNotFrozen();\n\n    this._autoRenewAccountId = typeof autoRenewAccountId === \"string\" ? AccountId.fromString(autoRenewAccountId) : autoRenewAccountId;\n    return this;\n  }\n  /**\n   * @returns {this}\n   */\n\n\n  clearAutoRenewAccountId() {\n    this._autoRenewAccountId = new AccountId(0);\n    return this;\n  }\n  /**\n   * @param {Client} client\n   */\n\n\n  _validateChecksums(client) {\n    if (this._contractId != null) {\n      this._contractId.validateChecksum(client);\n    }\n\n    if (this._bytecodeFileId != null) {\n      this._bytecodeFileId.validateChecksum(client);\n    }\n\n    if (this._proxyAccountId != null) {\n      this._proxyAccountId.validateChecksum(client);\n    }\n  }\n  /**\n   * @override\n   * @internal\n   * @param {Channel} channel\n   * @param {HashgraphProto.proto.ITransaction} request\n   * @returns {Promise<HashgraphProto.proto.ITransactionResponse>}\n   */\n\n\n  _execute(channel, request) {\n    return channel.smartContract.updateContract(request);\n  }\n  /**\n   * @override\n   * @protected\n   * @returns {NonNullable<HashgraphProto.proto.TransactionBody[\"data\"]>}\n   */\n\n\n  _getTransactionDataCase() {\n    return \"contractUpdateInstance\";\n  }\n  /**\n   * @override\n   * @protected\n   * @returns {HashgraphProto.proto.IContractUpdateTransactionBody}\n   */\n\n\n  _makeTransactionData() {\n    return {\n      contractID: this._contractId != null ? this._contractId._toProtobuf() : null,\n      expirationTime: this._expirationTime != null ? this._expirationTime._toProtobuf() : null,\n      adminKey: this._adminKey != null ? this._adminKey._toProtobufKey() : null,\n      proxyAccountID: this._proxyAccountId != null ? this._proxyAccountId._toProtobuf() : null,\n      autoRenewPeriod: this._autoRenewPeriod != null ? this._autoRenewPeriod._toProtobuf() : null,\n      fileID: this._bytecodeFileId ? this._bytecodeFileId._toProtobuf() : null,\n      memoWrapper: this._contractMemo != null ? {\n        value: this._contractMemo\n      } : null,\n      maxAutomaticTokenAssociations: this._maxAutomaticTokenAssociations != null ? {\n        value: this._maxAutomaticTokenAssociations\n      } : null,\n      stakedAccountId: this.stakedAccountId != null ? this.stakedAccountId._toProtobuf() : null,\n      stakedNodeId: this.stakedNodeId,\n      declineReward: this.declineStakingRewards != null ? {\n        value: this.declineStakingRewards\n      } : null,\n      autoRenewAccountId: this._autoRenewAccountId != null ? this._autoRenewAccountId._toProtobuf() : null\n    };\n  }\n  /**\n   * @returns {string}\n   */\n\n\n  _getLogId() {\n    const timestamp =\n    /** @type {import(\"../Timestamp.js\").default} */\n    this._transactionIds.current.validStart;\n    return `ContractUpdateTransaction:${timestamp.toString()}`;\n  }\n\n}\nTRANSACTION_REGISTRY.set(\"contractUpdateInstance\", // eslint-disable-next-line @typescript-eslint/unbound-method\nContractUpdateTransaction._fromProtobuf);","map":{"version":3,"sources":["/Users/jithendra/Desktop/Work/hbar-shop/hbar-shop-dashboard/node_modules/@hashgraph/sdk/src/contract/ContractUpdateTransaction.js"],"names":["AccountId","ContractId","FileId","Transaction","TRANSACTION_REGISTRY","Duration","Timestamp","Key","Long","ContractUpdateTransaction","constructor","props","_contractId","_expirationTime","_adminKey","_proxyAccountId","_autoRenewPeriod","_bytecodeFileId","_contractMemo","_maxAutomaticTokenAssociations","_stakedAccountId","_stakedNodeId","_declineStakingReward","_autoRenewAccountId","contractId","setContractId","expirationTime","setExpirationTime","adminKey","setAdminKey","proxyAccountId","setProxyAccountId","autoRenewPeriod","setAutoRenewPeriod","bytecodeFileId","setBytecodeFileId","contractMemo","setContractMemo","maxAutomaticTokenAssociations","setMaxAutomaticTokenAssociations","stakedAccountId","setStakedAccountId","stakedNodeId","setStakedNodeId","declineStakingReward","setDeclineStakingReward","autoRenewAccountId","setAutoRenewAccountId","_fromProtobuf","transactions","signedTransactions","transactionIds","nodeIds","bodies","body","update","contractUpdateInstance","undefined","seconds","memoWrapper","value","_fromProtobufTransactions","contractID","fileID","_fromProtobufKey","proxyAccountID","declineReward","_requireNotFrozen","fromString","clone","fromDate","console","warn","clearContractMemo","fromValue","declineStakingRewards","clearAutoRenewAccountId","_validateChecksums","client","validateChecksum","_execute","channel","request","smartContract","updateContract","_getTransactionDataCase","_makeTransactionData","_toProtobuf","_toProtobufKey","_getLogId","timestamp","_transactionIds","current","validStart","toString","set"],"mappings":"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","sourcesContent":["/*-\n * ‌\n * Hedera JavaScript SDK\n * ​\n * Copyright (C) 2020 - 2022 Hedera Hashgraph, LLC\n * ​\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * ‍\n */\n\nimport AccountId from \"../account/AccountId.js\";\nimport ContractId from \"./ContractId.js\";\nimport FileId from \"../file/FileId.js\";\nimport Transaction, {\n    TRANSACTION_REGISTRY,\n} from \"../transaction/Transaction.js\";\nimport Duration from \"../Duration.js\";\nimport Timestamp from \"../Timestamp.js\";\nimport Key from \"../Key.js\";\nimport Long from \"long\";\n\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").proto.ITransaction} HashgraphProto.proto.ITransaction\n * @typedef {import(\"@hashgraph/proto\").proto.ISignedTransaction} HashgraphProto.proto.ISignedTransaction\n * @typedef {import(\"@hashgraph/proto\").proto.TransactionBody} HashgraphProto.proto.TransactionBody\n * @typedef {import(\"@hashgraph/proto\").proto.ITransactionBody} HashgraphProto.proto.ITransactionBody\n * @typedef {import(\"@hashgraph/proto\").proto.ITransactionResponse} HashgraphProto.proto.ITransactionResponse\n * @typedef {import(\"@hashgraph/proto\").proto.IContractUpdateTransactionBody} HashgraphProto.proto.IContractUpdateTransactionBody\n * @typedef {import(\"@hashgraph/proto\").proto.IAccountID} HashgraphProto.proto.IAccountID\n * @typedef {import(\"@hashgraph/proto\").proto.IContractID} HashgraphProto.proto.IContractID\n * @typedef {import(\"@hashgraph/proto\").proto.IFileID} HashgraphProto.proto.IFileID\n */\n\n/**\n * @typedef {import(\"../channel/Channel.js\").default} Channel\n * @typedef {import(\"../client/Client.js\").default<*, *>} Client\n * @typedef {import(\"../transaction/TransactionId.js\").default} TransactionId\n */\n\nexport default class ContractUpdateTransaction extends Transaction {\n    /**\n     * @param {object} props\n     * @param {ContractId | string} [props.contractId]\n     * @param {FileId | string} [props.bytecodeFileId]\n     * @param {Timestamp | Date} [props.expirationTime]\n     * @param {Key} [props.adminKey]\n     * @param {AccountId | string} [props.proxyAccountId]\n     * @param {Duration | Long | number} [props.autoRenewPeriod]\n     * @param {string} [props.contractMemo]\n     * @param {number} [props.maxAutomaticTokenAssociations]\n     * @param {AccountId | string} [props.stakedAccountId]\n     * @param {Long | number} [props.stakedNodeId]\n     * @param {boolean} [props.declineStakingReward]\n     * @param {AccountId} [props.autoRenewAccountId]\n     */\n    constructor(props = {}) {\n        super();\n\n        /**\n         * @private\n         * @type {?ContractId}\n         */\n        this._contractId = null;\n\n        /**\n         * @private\n         * @type {?Timestamp}\n         */\n        this._expirationTime = null;\n\n        /**\n         * @private\n         * @type {?Key}\n         */\n        this._adminKey = null;\n\n        /**\n         * @private\n         * @type {?AccountId}\n         */\n        this._proxyAccountId = null;\n\n        /**\n         * @private\n         * @type {?Duration}\n         */\n        this._autoRenewPeriod = null;\n\n        /**\n         * @private\n         * @type {?FileId}\n         */\n        this._bytecodeFileId = null;\n\n        /**\n         * @private\n         * @type {?string}\n         */\n        this._contractMemo = null;\n\n        /**\n         * @private\n         * @type {?number}\n         */\n        this._maxAutomaticTokenAssociations = 0;\n\n        /**\n         * @private\n         * @type {?AccountId}\n         */\n        this._stakedAccountId = null;\n\n        /**\n         * @private\n         * @type {?Long}\n         */\n        this._stakedNodeId = null;\n\n        /**\n         * @private\n         * @type {?boolean}\n         */\n        this._declineStakingReward = null;\n\n        /**\n         * @type {?AccountId}\n         */\n        this._autoRenewAccountId = null;\n\n        if (props.contractId != null) {\n            this.setContractId(props.contractId);\n        }\n\n        if (props.expirationTime != null) {\n            this.setExpirationTime(props.expirationTime);\n        }\n\n        if (props.adminKey != null) {\n            this.setAdminKey(props.adminKey);\n        }\n\n        if (props.proxyAccountId != null) {\n            // eslint-disable-next-line deprecation/deprecation\n            this.setProxyAccountId(props.proxyAccountId);\n        }\n\n        if (props.autoRenewPeriod != null) {\n            this.setAutoRenewPeriod(props.autoRenewPeriod);\n        }\n\n        if (props.bytecodeFileId != null) {\n            this.setBytecodeFileId(props.bytecodeFileId);\n        }\n\n        if (props.contractMemo != null) {\n            this.setContractMemo(props.contractMemo);\n        }\n\n        if (props.maxAutomaticTokenAssociations != null) {\n            this.setMaxAutomaticTokenAssociations(\n                props.maxAutomaticTokenAssociations\n            );\n        }\n\n        if (props.stakedAccountId != null) {\n            this.setStakedAccountId(props.stakedAccountId);\n        }\n\n        if (props.stakedNodeId != null) {\n            this.setStakedNodeId(props.stakedNodeId);\n        }\n\n        if (props.declineStakingReward != null) {\n            this.setDeclineStakingReward(props.declineStakingReward);\n        }\n\n        if (props.autoRenewAccountId != null) {\n            this.setAutoRenewAccountId(props.autoRenewAccountId);\n        }\n    }\n\n    /**\n     * @internal\n     * @param {HashgraphProto.proto.ITransaction[]} transactions\n     * @param {HashgraphProto.proto.ISignedTransaction[]} signedTransactions\n     * @param {TransactionId[]} transactionIds\n     * @param {AccountId[]} nodeIds\n     * @param {HashgraphProto.proto.ITransactionBody[]} bodies\n     * @returns {ContractUpdateTransaction}\n     */\n    static _fromProtobuf(\n        transactions,\n        signedTransactions,\n        transactionIds,\n        nodeIds,\n        bodies\n    ) {\n        const body = bodies[0];\n        const update =\n            /** @type {HashgraphProto.proto.IContractUpdateTransactionBody} */ (\n                body.contractUpdateInstance\n            );\n\n        let autoRenewPeriod = undefined;\n        if (\n            update.autoRenewPeriod != null &&\n            update.autoRenewPeriod.seconds != null\n        ) {\n            autoRenewPeriod = update.autoRenewPeriod.seconds;\n        }\n\n        let contractMemo = undefined;\n        if (update.memoWrapper != null && update.memoWrapper.value != null) {\n            contractMemo = update.memoWrapper.value;\n        }\n\n        let maxAutomaticTokenAssociations = undefined;\n        if (\n            update.maxAutomaticTokenAssociations != null &&\n            update.maxAutomaticTokenAssociations.value != null\n        ) {\n            maxAutomaticTokenAssociations =\n                update.maxAutomaticTokenAssociations.value;\n        }\n\n        return Transaction._fromProtobufTransactions(\n            new ContractUpdateTransaction({\n                contractId:\n                    update.contractID != null\n                        ? ContractId._fromProtobuf(\n                              /** @type {HashgraphProto.proto.IContractID} */ (\n                                  update.contractID\n                              )\n                          )\n                        : undefined,\n                bytecodeFileId:\n                    update.fileID != null\n                        ? FileId._fromProtobuf(\n                              /** @type {HashgraphProto.proto.IFileID} */ (\n                                  update.fileID\n                              )\n                          )\n                        : undefined,\n                expirationTime:\n                    update.expirationTime != null\n                        ? Timestamp._fromProtobuf(update.expirationTime)\n                        : undefined,\n                adminKey:\n                    update.adminKey != null\n                        ? Key._fromProtobufKey(update.adminKey)\n                        : undefined,\n                proxyAccountId:\n                    update.proxyAccountID != null\n                        ? AccountId._fromProtobuf(\n                              /** @type {HashgraphProto.proto.IAccountID} */ (\n                                  update.proxyAccountID\n                              )\n                          )\n                        : undefined,\n                autoRenewPeriod,\n                contractMemo,\n                maxAutomaticTokenAssociations,\n                stakedAccountId:\n                    update.stakedAccountId != null\n                        ? AccountId._fromProtobuf(update.stakedAccountId)\n                        : undefined,\n                stakedNodeId:\n                    update.stakedNodeId != null\n                        ? update.stakedNodeId\n                        : undefined,\n                declineStakingReward:\n                    update.declineReward != null &&\n                    update.declineReward == true,\n                autoRenewAccountId:\n                    update.autoRenewAccountId != null\n                        ? AccountId._fromProtobuf(update.autoRenewAccountId)\n                        : undefined,\n            }),\n            transactions,\n            signedTransactions,\n            transactionIds,\n            nodeIds,\n            bodies\n        );\n    }\n\n    /**\n     * @returns {?ContractId}\n     */\n    get contractId() {\n        return this._contractId;\n    }\n\n    /**\n     * Sets the contract ID which is being deleted in this transaction.\n     *\n     * @param {ContractId | string} contractId\n     * @returns {ContractUpdateTransaction}\n     */\n    setContractId(contractId) {\n        this._requireNotFrozen();\n        this._contractId =\n            typeof contractId === \"string\"\n                ? ContractId.fromString(contractId)\n                : contractId.clone();\n\n        return this;\n    }\n\n    /**\n     * @returns {?Timestamp}\n     */\n    get expirationTime() {\n        return this._expirationTime;\n    }\n\n    /**\n     * Sets the contract ID which is being deleted in this transaction.\n     *\n     * @param {Timestamp | Date} expirationTime\n     * @returns {ContractUpdateTransaction}\n     */\n    setExpirationTime(expirationTime) {\n        this._requireNotFrozen();\n        this._expirationTime =\n            expirationTime instanceof Timestamp\n                ? expirationTime\n                : Timestamp.fromDate(expirationTime);\n\n        return this;\n    }\n\n    /**\n     * @returns {?Key}\n     */\n    get adminKey() {\n        return this._adminKey;\n    }\n\n    /**\n     * @param {Key} adminKey\n     * @returns {this}\n     */\n    setAdminKey(adminKey) {\n        this._requireNotFrozen();\n        this._adminKey = adminKey;\n\n        return this;\n    }\n\n    /**\n     * @deprecated\n     * @returns {?AccountId}\n     */\n    get proxyAccountId() {\n        return this._proxyAccountId;\n    }\n\n    /**\n     * @deprecated\n     * @param {AccountId | string} proxyAccountId\n     * @returns {this}\n     */\n    setProxyAccountId(proxyAccountId) {\n        this._requireNotFrozen();\n        this._proxyAccountId =\n            typeof proxyAccountId === \"string\"\n                ? AccountId.fromString(proxyAccountId)\n                : proxyAccountId.clone();\n\n        return this;\n    }\n\n    /**\n     * @returns {?Duration}\n     */\n    get autoRenewPeriod() {\n        return this._autoRenewPeriod;\n    }\n\n    /**\n     * @param {Duration | Long | number} autoRenewPeriod\n     * @returns {this}\n     */\n    setAutoRenewPeriod(autoRenewPeriod) {\n        this._requireNotFrozen();\n        this._autoRenewPeriod =\n            autoRenewPeriod instanceof Duration\n                ? autoRenewPeriod\n                : new Duration(autoRenewPeriod);\n\n        return this;\n    }\n\n    /**\n     * @returns {?FileId}\n     */\n    get bytecodeFileId() {\n        return this._bytecodeFileId;\n    }\n\n    /**\n     * @param {FileId | string} bytecodeFileId\n     * @returns {this}\n     */\n    setBytecodeFileId(bytecodeFileId) {\n        console.warn(\"Deprecated: there is no replacement\");\n        this._requireNotFrozen();\n        this._bytecodeFileId =\n            typeof bytecodeFileId === \"string\"\n                ? FileId.fromString(bytecodeFileId)\n                : bytecodeFileId.clone();\n\n        return this;\n    }\n\n    /**\n     * @returns {?string}\n     */\n    get contractMemo() {\n        return this._contractMemo;\n    }\n\n    /**\n     * @param {string} contractMemo\n     * @returns {this}\n     */\n    setContractMemo(contractMemo) {\n        this._requireNotFrozen();\n        this._contractMemo = contractMemo;\n\n        return this;\n    }\n\n    /**\n     * @returns {this}\n     */\n    clearContractMemo() {\n        this._requireNotFrozen();\n        this._contractMemo = null;\n\n        return this;\n    }\n\n    /**\n     * @returns {number | null}\n     */\n    get maxAutomaticTokenAssociations() {\n        return this._maxAutomaticTokenAssociations;\n    }\n\n    /**\n     * @param {number} maxAutomaticTokenAssociations\n     * @returns {this}\n     */\n    setMaxAutomaticTokenAssociations(maxAutomaticTokenAssociations) {\n        this._requireNotFrozen();\n        this._maxAutomaticTokenAssociations = maxAutomaticTokenAssociations;\n\n        return this;\n    }\n\n    /**\n     * @returns {?AccountId}\n     */\n    get stakedAccountId() {\n        return this._stakedAccountId;\n    }\n\n    /**\n     * @param {AccountId | string} stakedAccountId\n     * @returns {this}\n     */\n    setStakedAccountId(stakedAccountId) {\n        this._requireNotFrozen();\n        this._stakedAccountId =\n            typeof stakedAccountId === \"string\"\n                ? AccountId.fromString(stakedAccountId)\n                : stakedAccountId;\n\n        return this;\n    }\n\n    /**\n     * @returns {?Long}\n     */\n    get stakedNodeId() {\n        return this._stakedNodeId;\n    }\n\n    /**\n     * @param {Long | number} stakedNodeId\n     * @returns {this}\n     */\n    setStakedNodeId(stakedNodeId) {\n        this._requireNotFrozen();\n        this._stakedNodeId = Long.fromValue(stakedNodeId);\n\n        return this;\n    }\n\n    /**\n     * @returns {?boolean}\n     */\n    get declineStakingRewards() {\n        return this._declineStakingReward;\n    }\n\n    /**\n     * @param {boolean} declineStakingReward\n     * @returns {this}\n     */\n    setDeclineStakingReward(declineStakingReward) {\n        this._requireNotFrozen();\n        this._declineStakingReward = declineStakingReward;\n\n        return this;\n    }\n\n    /**\n     * @returns {?AccountId}\n     */\n    get autoRenewAccountId() {\n        return this._autoRenewAccountId;\n    }\n\n    /**\n     * If set to the sentinel <tt>0.0.0</tt> AccountID, this field removes the contract's auto-renew\n     * account. Otherwise it updates the contract's auto-renew account to the referenced account.\n     *\n     * @param {string | AccountId} autoRenewAccountId\n     * @returns {this}\n     */\n    setAutoRenewAccountId(autoRenewAccountId) {\n        this._requireNotFrozen();\n        this._autoRenewAccountId =\n            typeof autoRenewAccountId === \"string\"\n                ? AccountId.fromString(autoRenewAccountId)\n                : autoRenewAccountId;\n\n        return this;\n    }\n\n    /**\n     * @returns {this}\n     */\n    clearAutoRenewAccountId() {\n        this._autoRenewAccountId = new AccountId(0);\n        return this;\n    }\n\n    /**\n     * @param {Client} client\n     */\n    _validateChecksums(client) {\n        if (this._contractId != null) {\n            this._contractId.validateChecksum(client);\n        }\n\n        if (this._bytecodeFileId != null) {\n            this._bytecodeFileId.validateChecksum(client);\n        }\n\n        if (this._proxyAccountId != null) {\n            this._proxyAccountId.validateChecksum(client);\n        }\n    }\n\n    /**\n     * @override\n     * @internal\n     * @param {Channel} channel\n     * @param {HashgraphProto.proto.ITransaction} request\n     * @returns {Promise<HashgraphProto.proto.ITransactionResponse>}\n     */\n    _execute(channel, request) {\n        return channel.smartContract.updateContract(request);\n    }\n\n    /**\n     * @override\n     * @protected\n     * @returns {NonNullable<HashgraphProto.proto.TransactionBody[\"data\"]>}\n     */\n    _getTransactionDataCase() {\n        return \"contractUpdateInstance\";\n    }\n\n    /**\n     * @override\n     * @protected\n     * @returns {HashgraphProto.proto.IContractUpdateTransactionBody}\n     */\n    _makeTransactionData() {\n        return {\n            contractID:\n                this._contractId != null\n                    ? this._contractId._toProtobuf()\n                    : null,\n            expirationTime:\n                this._expirationTime != null\n                    ? this._expirationTime._toProtobuf()\n                    : null,\n            adminKey:\n                this._adminKey != null ? this._adminKey._toProtobufKey() : null,\n            proxyAccountID:\n                this._proxyAccountId != null\n                    ? this._proxyAccountId._toProtobuf()\n                    : null,\n            autoRenewPeriod:\n                this._autoRenewPeriod != null\n                    ? this._autoRenewPeriod._toProtobuf()\n                    : null,\n            fileID: this._bytecodeFileId\n                ? this._bytecodeFileId._toProtobuf()\n                : null,\n            memoWrapper:\n                this._contractMemo != null\n                    ? {\n                          value: this._contractMemo,\n                      }\n                    : null,\n            maxAutomaticTokenAssociations:\n                this._maxAutomaticTokenAssociations != null\n                    ? {\n                          value: this._maxAutomaticTokenAssociations,\n                      }\n                    : null,\n            stakedAccountId:\n                this.stakedAccountId != null\n                    ? this.stakedAccountId._toProtobuf()\n                    : null,\n            stakedNodeId: this.stakedNodeId,\n            declineReward:\n                this.declineStakingRewards != null\n                    ? { value: this.declineStakingRewards }\n                    : null,\n            autoRenewAccountId:\n                this._autoRenewAccountId != null\n                    ? this._autoRenewAccountId._toProtobuf()\n                    : null,\n        };\n    }\n\n    /**\n     * @returns {string}\n     */\n    _getLogId() {\n        const timestamp = /** @type {import(\"../Timestamp.js\").default} */ (\n            this._transactionIds.current.validStart\n        );\n        return `ContractUpdateTransaction:${timestamp.toString()}`;\n    }\n}\n\nTRANSACTION_REGISTRY.set(\n    \"contractUpdateInstance\",\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    ContractUpdateTransaction._fromProtobuf\n);\n"]},"metadata":{},"sourceType":"module"}