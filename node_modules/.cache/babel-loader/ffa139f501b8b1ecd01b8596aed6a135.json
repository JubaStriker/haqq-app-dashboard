{"ast":null,"code":"/*-\n * ‌\n * Hedera JavaScript SDK\n * ​\n * Copyright (C) 2020 - 2022 Hedera Hashgraph, LLC\n * ​\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * ‍\n */\nimport GrpcServiceError from \"../grpc/GrpcServiceError.js\";\nimport GrpcStatus from \"../grpc/GrpcStatus.js\";\nimport Channel, { encodeRequest, decodeUnaryResponse } from \"./Channel.js\";\nexport default class WebChannel extends Channel {\n  /**\n   * @param {string} address\n   */\n  constructor(address) {\n    super();\n    /**\n     * @type {string}\n     * @private\n     */\n\n    this._address = address;\n  }\n  /**\n   * @override\n   * @returns {void}\n   */\n\n\n  close() {// do nothing\n  }\n  /**\n   * @override\n   * @protected\n   * @param {string} serviceName\n   * @returns {import(\"protobufjs\").RPCImpl}\n   */\n\n\n  _createUnaryClient(serviceName) {\n    // eslint-disable-next-line @typescript-eslint/no-misused-promises\n    return async (method, requestData, callback) => {\n      try {\n        const response = await fetch(`${this._address}/proto.${serviceName}/${method.name}`, {\n          method: \"POST\",\n          headers: {\n            \"content-type\": \"application/grpc-web+proto\",\n            \"x-user-agent\": \"hedera-sdk-js/v2\",\n            \"x-grpc-web\": \"1\"\n          },\n          body: encodeRequest(requestData)\n        }); // Check headers for gRPC errors\n\n        const grpcStatus = response.headers.get(\"grpc-status\");\n        const grpcMessage = response.headers.get(\"grpc-message\");\n\n        if (grpcStatus != null && grpcMessage != null) {\n          const error = new GrpcServiceError(GrpcStatus._fromValue(parseInt(grpcStatus)));\n          error.message = grpcMessage;\n          callback(error, null);\n        }\n\n        const responseBuffer = await response.arrayBuffer();\n        const unaryResponse = decodeUnaryResponse(responseBuffer);\n        callback(null, unaryResponse);\n      } catch (error) {\n        callback(\n        /** @type {Error} */\n        error, null);\n      }\n    };\n  }\n\n}","map":{"version":3,"sources":["/Users/jithendra/Desktop/Work/hbar-shop/hbar-shopify-coupon-client/node_modules/@hashgraph/sdk/src/channel/WebChannel.js"],"names":["GrpcServiceError","GrpcStatus","Channel","encodeRequest","decodeUnaryResponse","WebChannel","constructor","address","_address","close","_createUnaryClient","serviceName","method","requestData","callback","response","fetch","name","headers","body","grpcStatus","get","grpcMessage","error","_fromValue","parseInt","message","responseBuffer","arrayBuffer","unaryResponse"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,gBAAP,MAA6B,6BAA7B;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AACA,OAAOC,OAAP,IAAkBC,aAAlB,EAAiCC,mBAAjC,QAA4D,cAA5D;AAEA,eAAe,MAAMC,UAAN,SAAyBH,OAAzB,CAAiC;AAC5C;AACJ;AACA;AACII,EAAAA,WAAW,CAACC,OAAD,EAAU;AACjB;AAEA;AACR;AACA;AACA;;AACQ,SAAKC,QAAL,GAAgBD,OAAhB;AACH;AAED;AACJ;AACA;AACA;;;AACIE,EAAAA,KAAK,GAAG,CACJ;AACH;AAED;AACJ;AACA;AACA;AACA;AACA;;;AACIC,EAAAA,kBAAkB,CAACC,WAAD,EAAc;AAC5B;AACA,WAAO,OAAOC,MAAP,EAAeC,WAAf,EAA4BC,QAA5B,KAAyC;AAC5C,UAAI;AACA,cAAMC,QAAQ,GAAG,MAAMC,KAAK,CACvB,GAAE,KAAKR,QAAS,UAASG,WAAY,IAAGC,MAAM,CAACK,IAAK,EAD7B,EAExB;AACIL,UAAAA,MAAM,EAAE,MADZ;AAEIM,UAAAA,OAAO,EAAE;AACL,4BAAgB,4BADX;AAEL,4BAAgB,kBAFX;AAGL,0BAAc;AAHT,WAFb;AAOIC,UAAAA,IAAI,EAAEhB,aAAa,CAACU,WAAD;AAPvB,SAFwB,CAA5B,CADA,CAcA;;AACA,cAAMO,UAAU,GAAGL,QAAQ,CAACG,OAAT,CAAiBG,GAAjB,CAAqB,aAArB,CAAnB;AACA,cAAMC,WAAW,GAAGP,QAAQ,CAACG,OAAT,CAAiBG,GAAjB,CAAqB,cAArB,CAApB;;AAEA,YAAID,UAAU,IAAI,IAAd,IAAsBE,WAAW,IAAI,IAAzC,EAA+C;AAC3C,gBAAMC,KAAK,GAAG,IAAIvB,gBAAJ,CACVC,UAAU,CAACuB,UAAX,CAAsBC,QAAQ,CAACL,UAAD,CAA9B,CADU,CAAd;AAGAG,UAAAA,KAAK,CAACG,OAAN,GAAgBJ,WAAhB;AACAR,UAAAA,QAAQ,CAACS,KAAD,EAAQ,IAAR,CAAR;AACH;;AAED,cAAMI,cAAc,GAAG,MAAMZ,QAAQ,CAACa,WAAT,EAA7B;AACA,cAAMC,aAAa,GAAGzB,mBAAmB,CAACuB,cAAD,CAAzC;AAEAb,QAAAA,QAAQ,CAAC,IAAD,EAAOe,aAAP,CAAR;AACH,OA9BD,CA8BE,OAAON,KAAP,EAAc;AACZT,QAAAA,QAAQ;AAAC;AAAsBS,QAAAA,KAAvB,EAA+B,IAA/B,CAAR;AACH;AACJ,KAlCD;AAmCH;;AAjE2C","sourcesContent":["/*-\n * ‌\n * Hedera JavaScript SDK\n * ​\n * Copyright (C) 2020 - 2022 Hedera Hashgraph, LLC\n * ​\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * ‍\n */\n\nimport GrpcServiceError from \"../grpc/GrpcServiceError.js\";\nimport GrpcStatus from \"../grpc/GrpcStatus.js\";\nimport Channel, { encodeRequest, decodeUnaryResponse } from \"./Channel.js\";\n\nexport default class WebChannel extends Channel {\n    /**\n     * @param {string} address\n     */\n    constructor(address) {\n        super();\n\n        /**\n         * @type {string}\n         * @private\n         */\n        this._address = address;\n    }\n\n    /**\n     * @override\n     * @returns {void}\n     */\n    close() {\n        // do nothing\n    }\n\n    /**\n     * @override\n     * @protected\n     * @param {string} serviceName\n     * @returns {import(\"protobufjs\").RPCImpl}\n     */\n    _createUnaryClient(serviceName) {\n        // eslint-disable-next-line @typescript-eslint/no-misused-promises\n        return async (method, requestData, callback) => {\n            try {\n                const response = await fetch(\n                    `${this._address}/proto.${serviceName}/${method.name}`,\n                    {\n                        method: \"POST\",\n                        headers: {\n                            \"content-type\": \"application/grpc-web+proto\",\n                            \"x-user-agent\": \"hedera-sdk-js/v2\",\n                            \"x-grpc-web\": \"1\",\n                        },\n                        body: encodeRequest(requestData),\n                    }\n                );\n\n                // Check headers for gRPC errors\n                const grpcStatus = response.headers.get(\"grpc-status\");\n                const grpcMessage = response.headers.get(\"grpc-message\");\n\n                if (grpcStatus != null && grpcMessage != null) {\n                    const error = new GrpcServiceError(\n                        GrpcStatus._fromValue(parseInt(grpcStatus))\n                    );\n                    error.message = grpcMessage;\n                    callback(error, null);\n                }\n\n                const responseBuffer = await response.arrayBuffer();\n                const unaryResponse = decodeUnaryResponse(responseBuffer);\n\n                callback(null, unaryResponse);\n            } catch (error) {\n                callback(/** @type {Error} */ (error), null);\n            }\n        };\n    }\n}\n"]},"metadata":{},"sourceType":"module"}