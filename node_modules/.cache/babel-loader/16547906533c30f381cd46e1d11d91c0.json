{"ast":null,"code":"/*-\n * ‌\n * Hedera JavaScript SDK\n * ​\n * Copyright (C) 2020 - 2022 Hedera Hashgraph, LLC\n * ​\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * ‍\n */\nimport Key from \"./Key.js\";\nimport * as hex from \"./encoding/hex.js\";\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").proto.IKey} HashgraphProto.proto.IKey\n */\n\n/**\n * @typedef {import(\"./client/Client.js\").default<*, *>} Client\n */\n\nexport default class EvmAddress extends Key {\n  /**\n   * @internal\n   * @param {Uint8Array} bytes\n   */\n  constructor(bytes) {\n    super();\n    this._bytes = bytes;\n  }\n  /**\n   * @param {string} text\n   * @returns {EvmAddress}\n   */\n\n\n  static fromString(text) {\n    return new EvmAddress(hex.decode(text));\n  }\n  /**\n   * @param {Uint8Array} bytes\n   * @returns {EvmAddress}\n   */\n\n\n  static fromBytes(bytes) {\n    return new EvmAddress(bytes);\n  }\n  /**\n   * @returns {Uint8Array}\n   */\n\n\n  toBytes() {\n    return this._bytes;\n  }\n  /**\n   * @returns {string}\n   */\n\n\n  toString() {\n    return hex.encode(this._bytes);\n  }\n\n}","map":{"version":3,"sources":["/Users/jithendra/Desktop/Work/hbar-shop/hbar-shop-dashboard/node_modules/@hashgraph/sdk/src/EvmAddress.js"],"names":["Key","hex","EvmAddress","constructor","bytes","_bytes","fromString","text","decode","fromBytes","toBytes","toString","encode"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,GAAP,MAAgB,UAAhB;AACA,OAAO,KAAKC,GAAZ,MAAqB,mBAArB;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,eAAe,MAAMC,UAAN,SAAyBF,GAAzB,CAA6B;AACxC;AACJ;AACA;AACA;AACIG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf;AACA,SAAKC,MAAL,GAAcD,KAAd;AACH;AAED;AACJ;AACA;AACA;;;AACqB,SAAVE,UAAU,CAACC,IAAD,EAAO;AACpB,WAAO,IAAIL,UAAJ,CAAeD,GAAG,CAACO,MAAJ,CAAWD,IAAX,CAAf,CAAP;AACH;AAED;AACJ;AACA;AACA;;;AACoB,SAATE,SAAS,CAACL,KAAD,EAAQ;AACpB,WAAO,IAAIF,UAAJ,CAAeE,KAAf,CAAP;AACH;AAED;AACJ;AACA;;;AACIM,EAAAA,OAAO,GAAG;AACN,WAAO,KAAKL,MAAZ;AACH;AAED;AACJ;AACA;;;AACIM,EAAAA,QAAQ,GAAG;AACP,WAAOV,GAAG,CAACW,MAAJ,CAAW,KAAKP,MAAhB,CAAP;AACH;;AAtCuC","sourcesContent":["/*-\n * ‌\n * Hedera JavaScript SDK\n * ​\n * Copyright (C) 2020 - 2022 Hedera Hashgraph, LLC\n * ​\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * ‍\n */\n\nimport Key from \"./Key.js\";\nimport * as hex from \"./encoding/hex.js\";\n\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").proto.IKey} HashgraphProto.proto.IKey\n */\n\n/**\n * @typedef {import(\"./client/Client.js\").default<*, *>} Client\n */\n\nexport default class EvmAddress extends Key {\n    /**\n     * @internal\n     * @param {Uint8Array} bytes\n     */\n    constructor(bytes) {\n        super();\n        this._bytes = bytes;\n    }\n\n    /**\n     * @param {string} text\n     * @returns {EvmAddress}\n     */\n    static fromString(text) {\n        return new EvmAddress(hex.decode(text));\n    }\n\n    /**\n     * @param {Uint8Array} bytes\n     * @returns {EvmAddress}\n     */\n    static fromBytes(bytes) {\n        return new EvmAddress(bytes);\n    }\n\n    /**\n     * @returns {Uint8Array}\n     */\n    toBytes() {\n        return this._bytes;\n    }\n\n    /**\n     * @returns {string}\n     */\n    toString() {\n        return hex.encode(this._bytes);\n    }\n}\n"]},"metadata":{},"sourceType":"module"}