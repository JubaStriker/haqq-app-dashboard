{"ast":null,"code":"\"use strict\";\n/**\n * Deinterlace function from https://github.com/shachaf/jsgif\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.deinterlace = void 0;\n\nexports.deinterlace = function (pixels, width) {\n  var newPixels = new Array(pixels.length);\n  var rows = pixels.length / width;\n\n  var cpRow = function (toRow, fromRow) {\n    var fromPixels = pixels.slice(fromRow * width, (fromRow + 1) * width);\n    newPixels.splice.apply(newPixels, [toRow * width, width].concat(fromPixels));\n  }; // See appendix E.\n\n\n  var offsets = [0, 4, 2, 1];\n  var steps = [8, 8, 4, 2];\n  var fromRow = 0;\n\n  for (var pass = 0; pass < 4; pass++) {\n    for (var toRow = offsets[pass]; toRow < rows; toRow += steps[pass]) {\n      cpRow(toRow, fromRow);\n      fromRow++;\n    }\n  }\n\n  return newPixels;\n};","map":{"version":3,"sources":["/Users/jithendra/Desktop/Work/hbar-shop/hbar-shop-dashboard/node_modules/awesome-qr/lib/gifuct-js/deinterlace.js"],"names":["Object","defineProperty","exports","value","deinterlace","pixels","width","newPixels","Array","length","rows","cpRow","toRow","fromRow","fromPixels","slice","splice","apply","concat","offsets","steps","pass"],"mappings":"AAAA;AACA;AACA;AACA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,WAAR,GAAsB,KAAK,CAA3B;;AACAF,OAAO,CAACE,WAAR,GAAsB,UAAUC,MAAV,EAAkBC,KAAlB,EAAyB;AAC3C,MAAIC,SAAS,GAAG,IAAIC,KAAJ,CAAUH,MAAM,CAACI,MAAjB,CAAhB;AACA,MAAIC,IAAI,GAAGL,MAAM,CAACI,MAAP,GAAgBH,KAA3B;;AACA,MAAIK,KAAK,GAAG,UAAUC,KAAV,EAAiBC,OAAjB,EAA0B;AAClC,QAAIC,UAAU,GAAGT,MAAM,CAACU,KAAP,CAAaF,OAAO,GAAGP,KAAvB,EAA8B,CAACO,OAAO,GAAG,CAAX,IAAgBP,KAA9C,CAAjB;AACAC,IAAAA,SAAS,CAACS,MAAV,CAAiBC,KAAjB,CAAuBV,SAAvB,EAAkC,CAACK,KAAK,GAAGN,KAAT,EAAgBA,KAAhB,EAAuBY,MAAvB,CAA8BJ,UAA9B,CAAlC;AACH,GAHD,CAH2C,CAO3C;;;AACA,MAAIK,OAAO,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAAd;AACA,MAAIC,KAAK,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAAZ;AACA,MAAIP,OAAO,GAAG,CAAd;;AACA,OAAK,IAAIQ,IAAI,GAAG,CAAhB,EAAmBA,IAAI,GAAG,CAA1B,EAA6BA,IAAI,EAAjC,EAAqC;AACjC,SAAK,IAAIT,KAAK,GAAGO,OAAO,CAACE,IAAD,CAAxB,EAAgCT,KAAK,GAAGF,IAAxC,EAA8CE,KAAK,IAAIQ,KAAK,CAACC,IAAD,CAA5D,EAAoE;AAChEV,MAAAA,KAAK,CAACC,KAAD,EAAQC,OAAR,CAAL;AACAA,MAAAA,OAAO;AACV;AACJ;;AACD,SAAON,SAAP;AACH,CAlBD","sourcesContent":["\"use strict\";\n/**\n * Deinterlace function from https://github.com/shachaf/jsgif\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deinterlace = void 0;\nexports.deinterlace = function (pixels, width) {\n    var newPixels = new Array(pixels.length);\n    var rows = pixels.length / width;\n    var cpRow = function (toRow, fromRow) {\n        var fromPixels = pixels.slice(fromRow * width, (fromRow + 1) * width);\n        newPixels.splice.apply(newPixels, [toRow * width, width].concat(fromPixels));\n    };\n    // See appendix E.\n    var offsets = [0, 4, 2, 1];\n    var steps = [8, 8, 4, 2];\n    var fromRow = 0;\n    for (var pass = 0; pass < 4; pass++) {\n        for (var toRow = offsets[pass]; toRow < rows; toRow += steps[pass]) {\n            cpRow(toRow, fromRow);\n            fromRow++;\n        }\n    }\n    return newPixels;\n};\n"]},"metadata":{},"sourceType":"script"}