{"ast":null,"code":"/*-\n * ‌\n * Hedera JavaScript SDK\n * ​\n * Copyright (C) 2020 - 2022 Hedera Hashgraph, LLC\n * ​\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * ‍\n */\nimport AccountId from \"./AccountId.js\";\nimport Hbar from \"../Hbar.js\";\nimport ObjectMap from \"../ObjectMap.js\";\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").proto.ITransferList} HashgraphProto.proto.ITransferList\n * @typedef {import(\"@hashgraph/proto\").proto.IAccountID} HashgraphProto.proto.IAccountID\n */\n\n/**\n * @typedef {import(\"../long.js\").LongObject} LongObject\n * @typedef {import(\"bignumber.js\").default} BigNumber\n */\n\n/**\n * @augments {ObjectMap<AccountId, Hbar>}\n */\n\nexport default class HbarTransferMap extends ObjectMap {\n  constructor() {\n    super(s => AccountId.fromString(s));\n  }\n  /**\n   * @param {HashgraphProto.proto.ITransferList} transfers\n   * @returns {HbarTransferMap}\n   */\n\n\n  static _fromProtobuf(transfers) {\n    const accountTransfers = new HbarTransferMap();\n\n    for (const transfer of transfers.accountAmounts != null ? transfers.accountAmounts : []) {\n      const account = AccountId._fromProtobuf(\n      /** @type {HashgraphProto.proto.IAccountID} */\n      transfer.accountID);\n\n      accountTransfers._set(account, Hbar.fromTinybars(\n      /** @type {Long} */\n      transfer.amount));\n    }\n\n    return accountTransfers;\n  }\n\n}","map":{"version":3,"sources":["/Users/jithendra/Desktop/Work/hbar-shop/hbar-shop-dashboard/node_modules/@hashgraph/sdk/src/account/HbarTransferMap.js"],"names":["AccountId","Hbar","ObjectMap","HbarTransferMap","constructor","s","fromString","_fromProtobuf","transfers","accountTransfers","transfer","accountAmounts","account","accountID","_set","fromTinybars","amount"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,SAAP,MAAsB,gBAAtB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AACA,eAAe,MAAMC,eAAN,SAA8BD,SAA9B,CAAwC;AACnDE,EAAAA,WAAW,GAAG;AACV,UAAOC,CAAD,IAAOL,SAAS,CAACM,UAAV,CAAqBD,CAArB,CAAb;AACH;AAED;AACJ;AACA;AACA;;;AACwB,SAAbE,aAAa,CAACC,SAAD,EAAY;AAC5B,UAAMC,gBAAgB,GAAG,IAAIN,eAAJ,EAAzB;;AAEA,SAAK,MAAMO,QAAX,IAAuBF,SAAS,CAACG,cAAV,IAA4B,IAA5B,GACjBH,SAAS,CAACG,cADO,GAEjB,EAFN,EAEU;AACN,YAAMC,OAAO,GAAGZ,SAAS,CAACO,aAAV;AACZ;AACIG,MAAAA,QAAQ,CAACG,SAFD,CAAhB;;AAMAJ,MAAAA,gBAAgB,CAACK,IAAjB,CACIF,OADJ,EAEIX,IAAI,CAACc,YAAL;AAAkB;AAAqBL,MAAAA,QAAQ,CAACM,MAAhD,CAFJ;AAIH;;AAED,WAAOP,gBAAP;AACH;;AA5BkD","sourcesContent":["/*-\n * ‌\n * Hedera JavaScript SDK\n * ​\n * Copyright (C) 2020 - 2022 Hedera Hashgraph, LLC\n * ​\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * ‍\n */\n\nimport AccountId from \"./AccountId.js\";\nimport Hbar from \"../Hbar.js\";\nimport ObjectMap from \"../ObjectMap.js\";\n\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").proto.ITransferList} HashgraphProto.proto.ITransferList\n * @typedef {import(\"@hashgraph/proto\").proto.IAccountID} HashgraphProto.proto.IAccountID\n */\n\n/**\n * @typedef {import(\"../long.js\").LongObject} LongObject\n * @typedef {import(\"bignumber.js\").default} BigNumber\n */\n\n/**\n * @augments {ObjectMap<AccountId, Hbar>}\n */\nexport default class HbarTransferMap extends ObjectMap {\n    constructor() {\n        super((s) => AccountId.fromString(s));\n    }\n\n    /**\n     * @param {HashgraphProto.proto.ITransferList} transfers\n     * @returns {HbarTransferMap}\n     */\n    static _fromProtobuf(transfers) {\n        const accountTransfers = new HbarTransferMap();\n\n        for (const transfer of transfers.accountAmounts != null\n            ? transfers.accountAmounts\n            : []) {\n            const account = AccountId._fromProtobuf(\n                /** @type {HashgraphProto.proto.IAccountID} */ (\n                    transfer.accountID\n                )\n            );\n\n            accountTransfers._set(\n                account,\n                Hbar.fromTinybars(/** @type {Long} */ (transfer.amount))\n            );\n        }\n\n        return accountTransfers;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}