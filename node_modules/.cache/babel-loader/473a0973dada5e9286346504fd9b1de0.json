{"ast":null,"code":"var _jsxFileName = \"/Users/jithendra/Desktop/Work/meta-soft-xrp/xrp-shopify-coupon-client/src/components/upload/index.js\",\n    _s = $RefreshSig$();\n\nimport { useCallback, useState, useEffect } from \"react\";\nimport { Modal, ModalOverlay, ModalContent, ModalHeader, ModalFooter, ModalBody, ModalCloseButton, SimpleGrid, Button, Center, useColorModeValue, Text, Image, VStack, useToast } from '@chakra-ui/react';\nimport { useDropzone } from 'react-dropzone';\nimport useFilesStore from \"../../store/files\";\nimport { INTERNAL_SERVER_ERROR } from \"../../constants/strings\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Upload() {\n  _s();\n\n  let props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const {\n    isOpen = false,\n    onClose,\n    on\n  } = props;\n  const files = useFilesStore(state => state.files);\n  const postFiles = useFilesStore(state => state.postFiles);\n  const toast = useToast();\n  const [uploads, setUploads] = useState([]);\n  const onDrop = useCallback(async acceptedUploads => {\n    setUploads(acceptedUploads.map(file => Object.assign(file, {\n      preview: URL.createObjectURL(file)\n    })));\n  });\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive\n  } = useDropzone({\n    onDrop,\n    accept: 'image/*',\n    maxFiles: 3,\n    multiple: true\n  });\n  useEffect(() => {\n    setUploads([]);\n  }, []);\n  useEffect(() => () => {\n    uploads.forEach(file => URL.revokeObjectURL(file.preview));\n  }, [uploads]);\n\n  const saveUploads = async () => {\n    try {\n      const data = await postFiles(uploads);\n      setUploads([]);\n      onClose(data || []);\n      console.log('Reached Here');\n    } catch (e) {\n      toast({\n        title: \"Incognito mode is not allowed. \" + (e.message || INTERNAL_SERVER_ERROR),\n        status: 'error'\n      });\n    }\n  };\n\n  const dropText = isDragActive ? 'Drop upto 3 png, jpeg or gifs here ...' : 'Drag \\'n\\' drop upto 3 png, jpeg or gifs files here, or click to select uploads';\n  const activeBg = useColorModeValue('gray.100', 'gray.600');\n  const borderColor = useColorModeValue(isDragActive ? 'teal.300' : 'gray.300', isDragActive ? 'teal.500' : 'gray.500');\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: isOpen,\n    onClose: onClose,\n    closeOnOverlayClick: false,\n    onEsc: () => setUploads([]),\n    children: [/*#__PURE__*/_jsxDEV(ModalOverlay, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(ModalContent, {\n      children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n        children: \"Add images for this look.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n        children: [/*#__PURE__*/_jsxDEV(Center, {\n          p: 10,\n          cursor: \"pointer\",\n          bg: isDragActive ? activeBg : 'transparent',\n          _hover: {\n            bg: activeBg\n          },\n          transition: \"background-color 0.2s ease\",\n          borderRadius: 4,\n          border: \"3px dashed\",\n          borderColor: borderColor,\n          ...getRootProps(),\n          children: /*#__PURE__*/_jsxDEV(VStack, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 8\n              }, this), /*#__PURE__*/_jsxDEV(Text, {\n                textAlign: \"center\",\n                children: dropText\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 7\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 7\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 6\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Center, {\n          children: /*#__PURE__*/_jsxDEV(SimpleGrid, {\n            spacing: 5,\n            columns: 3,\n            marginTop: \"5\",\n            children: uploads.map(file => /*#__PURE__*/_jsxDEV(Image, {\n              src: file.preview,\n              width: 100,\n              height: 100,\n              objectFit: \"cover\",\n              borderRadius: \"5\",\n              borderColor: \"gray\",\n              borderWidth: \"2\"\n            }, file.name, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 9\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 6\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"ghost\",\n          onClick: () => {\n            setUploads([]);\n            onClose([]);\n          },\n          colorScheme: \"red\",\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          colorScheme: \"teal\",\n          mr: 3,\n          onClick: saveUploads,\n          loadingText: \"Uploading...\",\n          isLoading: files.post.loading,\n          children: \"Upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Upload, \"UNXtGBxCaBaBMNv3NKN7atzG3z8=\", false, function () {\n  return [useFilesStore, useFilesStore, useToast, useDropzone, useColorModeValue, useColorModeValue];\n});\n\n_c = Upload;\nexport default Upload;\n\nvar _c;\n\n$RefreshReg$(_c, \"Upload\");","map":{"version":3,"sources":["/Users/jithendra/Desktop/Work/meta-soft-xrp/xrp-shopify-coupon-client/src/components/upload/index.js"],"names":["useCallback","useState","useEffect","Modal","ModalOverlay","ModalContent","ModalHeader","ModalFooter","ModalBody","ModalCloseButton","SimpleGrid","Button","Center","useColorModeValue","Text","Image","VStack","useToast","useDropzone","useFilesStore","INTERNAL_SERVER_ERROR","Upload","props","isOpen","onClose","on","files","state","postFiles","toast","uploads","setUploads","onDrop","acceptedUploads","map","file","Object","assign","preview","URL","createObjectURL","getRootProps","getInputProps","isDragActive","accept","maxFiles","multiple","forEach","revokeObjectURL","saveUploads","data","console","log","e","title","message","status","dropText","activeBg","borderColor","bg","name","post","loading"],"mappings":"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","sourcesContent":["import { useCallback, useState, useEffect } from \"react\";\nimport {\n\tModal,\n\tModalOverlay,\n\tModalContent,\n\tModalHeader,\n\tModalFooter,\n\tModalBody,\n\tModalCloseButton, \n\tSimpleGrid,\n\tButton,\n\tCenter,\n\tuseColorModeValue,\n\tText,\n\tImage,\n\tVStack,\n\tuseToast,\n} from '@chakra-ui/react'\nimport { useDropzone } from 'react-dropzone';\nimport useFilesStore from \"../../store/files\"; \nimport { INTERNAL_SERVER_ERROR } from \"../../constants/strings\";\n\nfunction Upload(props = {}) {\n\tconst { isOpen = false, onClose, on } = props;\n\tconst files = useFilesStore((state) => state.files);\n  const postFiles = useFilesStore((state) => state.postFiles);\n\tconst toast = useToast()\n\tconst [uploads, setUploads] = useState([]);\n\t\n\tconst onDrop = useCallback(async (acceptedUploads) => {\n\t\tsetUploads(acceptedUploads.map(file => Object.assign(file, {\n\t\t\tpreview: URL.createObjectURL(file)\n\t\t})));\n\t});\n\tconst { getRootProps, getInputProps, isDragActive } = useDropzone({\n\t\tonDrop, accept: 'image/*', maxFiles: 3, multiple: true,\n\t});\n\tuseEffect(() => {\n\t\tsetUploads([])\n\t}, [])\n\tuseEffect(() => () => {\n\t\tuploads.forEach(file => URL.revokeObjectURL(file.preview));\n\t}, [uploads])\n\t\n\tconst saveUploads = async () => {\n\t\ttry {\n\t\t\tconst data = await postFiles(uploads);\n\t\t\tsetUploads([]);\n\t\t\tonClose(data || []);\n\n\t\t\tconsole.log('Reached Here');\n\t\t} catch (e) {\n\t\t\ttoast({\n\t\t\t\ttitle: \"Incognito mode is not allowed. \" + (e.message || INTERNAL_SERVER_ERROR),\n\t\t\t\tstatus: 'error'\n\t\t\t})\n\t\t}\n\t}\n\n\tconst dropText = isDragActive ? 'Drop upto 3 png, jpeg or gifs here ...' : 'Drag \\'n\\' drop upto 3 png, jpeg or gifs files here, or click to select uploads';\n\tconst activeBg = useColorModeValue('gray.100', 'gray.600');\n\tconst borderColor = useColorModeValue(\n\t\tisDragActive ? 'teal.300' : 'gray.300',\n\t\tisDragActive ? 'teal.500' : 'gray.500',\n\t);\n\n\treturn (\n\t\t<Modal isOpen={isOpen} onClose={onClose} closeOnOverlayClick={false} onEsc={() => setUploads([])}>\n\t\t\t<ModalOverlay />\n\t\t\t<ModalContent>\n\t\t\t\t<ModalHeader>Add images for this look.</ModalHeader>\n\t\t\t\t<ModalBody>\n\t\t\t\t\t<Center\n\t\t\t\t\t\tp={10}\n\t\t\t\t\t\tcursor=\"pointer\"\n\t\t\t\t\t\tbg={isDragActive ? activeBg : 'transparent'}\n\t\t\t\t\t\t_hover={{ bg: activeBg }}\n\t\t\t\t\t\ttransition=\"background-color 0.2s ease\"\n\t\t\t\t\t\tborderRadius={4}\n\t\t\t\t\t\tborder=\"3px dashed\"\n\t\t\t\t\t\tborderColor={borderColor}\n\t\t\t\t\t\t{...getRootProps()}\n\t\t\t\t\t>\n\t\t\t\t\t<VStack>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<input {...getInputProps()} />\n\t\t\t\t\t\t<Text textAlign=\"center\">{dropText}</Text>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</VStack>\n\t\t\t\t</Center>\n\t\t\t\t<Center>\n\t\t\t\t\t<SimpleGrid spacing={5} columns={3} marginTop=\"5\">\n\t\t\t\t\t\t{uploads.map(file => (\n\t\t\t\t\t\t\t\t<Image key={file.name} src={file.preview} width={100} height={100} objectFit=\"cover\" borderRadius=\"5\" borderColor=\"gray\" borderWidth=\"2\" />\n\t\t\t\t\t\t))}\n\t\t\t\t\t</SimpleGrid>\n\t\t\t\t</Center>\n\t\t\t\t</ModalBody>\n\n\t\t\t\t<ModalFooter>\n\t\t\t\t\t<Button variant='ghost' onClick={() => { setUploads([]); onClose([])}} colorScheme='red'>Close</Button>\n\t\t\t\t\t<Button colorScheme='teal' mr={3} onClick={saveUploads} loadingText=\"Uploading...\" isLoading={files.post.loading}>\n\t\t\t\t\t\tUpload\n\t\t\t\t\t</Button>\n\t\t\t\t</ModalFooter>\n\t\t\t</ModalContent>\n\t\t</Modal>\n\t)\n}\n\nexport default Upload;"]},"metadata":{},"sourceType":"module"}