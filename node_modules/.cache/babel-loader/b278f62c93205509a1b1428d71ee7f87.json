{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.decompressFrames = exports.decompressFrame = exports.parseGIF = void 0;\n\nvar gif_1 = __importDefault(require(\"js-binary-schema-parser/lib/schemas/gif\"));\n\nvar js_binary_schema_parser_1 = require(\"js-binary-schema-parser\");\n\nvar uint8_1 = require(\"js-binary-schema-parser/lib/parsers/uint8\");\n\nvar deinterlace_1 = require(\"./deinterlace\");\n\nvar lzw_1 = require(\"./lzw\");\n\nexports.parseGIF = function (arrayBuffer) {\n  var byteData = new Uint8Array(arrayBuffer);\n  return js_binary_schema_parser_1.parse(uint8_1.buildStream(byteData), gif_1.default);\n};\n\nvar generatePatch = function (image) {\n  var totalPixels = image.pixels.length;\n  var patchData = new Uint8ClampedArray(totalPixels * 4);\n\n  for (var i = 0; i < totalPixels; i++) {\n    var pos = i * 4;\n    var colorIndex = image.pixels[i];\n    var color = image.colorTable[colorIndex];\n    patchData[pos] = color[0];\n    patchData[pos + 1] = color[1];\n    patchData[pos + 2] = color[2];\n    patchData[pos + 3] = colorIndex !== image.transparentIndex ? 255 : 0;\n  }\n\n  return patchData;\n};\n\nexports.decompressFrame = function (frame, gct, buildImagePatch) {\n  if (!frame.image) {\n    console.warn('gif frame does not have associated image.');\n    return;\n  }\n\n  var image = frame.image; // get the number of pixels\n\n  var totalPixels = image.descriptor.width * image.descriptor.height; // do lzw decompression\n\n  var pixels = lzw_1.lzw(image.data.minCodeSize, image.data.blocks, totalPixels); // deal with interlacing if necessary\n\n  if (image.descriptor.lct.interlaced) {\n    pixels = deinterlace_1.deinterlace(pixels, image.descriptor.width);\n  }\n\n  var resultImage = {\n    pixels: pixels,\n    dims: {\n      top: frame.image.descriptor.top,\n      left: frame.image.descriptor.left,\n      width: frame.image.descriptor.width,\n      height: frame.image.descriptor.height\n    }\n  }; // color table\n\n  if (image.descriptor.lct && image.descriptor.lct.exists) {\n    resultImage.colorTable = image.lct;\n  } else {\n    resultImage.colorTable = gct;\n  } // add per frame relevant gce information\n\n\n  if (frame.gce) {\n    resultImage.delay = (frame.gce.delay || 10) * 10; // convert to ms\n\n    resultImage.disposalType = frame.gce.extras.disposal; // transparency\n\n    if (frame.gce.extras.transparentColorGiven) {\n      resultImage.transparentIndex = frame.gce.transparentColorIndex;\n    }\n  } // create canvas usable imagedata if desired\n\n\n  if (buildImagePatch) {\n    resultImage.patch = generatePatch(resultImage);\n  }\n\n  return resultImage;\n};\n\nexports.decompressFrames = function (parsedGif, buildImagePatches) {\n  return parsedGif.frames.filter(function (f) {\n    return f.image;\n  }).map(function (f) {\n    return exports.decompressFrame(f, parsedGif.gct, buildImagePatches);\n  });\n};","map":{"version":3,"sources":["/Users/jithendra/Desktop/Work/hbar-shop/hbar-shop-dashboard/node_modules/awesome-qr/lib/gifuct-js/index.js"],"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","decompressFrames","decompressFrame","parseGIF","gif_1","require","js_binary_schema_parser_1","uint8_1","deinterlace_1","lzw_1","arrayBuffer","byteData","Uint8Array","parse","buildStream","default","generatePatch","image","totalPixels","pixels","length","patchData","Uint8ClampedArray","i","pos","colorIndex","color","colorTable","transparentIndex","frame","gct","buildImagePatch","console","warn","descriptor","width","height","lzw","data","minCodeSize","blocks","lct","interlaced","deinterlace","resultImage","dims","top","left","exists","gce","delay","disposalType","extras","disposal","transparentColorGiven","transparentColorIndex","patch","parsedGif","buildImagePatches","frames","filter","f","map"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.decompressFrames = exports.decompressFrame = exports.parseGIF = void 0;\nvar gif_1 = __importDefault(require(\"js-binary-schema-parser/lib/schemas/gif\"));\nvar js_binary_schema_parser_1 = require(\"js-binary-schema-parser\");\nvar uint8_1 = require(\"js-binary-schema-parser/lib/parsers/uint8\");\nvar deinterlace_1 = require(\"./deinterlace\");\nvar lzw_1 = require(\"./lzw\");\nexports.parseGIF = function (arrayBuffer) {\n    var byteData = new Uint8Array(arrayBuffer);\n    return js_binary_schema_parser_1.parse(uint8_1.buildStream(byteData), gif_1.default);\n};\nvar generatePatch = function (image) {\n    var totalPixels = image.pixels.length;\n    var patchData = new Uint8ClampedArray(totalPixels * 4);\n    for (var i = 0; i < totalPixels; i++) {\n        var pos = i * 4;\n        var colorIndex = image.pixels[i];\n        var color = image.colorTable[colorIndex];\n        patchData[pos] = color[0];\n        patchData[pos + 1] = color[1];\n        patchData[pos + 2] = color[2];\n        patchData[pos + 3] = colorIndex !== image.transparentIndex ? 255 : 0;\n    }\n    return patchData;\n};\nexports.decompressFrame = function (frame, gct, buildImagePatch) {\n    if (!frame.image) {\n        console.warn('gif frame does not have associated image.');\n        return;\n    }\n    var image = frame.image;\n    // get the number of pixels\n    var totalPixels = image.descriptor.width * image.descriptor.height;\n    // do lzw decompression\n    var pixels = lzw_1.lzw(image.data.minCodeSize, image.data.blocks, totalPixels);\n    // deal with interlacing if necessary\n    if (image.descriptor.lct.interlaced) {\n        pixels = deinterlace_1.deinterlace(pixels, image.descriptor.width);\n    }\n    var resultImage = {\n        pixels: pixels,\n        dims: {\n            top: frame.image.descriptor.top,\n            left: frame.image.descriptor.left,\n            width: frame.image.descriptor.width,\n            height: frame.image.descriptor.height\n        }\n    };\n    // color table\n    if (image.descriptor.lct && image.descriptor.lct.exists) {\n        resultImage.colorTable = image.lct;\n    }\n    else {\n        resultImage.colorTable = gct;\n    }\n    // add per frame relevant gce information\n    if (frame.gce) {\n        resultImage.delay = (frame.gce.delay || 10) * 10; // convert to ms\n        resultImage.disposalType = frame.gce.extras.disposal;\n        // transparency\n        if (frame.gce.extras.transparentColorGiven) {\n            resultImage.transparentIndex = frame.gce.transparentColorIndex;\n        }\n    }\n    // create canvas usable imagedata if desired\n    if (buildImagePatch) {\n        resultImage.patch = generatePatch(resultImage);\n    }\n    return resultImage;\n};\nexports.decompressFrames = function (parsedGif, buildImagePatches) {\n    return parsedGif.frames\n        .filter(function (f) { return f.image; })\n        .map(function (f) { return exports.decompressFrame(f, parsedGif.gct, buildImagePatches); });\n};\n"]},"metadata":{},"sourceType":"script"}