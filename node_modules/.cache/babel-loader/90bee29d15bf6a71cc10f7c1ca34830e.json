{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { Box, Container, Heading, Table, TableContainer, Th, Thead, Tr, Tbody, Td, VStack, Text, Divider, useColorMode, Link } from \"@chakra-ui/react\";\nimport { useContext, useEffect, useState } from \"react\";\nimport NavBar from \"../../components/navbar\";\nimport { ShopContext } from \"../../context\";\nimport useTransactionStore from \"../../store/transaction\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TransactionRoute = () => {\n  _s();\n\n  const shop = useContext(ShopContext);\n  const transactionState = useTransactionStore(state => state.transactionState);\n  const getTransactionState = useTransactionStore(state => state.getTransactionState);\n  useEffect(async () => {\n    getTransactionState(shop); // const url = 'https://testnet.mirrornode.hedera.com/api/v1/transactions?account.id=0.0.47870654'\n    //   const result = await fetch(url)\n    //   const response = await result.json();\n    //   console.log(response);\n  }, []);\n\n  if (transactionState.get.success.data.length = 0) {\n    console.log('Nothing found');\n  } else {\n    console.log(transactionState.get.success.data);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n\n_s(TransactionRoute, \"XkI+nRKMWI4V9xNt3yDarm/vj88=\", false, function () {\n  return [useTransactionStore, useTransactionStore];\n});\n\n_c = TransactionRoute;\nexport default TransactionRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"TransactionRoute\");","map":{"version":3,"sources":["/Users/jithendra/Desktop/Work/hbar-shop/hbar-shopify-coupon-client/src/routes/transaction/index.js"],"names":["Box","Container","Heading","Table","TableContainer","Th","Thead","Tr","Tbody","Td","VStack","Text","Divider","useColorMode","Link","useContext","useEffect","useState","NavBar","ShopContext","useTransactionStore","TransactionRoute","shop","transactionState","state","getTransactionState","get","success","data","length","console","log"],"mappings":";;AAAA,SACEA,GADF,EAEEC,SAFF,EAGEC,OAHF,EAIEC,KAJF,EAKEC,cALF,EAMEC,EANF,EAOEC,KAPF,EAQEC,EARF,EASEC,KATF,EAUEC,EAVF,EAWEC,MAXF,EAYEC,IAZF,EAaEC,OAbF,EAcEC,YAdF,EAeEC,IAfF,QAgBO,kBAhBP;AAiBA,SAASC,UAAT,EAAqBC,SAArB,EAAgCC,QAAhC,QAAgD,OAAhD;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,OAAOC,mBAAP,MAAgC,yBAAhC;;;;AAEA,MAAMC,gBAAgB,GAAG,MAAM;AAAA;;AAC7B,QAAMC,IAAI,GAAGP,UAAU,CAACI,WAAD,CAAvB;AACA,QAAMI,gBAAgB,GAAGH,mBAAmB,CACzCI,KAAD,IAAWA,KAAK,CAACD,gBADyB,CAA5C;AAGA,QAAME,mBAAmB,GAAGL,mBAAmB,CAC5CI,KAAD,IAAWA,KAAK,CAACC,mBAD4B,CAA/C;AAIAT,EAAAA,SAAS,CAAC,YAAY;AACpBS,IAAAA,mBAAmB,CAACH,IAAD,CAAnB,CADoB,CAEpB;AACA;AACA;AACA;AACD,GANQ,EAMN,EANM,CAAT;;AASD,MAAGC,gBAAgB,CAACG,GAAjB,CAAqBC,OAArB,CAA6BC,IAA7B,CAAkCC,MAAlC,GAA2C,CAA9C,EAAgD;AAC/CC,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACA,GAFD,MAEO;AACND,IAAAA,OAAO,CAACC,GAAR,CAAYR,gBAAgB,CAACG,GAAjB,CAAqBC,OAArB,CAA6BC,IAAzC;AACA;;AACA,sBACE,qCADF;AA2DD,CAlFD;;GAAMP,gB;UAEqBD,mB,EAGGA,mB;;;KALxBC,gB;AAoFN,eAAeA,gBAAf","sourcesContent":["import {\n  Box,\n  Container,\n  Heading,\n  Table,\n  TableContainer,\n  Th,\n  Thead,\n  Tr,\n  Tbody,\n  Td,\n  VStack,\n  Text,\n  Divider,\n  useColorMode,\n  Link,\n} from \"@chakra-ui/react\";\nimport { useContext, useEffect, useState } from \"react\";\nimport NavBar from \"../../components/navbar\";\nimport { ShopContext } from \"../../context\";\nimport useTransactionStore from \"../../store/transaction\";\n\nconst TransactionRoute = () => {\n  const shop = useContext(ShopContext);\n  const transactionState = useTransactionStore(\n    (state) => state.transactionState\n  );\n  const getTransactionState = useTransactionStore(\n    (state) => state.getTransactionState\n  );\n\n  useEffect(async () => {\n    getTransactionState(shop);\n    // const url = 'https://testnet.mirrornode.hedera.com/api/v1/transactions?account.id=0.0.47870654'\n    //   const result = await fetch(url)\n    //   const response = await result.json();\n    //   console.log(response);\n  }, []);\n\n \n if(transactionState.get.success.data.length = 0){\n  console.log('Nothing found');\n } else {\n  console.log(transactionState.get.success.data);\n }\n  return (\n    <>\n      \n      {/* <Container\n        maxW={\"7xl\"}\n        p={[12, 6]}\n        minH={'100vh'}\n        bg=\"#f6f6f7\"\n        textAlign={\"left\"}\n      >\n        <Box bg=\"white\" width={\"5xl\"} m=\"auto\" p={5} borderRadius=\"10px\">\n          <VStack spacing={2} align=\"stretch\">\n            <Box>\n              <Text size=\"xl\" fontWeight=\"bold\">\n                HABR Transaction Details\n              </Text>\n              <Divider borderColor=\"gray.200\" />\n            </Box>\n          </VStack>\n          \n          <TableContainer p=\"5\">\n            <Table variant={\"simple\"}>\n              <Thead>\n                <Tr>\n                  <Th>Account</Th>\n                  <Th isNumeric>Amount</Th>\n                  <Th>Fee</Th>\n                  <Th>Result</Th>\n                  <Th>Transaction Ref</Th>\n                </Tr>\n              </Thead>\n              <Tbody>\n                \n                {transactionState.get.success.data.transactions.map(\n                  (details) => (\n                    <Tr>\n                      <Td>{details.transfers[0].account}</Td>\n                      <Td isNumeric>{details.transfers[0].amount}</Td>\n                      <Td>{details.charged_tx_fee}</Td>\n                      <Td>{details.result}</Td>\n                      <Td>\n                        <Link\n                          color=\"teal\"\n                          target=\"_blank\"\n                          href={`${process.env.REACT_APP_HBAR_TRANSACTION_REFFERENCE}transaction/${details.transaction_id}`}\n                        >\n                          {details.transaction_id}\n                        </Link>\n                      </Td>\n                    </Tr>\n                  )\n                )}\n              </Tbody>\n            </Table>\n          </TableContainer>\n        </Box>\n      </Container> */}\n    </>\n  );\n};\n\nexport default TransactionRoute;\n"]},"metadata":{},"sourceType":"module"}