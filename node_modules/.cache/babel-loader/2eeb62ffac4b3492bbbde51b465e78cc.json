{"ast":null,"code":"/*-\n * ‌\n * Hedera JavaScript SDK\n * ​\n * Copyright (C) 2020 - 2022 Hedera Hashgraph, LLC\n * ​\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * ‍\n */\nimport Transaction, { TRANSACTION_REGISTRY } from \"../transaction/Transaction.js\";\nimport AccountId from \"./AccountId.js\";\nimport Timestamp from \"../Timestamp.js\";\nimport Duration from \"../Duration.js\";\nimport Long from \"long\";\nimport Key from \"../Key.js\";\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").proto.ITransaction} HashgraphProto.proto.ITransaction\n * @typedef {import(\"@hashgraph/proto\").proto.ISignedTransaction} HashgraphProto.proto.ISignedTransaction\n * @typedef {import(\"@hashgraph/proto\").proto.TransactionBody} HashgraphProto.proto.TransactionBody\n * @typedef {import(\"@hashgraph/proto\").proto.ITransactionBody} HashgraphProto.proto.ITransactionBody\n * @typedef {import(\"@hashgraph/proto\").proto.ITransactionResponse} HashgraphProto.proto.ITransactionResponse\n * @typedef {import(\"@hashgraph/proto\").proto.ICryptoUpdateTransactionBody} HashgraphProto.proto.ICryptoUpdateTransactionBody\n * @typedef {import(\"@hashgraph/proto\").proto.IAccountID} HashgraphProto.proto.IAccountID\n */\n\n/**\n * @typedef {import(\"../channel/Channel.js\").default} Channel\n * @typedef {import(\"../client/Client.js\").default<*, *>} Client\n * @typedef {import(\"../transaction/TransactionId.js\").default} TransactionId\n */\n\n/**\n * Change properties for the given account.\n */\n\nexport default class AccountUpdateTransaction extends Transaction {\n  /**\n   * @param {object} props\n   * @param {AccountId} [props.accountId]\n   * @param {Key} [props.key]\n   * @param {boolean} [props.receiverSignatureRequired]\n   * @param {AccountId} [props.proxyAccountId]\n   * @param {Duration | Long | number} [props.autoRenewPeriod]\n   * @param {Timestamp | Date} [props.expirationTime]\n   * @param {string} [props.accountMemo]\n   * @param {Long | number} [props.maxAutomaticTokenAssociations]\n   * @param {Key} [props.aliasKey]\n   * @param {AccountId | string} [props.stakedAccountId]\n   * @param {Long | number} [props.stakedNodeId]\n   * @param {boolean} [props.declineStakingReward]\n   */\n  constructor() {\n    let props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    super();\n    /**\n     * @private\n     * @type {?AccountId}\n     */\n\n    this._accountId = null;\n    /**\n     * @private\n     * @type {?Key}\n     */\n\n    this._key = null;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    this._receiverSignatureRequired = false;\n    /**\n     * @private\n     * @type {?AccountId}\n     */\n\n    this._proxyAccountId = null;\n    /**\n     * @private\n     * @type {?Duration}\n     */\n\n    this._autoRenewPeriod = null;\n    /**\n     * @private\n     * @type {?Timestamp}\n     */\n\n    this._expirationTime = null;\n    /**\n     * @private\n     * @type {?string}\n     */\n\n    this._accountMemo = null;\n    /**\n     * @private\n     * @type {?Long}\n     */\n\n    this._maxAutomaticTokenAssociations = null;\n    /**\n     * @private\n     * @type {?Key}\n     */\n\n    this._aliasKey = null;\n    /**\n     * @private\n     * @type {?AccountId}\n     */\n\n    this._stakedAccountId = null;\n    /**\n     * @private\n     * @type {?Long}\n     */\n\n    this._stakedNodeId = null;\n    /**\n     * @private\n     * @type {?boolean}\n     */\n\n    this._declineStakingReward = null;\n\n    if (props.accountId != null) {\n      this.setAccountId(props.accountId);\n    }\n\n    if (props.key != null) {\n      this.setKey(props.key);\n    }\n\n    if (props.receiverSignatureRequired != null) {\n      this.setReceiverSignatureRequired(props.receiverSignatureRequired);\n    }\n\n    if (props.proxyAccountId != null) {\n      // eslint-disable-next-line deprecation/deprecation\n      this.setProxyAccountId(props.proxyAccountId);\n    }\n\n    if (props.autoRenewPeriod != null) {\n      this.setAutoRenewPeriod(props.autoRenewPeriod);\n    }\n\n    if (props.expirationTime != null) {\n      this.setExpirationTime(props.expirationTime);\n    }\n\n    if (props.accountMemo != null) {\n      this.setAccountMemo(props.accountMemo);\n    }\n\n    if (props.maxAutomaticTokenAssociations != null) {\n      this.setMaxAutomaticTokenAssociations(props.maxAutomaticTokenAssociations);\n    }\n\n    if (props.stakedAccountId != null) {\n      this.setStakedAccountId(props.stakedAccountId);\n    }\n\n    if (props.stakedNodeId != null) {\n      this.setStakedNodeId(props.stakedNodeId);\n    }\n\n    if (props.declineStakingReward != null) {\n      this.setDeclineStakingReward(props.declineStakingReward);\n    }\n  }\n  /**\n   * @internal\n   * @param {HashgraphProto.proto.ITransaction[]} transactions\n   * @param {HashgraphProto.proto.ISignedTransaction[]} signedTransactions\n   * @param {TransactionId[]} transactionIds\n   * @param {AccountId[]} nodeIds\n   * @param {HashgraphProto.proto.ITransactionBody[]} bodies\n   * @returns {AccountUpdateTransaction}\n   */\n\n\n  static _fromProtobuf(transactions, signedTransactions, transactionIds, nodeIds, bodies) {\n    const body = bodies[0];\n    const update =\n    /** @type {HashgraphProto.proto.ICryptoUpdateTransactionBody} */\n    body.cryptoUpdateAccount;\n    return Transaction._fromProtobufTransactions(new AccountUpdateTransaction({\n      accountId: update.accountIDToUpdate != null ? AccountId._fromProtobuf(\n      /** @type {HashgraphProto.proto.IAccountID} */\n      update.accountIDToUpdate) : undefined,\n      key: update.key != null ? Key._fromProtobufKey(update.key) : undefined,\n      receiverSignatureRequired: update.receiverSigRequired != null ? update.receiverSigRequired : undefined,\n      proxyAccountId: update.proxyAccountID != null ? AccountId._fromProtobuf(\n      /** @type {HashgraphProto.proto.IAccountID} */\n      update.proxyAccountID) : undefined,\n      autoRenewPeriod: update.autoRenewPeriod != null ? update.autoRenewPeriod.seconds != null ? update.autoRenewPeriod.seconds : undefined : undefined,\n      expirationTime: update.expirationTime != null ? Timestamp._fromProtobuf(update.expirationTime) : undefined,\n      accountMemo: update.memo != null ? update.memo.value != null ? update.memo.value : undefined : undefined,\n      maxAutomaticTokenAssociations: update.maxAutomaticTokenAssociations != null && update.maxAutomaticTokenAssociations.value != null ? Long.fromNumber(update.maxAutomaticTokenAssociations.value) : undefined,\n      stakedAccountId: update.stakedAccountId != null ? AccountId._fromProtobuf(update.stakedAccountId) : undefined,\n      stakedNodeId: update.stakedNodeId != null ? update.stakedNodeId : undefined,\n      declineStakingReward: update.declineReward != null && update.declineReward == true\n    }), transactions, signedTransactions, transactionIds, nodeIds, bodies);\n  }\n  /**\n   * @returns {?AccountId}\n   */\n\n\n  get accountId() {\n    return this._accountId;\n  }\n  /**\n   * Sets the account ID which is being updated in this transaction.\n   *\n   * @param {AccountId | string} accountId\n   * @returns {AccountUpdateTransaction}\n   */\n\n\n  setAccountId(accountId) {\n    this._requireNotFrozen();\n\n    this._accountId = typeof accountId === \"string\" ? AccountId.fromString(accountId) : accountId.clone();\n    return this;\n  }\n  /**\n   * @returns {?Key}\n   */\n\n\n  get key() {\n    return this._key;\n  }\n  /**\n   * @param {Key} key\n   * @returns {this}\n   */\n\n\n  setKey(key) {\n    this._requireNotFrozen();\n\n    this._key = key;\n    return this;\n  }\n  /**\n   * @returns {boolean}\n   */\n\n\n  get receiverSignatureRequired() {\n    return this._receiverSignatureRequired;\n  }\n  /**\n   * @param {boolean} receiverSignatureRequired\n   * @returns {this}\n   */\n\n\n  setReceiverSignatureRequired(receiverSignatureRequired) {\n    this._requireNotFrozen();\n\n    this._receiverSignatureRequired = receiverSignatureRequired;\n    return this;\n  }\n  /**\n   * @deprecated\n   * @returns {?AccountId}\n   */\n\n\n  get proxyAccountId() {\n    return this._proxyAccountId;\n  }\n  /**\n   * @deprecated\n   * @param {AccountId} proxyAccountId\n   * @returns {this}\n   */\n\n\n  setProxyAccountId(proxyAccountId) {\n    this._requireNotFrozen();\n\n    this._proxyAccountId = proxyAccountId;\n    return this;\n  }\n  /**\n   * @returns {?Duration}\n   */\n\n\n  get autoRenewPeriod() {\n    return this._autoRenewPeriod;\n  }\n  /**\n   * @param {Duration | Long | number} autoRenewPeriod\n   * @returns {this}\n   */\n\n\n  setAutoRenewPeriod(autoRenewPeriod) {\n    this._requireNotFrozen();\n\n    this._autoRenewPeriod = autoRenewPeriod instanceof Duration ? autoRenewPeriod : new Duration(autoRenewPeriod);\n    return this;\n  }\n  /**\n   * @returns {?Timestamp}\n   */\n\n\n  get expirationTime() {\n    return this._expirationTime;\n  }\n  /**\n   * @param {Timestamp | Date} expirationTime\n   * @returns {this}\n   */\n\n\n  setExpirationTime(expirationTime) {\n    this._requireNotFrozen();\n\n    this._expirationTime = expirationTime instanceof Date ? Timestamp.fromDate(expirationTime) : expirationTime;\n    return this;\n  }\n  /**\n   * @returns {?string}\n   */\n\n\n  get accountMemo() {\n    return this._accountMemo;\n  }\n  /**\n   * @param {string} memo\n   * @returns {this}\n   */\n\n\n  setAccountMemo(memo) {\n    this._requireNotFrozen();\n\n    this._accountMemo = memo;\n    return this;\n  }\n  /**\n   * @returns {this}\n   */\n\n\n  clearAccountMemo() {\n    this._requireNotFrozen();\n\n    this._accountMemo = null;\n    return this;\n  }\n  /**\n   * @returns {?Long}\n   */\n\n\n  get maxAutomaticTokenAssociations() {\n    return this._maxAutomaticTokenAssociations;\n  }\n  /**\n   * @param {Long | number} maxAutomaticTokenAssociations\n   * @returns {this}\n   */\n\n\n  setMaxAutomaticTokenAssociations(maxAutomaticTokenAssociations) {\n    this._requireNotFrozen();\n\n    this._maxAutomaticTokenAssociations = typeof maxAutomaticTokenAssociations === \"number\" ? Long.fromNumber(maxAutomaticTokenAssociations) : maxAutomaticTokenAssociations;\n    return this;\n  }\n  /**\n   * @deprecated - no longer supported\n   * @returns {?Key}\n   */\n\n\n  get aliasKey() {\n    return null;\n  }\n  /**\n   * @deprecated - no longer supported\n   * @param {Key} _\n   * @returns {this}\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n\n  setAliasKey(_) {\n    return this;\n  }\n  /**\n   * @returns {?AccountId}\n   */\n\n\n  get stakedAccountId() {\n    return this._stakedAccountId;\n  }\n  /**\n   * @param {AccountId | string} stakedAccountId\n   * @returns {this}\n   */\n\n\n  setStakedAccountId(stakedAccountId) {\n    this._requireNotFrozen();\n\n    this._stakedAccountId = typeof stakedAccountId === \"string\" ? AccountId.fromString(stakedAccountId) : stakedAccountId;\n    return this;\n  }\n  /**\n   * @returns {this}\n   */\n\n\n  clearStakedAccountId() {\n    this._requireNotFrozen();\n\n    this._stakedAccountId = new AccountId(0, 0, 0);\n    return this;\n  }\n  /**\n   * @returns {?Long}\n   */\n\n\n  get stakedNodeId() {\n    return this._stakedNodeId;\n  }\n  /**\n   * @param {Long | number} stakedNodeId\n   * @returns {this}\n   */\n\n\n  setStakedNodeId(stakedNodeId) {\n    this._requireNotFrozen();\n\n    this._stakedNodeId = Long.fromValue(stakedNodeId);\n    return this;\n  }\n  /**\n   * @returns {this}\n   */\n\n\n  clearStakedNodeId() {\n    this._requireNotFrozen();\n\n    this._stakedNodeId = Long.fromNumber(-1);\n    return this;\n  }\n  /**\n   * @returns {?boolean}\n   */\n\n\n  get declineStakingRewards() {\n    return this._declineStakingReward;\n  }\n  /**\n   * @param {boolean} declineStakingReward\n   * @returns {this}\n   */\n\n\n  setDeclineStakingReward(declineStakingReward) {\n    this._requireNotFrozen();\n\n    this._declineStakingReward = declineStakingReward;\n    return this;\n  }\n  /**\n   * @param {Client} client\n   */\n\n\n  _validateChecksums(client) {\n    if (this._accountId != null) {\n      this._accountId.validateChecksum(client);\n    }\n\n    if (this._proxyAccountId != null) {\n      this._proxyAccountId.validateChecksum(client);\n    }\n  }\n  /**\n   * @override\n   * @internal\n   * @param {Channel} channel\n   * @param {HashgraphProto.proto.ITransaction} request\n   * @returns {Promise<HashgraphProto.proto.ITransactionResponse>}\n   */\n\n\n  _execute(channel, request) {\n    return channel.crypto.updateAccount(request);\n  }\n  /**\n   * @override\n   * @protected\n   * @returns {NonNullable<HashgraphProto.proto.TransactionBody[\"data\"]>}\n   */\n\n\n  _getTransactionDataCase() {\n    return \"cryptoUpdateAccount\";\n  }\n  /**\n   * @override\n   * @protected\n   * @returns {HashgraphProto.proto.ICryptoUpdateTransactionBody}\n   */\n\n\n  _makeTransactionData() {\n    return {\n      accountIDToUpdate: this._accountId != null ? this._accountId._toProtobuf() : null,\n      key: this._key != null ? this._key._toProtobufKey() : null,\n      expirationTime: this._expirationTime != null ? this._expirationTime._toProtobuf() : null,\n      proxyAccountID: this._proxyAccountId != null ? this._proxyAccountId._toProtobuf() : null,\n      autoRenewPeriod: this._autoRenewPeriod != null ? this._autoRenewPeriod._toProtobuf() : null,\n      receiverSigRequiredWrapper: this._receiverSignatureRequired == null ? null : {\n        value: this._receiverSignatureRequired\n      },\n      memo: this._accountMemo != null ? {\n        value: this._accountMemo\n      } : null,\n      maxAutomaticTokenAssociations: this._maxAutomaticTokenAssociations != null ? {\n        value: this._maxAutomaticTokenAssociations.toInt()\n      } : null,\n      stakedAccountId: this.stakedAccountId != null ? this.stakedAccountId._toProtobuf() : null,\n      stakedNodeId: this.stakedNodeId,\n      declineReward: this.declineStakingRewards != null ? {\n        value: this.declineStakingRewards\n      } : null\n    };\n  }\n  /**\n   * @returns {string}\n   */\n\n\n  _getLogId() {\n    const timestamp =\n    /** @type {import(\"../Timestamp.js\").default} */\n    this._transactionIds.current.validStart;\n    return `AccountUpdateTransaction:${timestamp.toString()}`;\n  }\n\n}\nTRANSACTION_REGISTRY.set(\"cryptoUpdateAccount\", // eslint-disable-next-line @typescript-eslint/unbound-method\nAccountUpdateTransaction._fromProtobuf);","map":{"version":3,"sources":["/Users/jithendra/Desktop/Work/hbar-shop/hbar-shopify-coupon-client/node_modules/@hashgraph/sdk/src/account/AccountUpdateTransaction.js"],"names":["Transaction","TRANSACTION_REGISTRY","AccountId","Timestamp","Duration","Long","Key","AccountUpdateTransaction","constructor","props","_accountId","_key","_receiverSignatureRequired","_proxyAccountId","_autoRenewPeriod","_expirationTime","_accountMemo","_maxAutomaticTokenAssociations","_aliasKey","_stakedAccountId","_stakedNodeId","_declineStakingReward","accountId","setAccountId","key","setKey","receiverSignatureRequired","setReceiverSignatureRequired","proxyAccountId","setProxyAccountId","autoRenewPeriod","setAutoRenewPeriod","expirationTime","setExpirationTime","accountMemo","setAccountMemo","maxAutomaticTokenAssociations","setMaxAutomaticTokenAssociations","stakedAccountId","setStakedAccountId","stakedNodeId","setStakedNodeId","declineStakingReward","setDeclineStakingReward","_fromProtobuf","transactions","signedTransactions","transactionIds","nodeIds","bodies","body","update","cryptoUpdateAccount","_fromProtobufTransactions","accountIDToUpdate","undefined","_fromProtobufKey","receiverSigRequired","proxyAccountID","seconds","memo","value","fromNumber","declineReward","_requireNotFrozen","fromString","clone","Date","fromDate","clearAccountMemo","aliasKey","setAliasKey","_","clearStakedAccountId","fromValue","clearStakedNodeId","declineStakingRewards","_validateChecksums","client","validateChecksum","_execute","channel","request","crypto","updateAccount","_getTransactionDataCase","_makeTransactionData","_toProtobuf","_toProtobufKey","receiverSigRequiredWrapper","toInt","_getLogId","timestamp","_transactionIds","current","validStart","toString","set"],"mappings":"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","sourcesContent":["/*-\n * ‌\n * Hedera JavaScript SDK\n * ​\n * Copyright (C) 2020 - 2022 Hedera Hashgraph, LLC\n * ​\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * ‍\n */\n\nimport Transaction, {\n    TRANSACTION_REGISTRY,\n} from \"../transaction/Transaction.js\";\nimport AccountId from \"./AccountId.js\";\nimport Timestamp from \"../Timestamp.js\";\nimport Duration from \"../Duration.js\";\nimport Long from \"long\";\nimport Key from \"../Key.js\";\n\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").proto.ITransaction} HashgraphProto.proto.ITransaction\n * @typedef {import(\"@hashgraph/proto\").proto.ISignedTransaction} HashgraphProto.proto.ISignedTransaction\n * @typedef {import(\"@hashgraph/proto\").proto.TransactionBody} HashgraphProto.proto.TransactionBody\n * @typedef {import(\"@hashgraph/proto\").proto.ITransactionBody} HashgraphProto.proto.ITransactionBody\n * @typedef {import(\"@hashgraph/proto\").proto.ITransactionResponse} HashgraphProto.proto.ITransactionResponse\n * @typedef {import(\"@hashgraph/proto\").proto.ICryptoUpdateTransactionBody} HashgraphProto.proto.ICryptoUpdateTransactionBody\n * @typedef {import(\"@hashgraph/proto\").proto.IAccountID} HashgraphProto.proto.IAccountID\n */\n\n/**\n * @typedef {import(\"../channel/Channel.js\").default} Channel\n * @typedef {import(\"../client/Client.js\").default<*, *>} Client\n * @typedef {import(\"../transaction/TransactionId.js\").default} TransactionId\n */\n\n/**\n * Change properties for the given account.\n */\nexport default class AccountUpdateTransaction extends Transaction {\n    /**\n     * @param {object} props\n     * @param {AccountId} [props.accountId]\n     * @param {Key} [props.key]\n     * @param {boolean} [props.receiverSignatureRequired]\n     * @param {AccountId} [props.proxyAccountId]\n     * @param {Duration | Long | number} [props.autoRenewPeriod]\n     * @param {Timestamp | Date} [props.expirationTime]\n     * @param {string} [props.accountMemo]\n     * @param {Long | number} [props.maxAutomaticTokenAssociations]\n     * @param {Key} [props.aliasKey]\n     * @param {AccountId | string} [props.stakedAccountId]\n     * @param {Long | number} [props.stakedNodeId]\n     * @param {boolean} [props.declineStakingReward]\n     */\n    constructor(props = {}) {\n        super();\n\n        /**\n         * @private\n         * @type {?AccountId}\n         */\n        this._accountId = null;\n\n        /**\n         * @private\n         * @type {?Key}\n         */\n        this._key = null;\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this._receiverSignatureRequired = false;\n\n        /**\n         * @private\n         * @type {?AccountId}\n         */\n        this._proxyAccountId = null;\n\n        /**\n         * @private\n         * @type {?Duration}\n         */\n        this._autoRenewPeriod = null;\n\n        /**\n         * @private\n         * @type {?Timestamp}\n         */\n        this._expirationTime = null;\n\n        /**\n         * @private\n         * @type {?string}\n         */\n        this._accountMemo = null;\n\n        /**\n         * @private\n         * @type {?Long}\n         */\n        this._maxAutomaticTokenAssociations = null;\n\n        /**\n         * @private\n         * @type {?Key}\n         */\n        this._aliasKey = null;\n\n        /**\n         * @private\n         * @type {?AccountId}\n         */\n        this._stakedAccountId = null;\n\n        /**\n         * @private\n         * @type {?Long}\n         */\n        this._stakedNodeId = null;\n\n        /**\n         * @private\n         * @type {?boolean}\n         */\n        this._declineStakingReward = null;\n\n        if (props.accountId != null) {\n            this.setAccountId(props.accountId);\n        }\n\n        if (props.key != null) {\n            this.setKey(props.key);\n        }\n\n        if (props.receiverSignatureRequired != null) {\n            this.setReceiverSignatureRequired(props.receiverSignatureRequired);\n        }\n\n        if (props.proxyAccountId != null) {\n            // eslint-disable-next-line deprecation/deprecation\n            this.setProxyAccountId(props.proxyAccountId);\n        }\n\n        if (props.autoRenewPeriod != null) {\n            this.setAutoRenewPeriod(props.autoRenewPeriod);\n        }\n\n        if (props.expirationTime != null) {\n            this.setExpirationTime(props.expirationTime);\n        }\n\n        if (props.accountMemo != null) {\n            this.setAccountMemo(props.accountMemo);\n        }\n\n        if (props.maxAutomaticTokenAssociations != null) {\n            this.setMaxAutomaticTokenAssociations(\n                props.maxAutomaticTokenAssociations\n            );\n        }\n\n        if (props.stakedAccountId != null) {\n            this.setStakedAccountId(props.stakedAccountId);\n        }\n\n        if (props.stakedNodeId != null) {\n            this.setStakedNodeId(props.stakedNodeId);\n        }\n\n        if (props.declineStakingReward != null) {\n            this.setDeclineStakingReward(props.declineStakingReward);\n        }\n    }\n\n    /**\n     * @internal\n     * @param {HashgraphProto.proto.ITransaction[]} transactions\n     * @param {HashgraphProto.proto.ISignedTransaction[]} signedTransactions\n     * @param {TransactionId[]} transactionIds\n     * @param {AccountId[]} nodeIds\n     * @param {HashgraphProto.proto.ITransactionBody[]} bodies\n     * @returns {AccountUpdateTransaction}\n     */\n    static _fromProtobuf(\n        transactions,\n        signedTransactions,\n        transactionIds,\n        nodeIds,\n        bodies\n    ) {\n        const body = bodies[0];\n        const update =\n            /** @type {HashgraphProto.proto.ICryptoUpdateTransactionBody} */ (\n                body.cryptoUpdateAccount\n            );\n\n        return Transaction._fromProtobufTransactions(\n            new AccountUpdateTransaction({\n                accountId:\n                    update.accountIDToUpdate != null\n                        ? AccountId._fromProtobuf(\n                              /** @type {HashgraphProto.proto.IAccountID} */ (\n                                  update.accountIDToUpdate\n                              )\n                          )\n                        : undefined,\n                key:\n                    update.key != null\n                        ? Key._fromProtobufKey(update.key)\n                        : undefined,\n                receiverSignatureRequired:\n                    update.receiverSigRequired != null\n                        ? update.receiverSigRequired\n                        : undefined,\n                proxyAccountId:\n                    update.proxyAccountID != null\n                        ? AccountId._fromProtobuf(\n                              /** @type {HashgraphProto.proto.IAccountID} */ (\n                                  update.proxyAccountID\n                              )\n                          )\n                        : undefined,\n                autoRenewPeriod:\n                    update.autoRenewPeriod != null\n                        ? update.autoRenewPeriod.seconds != null\n                            ? update.autoRenewPeriod.seconds\n                            : undefined\n                        : undefined,\n                expirationTime:\n                    update.expirationTime != null\n                        ? Timestamp._fromProtobuf(update.expirationTime)\n                        : undefined,\n                accountMemo:\n                    update.memo != null\n                        ? update.memo.value != null\n                            ? update.memo.value\n                            : undefined\n                        : undefined,\n                maxAutomaticTokenAssociations:\n                    update.maxAutomaticTokenAssociations != null &&\n                    update.maxAutomaticTokenAssociations.value != null\n                        ? Long.fromNumber(\n                              update.maxAutomaticTokenAssociations.value\n                          )\n                        : undefined,\n                stakedAccountId:\n                    update.stakedAccountId != null\n                        ? AccountId._fromProtobuf(update.stakedAccountId)\n                        : undefined,\n                stakedNodeId:\n                    update.stakedNodeId != null\n                        ? update.stakedNodeId\n                        : undefined,\n                declineStakingReward:\n                    update.declineReward != null &&\n                    update.declineReward == true,\n            }),\n            transactions,\n            signedTransactions,\n            transactionIds,\n            nodeIds,\n            bodies\n        );\n    }\n\n    /**\n     * @returns {?AccountId}\n     */\n    get accountId() {\n        return this._accountId;\n    }\n\n    /**\n     * Sets the account ID which is being updated in this transaction.\n     *\n     * @param {AccountId | string} accountId\n     * @returns {AccountUpdateTransaction}\n     */\n    setAccountId(accountId) {\n        this._requireNotFrozen();\n        this._accountId =\n            typeof accountId === \"string\"\n                ? AccountId.fromString(accountId)\n                : accountId.clone();\n\n        return this;\n    }\n\n    /**\n     * @returns {?Key}\n     */\n    get key() {\n        return this._key;\n    }\n\n    /**\n     * @param {Key} key\n     * @returns {this}\n     */\n    setKey(key) {\n        this._requireNotFrozen();\n        this._key = key;\n\n        return this;\n    }\n\n    /**\n     * @returns {boolean}\n     */\n    get receiverSignatureRequired() {\n        return this._receiverSignatureRequired;\n    }\n\n    /**\n     * @param {boolean} receiverSignatureRequired\n     * @returns {this}\n     */\n    setReceiverSignatureRequired(receiverSignatureRequired) {\n        this._requireNotFrozen();\n        this._receiverSignatureRequired = receiverSignatureRequired;\n\n        return this;\n    }\n\n    /**\n     * @deprecated\n     * @returns {?AccountId}\n     */\n    get proxyAccountId() {\n        return this._proxyAccountId;\n    }\n\n    /**\n     * @deprecated\n     * @param {AccountId} proxyAccountId\n     * @returns {this}\n     */\n    setProxyAccountId(proxyAccountId) {\n        this._requireNotFrozen();\n        this._proxyAccountId = proxyAccountId;\n\n        return this;\n    }\n\n    /**\n     * @returns {?Duration}\n     */\n    get autoRenewPeriod() {\n        return this._autoRenewPeriod;\n    }\n\n    /**\n     * @param {Duration | Long | number} autoRenewPeriod\n     * @returns {this}\n     */\n    setAutoRenewPeriod(autoRenewPeriod) {\n        this._requireNotFrozen();\n        this._autoRenewPeriod =\n            autoRenewPeriod instanceof Duration\n                ? autoRenewPeriod\n                : new Duration(autoRenewPeriod);\n\n        return this;\n    }\n\n    /**\n     * @returns {?Timestamp}\n     */\n    get expirationTime() {\n        return this._expirationTime;\n    }\n\n    /**\n     * @param {Timestamp | Date} expirationTime\n     * @returns {this}\n     */\n    setExpirationTime(expirationTime) {\n        this._requireNotFrozen();\n        this._expirationTime =\n            expirationTime instanceof Date\n                ? Timestamp.fromDate(expirationTime)\n                : expirationTime;\n\n        return this;\n    }\n\n    /**\n     * @returns {?string}\n     */\n    get accountMemo() {\n        return this._accountMemo;\n    }\n\n    /**\n     * @param {string} memo\n     * @returns {this}\n     */\n    setAccountMemo(memo) {\n        this._requireNotFrozen();\n        this._accountMemo = memo;\n\n        return this;\n    }\n\n    /**\n     * @returns {this}\n     */\n    clearAccountMemo() {\n        this._requireNotFrozen();\n        this._accountMemo = null;\n\n        return this;\n    }\n\n    /**\n     * @returns {?Long}\n     */\n    get maxAutomaticTokenAssociations() {\n        return this._maxAutomaticTokenAssociations;\n    }\n\n    /**\n     * @param {Long | number} maxAutomaticTokenAssociations\n     * @returns {this}\n     */\n    setMaxAutomaticTokenAssociations(maxAutomaticTokenAssociations) {\n        this._requireNotFrozen();\n        this._maxAutomaticTokenAssociations =\n            typeof maxAutomaticTokenAssociations === \"number\"\n                ? Long.fromNumber(maxAutomaticTokenAssociations)\n                : maxAutomaticTokenAssociations;\n\n        return this;\n    }\n\n    /**\n     * @deprecated - no longer supported\n     * @returns {?Key}\n     */\n    get aliasKey() {\n        return null;\n    }\n\n    /**\n     * @deprecated - no longer supported\n     * @param {Key} _\n     * @returns {this}\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    setAliasKey(_) {\n        return this;\n    }\n\n    /**\n     * @returns {?AccountId}\n     */\n    get stakedAccountId() {\n        return this._stakedAccountId;\n    }\n\n    /**\n     * @param {AccountId | string} stakedAccountId\n     * @returns {this}\n     */\n    setStakedAccountId(stakedAccountId) {\n        this._requireNotFrozen();\n        this._stakedAccountId =\n            typeof stakedAccountId === \"string\"\n                ? AccountId.fromString(stakedAccountId)\n                : stakedAccountId;\n\n        return this;\n    }\n\n    /**\n     * @returns {this}\n     */\n    clearStakedAccountId() {\n        this._requireNotFrozen();\n        this._stakedAccountId = new AccountId(0, 0, 0);\n\n        return this;\n    }\n\n    /**\n     * @returns {?Long}\n     */\n    get stakedNodeId() {\n        return this._stakedNodeId;\n    }\n\n    /**\n     * @param {Long | number} stakedNodeId\n     * @returns {this}\n     */\n    setStakedNodeId(stakedNodeId) {\n        this._requireNotFrozen();\n        this._stakedNodeId = Long.fromValue(stakedNodeId);\n\n        return this;\n    }\n\n    /**\n     * @returns {this}\n     */\n    clearStakedNodeId() {\n        this._requireNotFrozen();\n        this._stakedNodeId = Long.fromNumber(-1);\n\n        return this;\n    }\n\n    /**\n     * @returns {?boolean}\n     */\n    get declineStakingRewards() {\n        return this._declineStakingReward;\n    }\n\n    /**\n     * @param {boolean} declineStakingReward\n     * @returns {this}\n     */\n    setDeclineStakingReward(declineStakingReward) {\n        this._requireNotFrozen();\n        this._declineStakingReward = declineStakingReward;\n\n        return this;\n    }\n\n    /**\n     * @param {Client} client\n     */\n    _validateChecksums(client) {\n        if (this._accountId != null) {\n            this._accountId.validateChecksum(client);\n        }\n\n        if (this._proxyAccountId != null) {\n            this._proxyAccountId.validateChecksum(client);\n        }\n    }\n\n    /**\n     * @override\n     * @internal\n     * @param {Channel} channel\n     * @param {HashgraphProto.proto.ITransaction} request\n     * @returns {Promise<HashgraphProto.proto.ITransactionResponse>}\n     */\n    _execute(channel, request) {\n        return channel.crypto.updateAccount(request);\n    }\n\n    /**\n     * @override\n     * @protected\n     * @returns {NonNullable<HashgraphProto.proto.TransactionBody[\"data\"]>}\n     */\n    _getTransactionDataCase() {\n        return \"cryptoUpdateAccount\";\n    }\n\n    /**\n     * @override\n     * @protected\n     * @returns {HashgraphProto.proto.ICryptoUpdateTransactionBody}\n     */\n    _makeTransactionData() {\n        return {\n            accountIDToUpdate:\n                this._accountId != null ? this._accountId._toProtobuf() : null,\n            key: this._key != null ? this._key._toProtobufKey() : null,\n            expirationTime:\n                this._expirationTime != null\n                    ? this._expirationTime._toProtobuf()\n                    : null,\n            proxyAccountID:\n                this._proxyAccountId != null\n                    ? this._proxyAccountId._toProtobuf()\n                    : null,\n            autoRenewPeriod:\n                this._autoRenewPeriod != null\n                    ? this._autoRenewPeriod._toProtobuf()\n                    : null,\n            receiverSigRequiredWrapper:\n                this._receiverSignatureRequired == null\n                    ? null\n                    : {\n                          value: this._receiverSignatureRequired,\n                      },\n            memo:\n                this._accountMemo != null\n                    ? {\n                          value: this._accountMemo,\n                      }\n                    : null,\n            maxAutomaticTokenAssociations:\n                this._maxAutomaticTokenAssociations != null\n                    ? { value: this._maxAutomaticTokenAssociations.toInt() }\n                    : null,\n            stakedAccountId:\n                this.stakedAccountId != null\n                    ? this.stakedAccountId._toProtobuf()\n                    : null,\n            stakedNodeId: this.stakedNodeId,\n            declineReward:\n                this.declineStakingRewards != null\n                    ? { value: this.declineStakingRewards }\n                    : null,\n        };\n    }\n\n    /**\n     * @returns {string}\n     */\n    _getLogId() {\n        const timestamp = /** @type {import(\"../Timestamp.js\").default} */ (\n            this._transactionIds.current.validStart\n        );\n        return `AccountUpdateTransaction:${timestamp.toString()}`;\n    }\n}\n\nTRANSACTION_REGISTRY.set(\n    \"cryptoUpdateAccount\",\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    AccountUpdateTransaction._fromProtobuf\n);\n"]},"metadata":{},"sourceType":"module"}