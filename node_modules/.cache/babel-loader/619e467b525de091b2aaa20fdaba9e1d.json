{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AwesomeQR = void 0;\n\nvar canvas_1 = require(\"canvas\");\n\nvar gifuct_js_1 = require(\"./gifuct-js\");\n\nvar qrcode_1 = require(\"./qrcode\");\n\nvar GIFEncoder_1 = __importDefault(require(\"./gif.js/GIFEncoder\"));\n\nvar defaultScale = 0.4;\n\nvar AwesomeQR =\n/** @class */\nfunction () {\n  function AwesomeQR(options) {\n    var _options = Object.assign({}, options);\n\n    Object.keys(AwesomeQR.defaultOptions).forEach(function (k) {\n      if (!(k in _options)) {\n        Object.defineProperty(_options, k, {\n          value: AwesomeQR.defaultOptions[k],\n          enumerable: true,\n          writable: true\n        });\n      }\n    });\n\n    if (!_options.components) {\n      _options.components = AwesomeQR.defaultComponentOptions;\n    } else if (typeof _options.components === \"object\") {\n      Object.keys(AwesomeQR.defaultComponentOptions).forEach(function (k) {\n        if (!(k in _options.components)) {\n          Object.defineProperty(_options.components, k, {\n            value: AwesomeQR.defaultComponentOptions[k],\n            enumerable: true,\n            writable: true\n          });\n        } else {\n          Object.defineProperty(_options.components, k, {\n            value: __assign(__assign({}, AwesomeQR.defaultComponentOptions[k]), _options.components[k]),\n            enumerable: true,\n            writable: true\n          });\n        }\n      });\n    }\n\n    if (_options.dotScale !== null && _options.dotScale !== undefined) {\n      if (_options.dotScale <= 0 || _options.dotScale > 1) {\n        throw new Error(\"dotScale should be in range (0, 1].\");\n      }\n\n      _options.components.data.scale = _options.dotScale;\n      _options.components.timing.scale = _options.dotScale;\n      _options.components.alignment.scale = _options.dotScale;\n    }\n\n    this.options = _options;\n    this.canvas = canvas_1.createCanvas(options.size, options.size);\n    this.canvasContext = this.canvas.getContext(\"2d\");\n    this.qrCode = new qrcode_1.QRCodeModel(-1, this.options.correctLevel);\n\n    if (Number.isInteger(this.options.maskPattern)) {\n      this.qrCode.maskPattern = this.options.maskPattern;\n    }\n\n    if (Number.isInteger(this.options.version)) {\n      this.qrCode.typeNumber = this.options.version;\n    }\n\n    this.qrCode.addData(this.options.text);\n    this.qrCode.make();\n  }\n\n  AwesomeQR.prototype.draw = function () {\n    var _this = this;\n\n    return new Promise(function (resolve) {\n      return _this._draw().then(resolve);\n    });\n  };\n\n  AwesomeQR.prototype._clear = function () {\n    this.canvasContext.clearRect(0, 0, this.canvas.width, this.canvas.height);\n  };\n\n  AwesomeQR._prepareRoundedCornerClip = function (canvasContext, x, y, w, h, r) {\n    canvasContext.beginPath();\n    canvasContext.moveTo(x, y);\n    canvasContext.arcTo(x + w, y, x + w, y + h, r);\n    canvasContext.arcTo(x + w, y + h, x, y + h, r);\n    canvasContext.arcTo(x, y + h, x, y, r);\n    canvasContext.arcTo(x, y, x + w, y, r);\n    canvasContext.closePath();\n  };\n\n  AwesomeQR._getAverageRGB = function (image) {\n    var blockSize = 5;\n    var defaultRGB = {\n      r: 0,\n      g: 0,\n      b: 0\n    };\n    var width, height;\n    var i = -4;\n    var rgb = {\n      r: 0,\n      g: 0,\n      b: 0\n    };\n    var count = 0;\n    height = image.naturalHeight || image.height;\n    width = image.naturalWidth || image.width;\n    var canvas = canvas_1.createCanvas(width, height);\n    var context = canvas.getContext(\"2d\");\n\n    if (!context) {\n      return defaultRGB;\n    }\n\n    context.drawImage(image, 0, 0);\n    var data;\n\n    try {\n      data = context.getImageData(0, 0, width, height);\n    } catch (e) {\n      return defaultRGB;\n    }\n\n    while ((i += blockSize * 4) < data.data.length) {\n      if (data.data[i] > 200 || data.data[i + 1] > 200 || data.data[i + 2] > 200) continue;\n      ++count;\n      rgb.r += data.data[i];\n      rgb.g += data.data[i + 1];\n      rgb.b += data.data[i + 2];\n    }\n\n    rgb.r = ~~(rgb.r / count);\n    rgb.g = ~~(rgb.g / count);\n    rgb.b = ~~(rgb.b / count);\n    return rgb;\n  };\n\n  AwesomeQR._drawDot = function (canvasContext, centerX, centerY, nSize, xyOffset, dotScale) {\n    if (xyOffset === void 0) {\n      xyOffset = 0;\n    }\n\n    if (dotScale === void 0) {\n      dotScale = 1;\n    }\n\n    canvasContext.fillRect((centerX + xyOffset) * nSize, (centerY + xyOffset) * nSize, dotScale * nSize, dotScale * nSize);\n  };\n\n  AwesomeQR._drawAlignProtector = function (canvasContext, centerX, centerY, nSize) {\n    canvasContext.clearRect((centerX - 2) * nSize, (centerY - 2) * nSize, 5 * nSize, 5 * nSize);\n    canvasContext.fillRect((centerX - 2) * nSize, (centerY - 2) * nSize, 5 * nSize, 5 * nSize);\n  };\n\n  AwesomeQR._drawAlign = function (canvasContext, centerX, centerY, nSize, xyOffset, dotScale, colorDark, hasProtector) {\n    if (xyOffset === void 0) {\n      xyOffset = 0;\n    }\n\n    if (dotScale === void 0) {\n      dotScale = 1;\n    }\n\n    var oldFillStyle = canvasContext.fillStyle;\n    canvasContext.fillStyle = colorDark;\n    new Array(4).fill(0).map(function (_, i) {\n      AwesomeQR._drawDot(canvasContext, centerX - 2 + i, centerY - 2, nSize, xyOffset, dotScale);\n\n      AwesomeQR._drawDot(canvasContext, centerX + 2, centerY - 2 + i, nSize, xyOffset, dotScale);\n\n      AwesomeQR._drawDot(canvasContext, centerX + 2 - i, centerY + 2, nSize, xyOffset, dotScale);\n\n      AwesomeQR._drawDot(canvasContext, centerX - 2, centerY + 2 - i, nSize, xyOffset, dotScale);\n    });\n\n    AwesomeQR._drawDot(canvasContext, centerX, centerY, nSize, xyOffset, dotScale);\n\n    if (!hasProtector) {\n      canvasContext.fillStyle = \"rgba(255, 255, 255, 0.6)\";\n      new Array(2).fill(0).map(function (_, i) {\n        AwesomeQR._drawDot(canvasContext, centerX - 1 + i, centerY - 1, nSize, xyOffset, dotScale);\n\n        AwesomeQR._drawDot(canvasContext, centerX + 1, centerY - 1 + i, nSize, xyOffset, dotScale);\n\n        AwesomeQR._drawDot(canvasContext, centerX + 1 - i, centerY + 1, nSize, xyOffset, dotScale);\n\n        AwesomeQR._drawDot(canvasContext, centerX - 1, centerY + 1 - i, nSize, xyOffset, dotScale);\n      });\n    }\n\n    canvasContext.fillStyle = oldFillStyle;\n  };\n\n  AwesomeQR.prototype._draw = function () {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u;\n\n    return __awaiter(this, void 0, void 0, function () {\n      var nCount, rawSize, rawMargin, margin, rawViewportSize, whiteMargin, backgroundDimming, nSize, viewportSize, size, mainCanvas, mainCanvasContext, backgroundCanvas, backgroundCanvasContext, parsedGIFBackground, gifFrames, gif, r, g, b, count, i, c, backgroundImage, avgRGB, alignmentPatternCenters, dataScale, dataXyOffset, row, col, bIsDark, isBlkPosCtr, isTiming, isProtected, i, nLeft, nTop, inAgnRange, cornerAlignmentCenter, protectorStyle, i, j, agnX, agnY, timingScale, timingXyOffset, i, cornerAlignmentScale, cornerAlignmentXyOffset, alignmentScale, alignmentXyOffset, i, j, agnX, agnY, logoImage, logoScale, logoMargin, logoCornerRadius, logoSize, x, y, oldGlobalCompositeOperation, gifOutput_1, backgroundCanvas_1, backgroundCanvasContext_1, patchCanvas_1, patchCanvasContext_1, patchData_1, u8array, binary, outCanvas, outCanvasContext;\n      return __generator(this, function (_v) {\n        switch (_v.label) {\n          case 0:\n            nCount = (_a = this.qrCode) === null || _a === void 0 ? void 0 : _a.moduleCount;\n            rawSize = this.options.size;\n            rawMargin = this.options.margin;\n\n            if (rawMargin < 0 || rawMargin * 2 >= rawSize) {\n              rawMargin = 0;\n            }\n\n            margin = Math.ceil(rawMargin);\n            rawViewportSize = rawSize - 2 * rawMargin;\n            whiteMargin = this.options.whiteMargin;\n            backgroundDimming = this.options.backgroundDimming;\n            nSize = Math.ceil(rawViewportSize / nCount);\n            viewportSize = nSize * nCount;\n            size = viewportSize + 2 * margin;\n            mainCanvas = canvas_1.createCanvas(size, size);\n            mainCanvasContext = mainCanvas.getContext(\"2d\");\n\n            this._clear(); // Translate to make the top and left margins off the viewport\n\n\n            mainCanvasContext.save();\n            mainCanvasContext.translate(margin, margin);\n            backgroundCanvas = canvas_1.createCanvas(size, size);\n            backgroundCanvasContext = backgroundCanvas.getContext(\"2d\");\n            parsedGIFBackground = null;\n            gifFrames = [];\n            if (!!!this.options.gifBackground) return [3\n            /*break*/\n            , 1];\n            gif = gifuct_js_1.parseGIF(this.options.gifBackground);\n            parsedGIFBackground = gif;\n            gifFrames = gifuct_js_1.decompressFrames(gif, true);\n\n            if (this.options.autoColor) {\n              r = 0, g = 0, b = 0;\n              count = 0;\n\n              for (i = 0; i < gifFrames[0].colorTable.length; i++) {\n                c = gifFrames[0].colorTable[i];\n                if (c[0] > 200 || c[1] > 200 || c[2] > 200) continue;\n                if (c[0] === 0 && c[1] === 0 && c[2] === 0) continue;\n                count++;\n                r += c[0];\n                g += c[1];\n                b += c[2];\n              }\n\n              r = ~~(r / count);\n              g = ~~(g / count);\n              b = ~~(b / count);\n              this.options.colorDark = \"rgb(\" + r + \",\" + g + \",\" + b + \")\";\n            }\n\n            return [3\n            /*break*/\n            , 4];\n\n          case 1:\n            if (!!!this.options.backgroundImage) return [3\n            /*break*/\n            , 3];\n            return [4\n            /*yield*/\n            , canvas_1.loadImage(this.options.backgroundImage)];\n\n          case 2:\n            backgroundImage = _v.sent();\n\n            if (this.options.autoColor) {\n              avgRGB = AwesomeQR._getAverageRGB(backgroundImage);\n              this.options.colorDark = \"rgb(\" + avgRGB.r + \",\" + avgRGB.g + \",\" + avgRGB.b + \")\";\n            }\n\n            backgroundCanvasContext.drawImage(backgroundImage, 0, 0, backgroundImage.width, backgroundImage.height, 0, 0, size, size);\n            backgroundCanvasContext.rect(0, 0, size, size);\n            backgroundCanvasContext.fillStyle = backgroundDimming;\n            backgroundCanvasContext.fill();\n            return [3\n            /*break*/\n            , 4];\n\n          case 3:\n            backgroundCanvasContext.rect(0, 0, size, size);\n            backgroundCanvasContext.fillStyle = this.options.colorLight;\n            backgroundCanvasContext.fill();\n            _v.label = 4;\n\n          case 4:\n            alignmentPatternCenters = qrcode_1.QRUtil.getPatternPosition(this.qrCode.typeNumber);\n            dataScale = ((_c = (_b = this.options.components) === null || _b === void 0 ? void 0 : _b.data) === null || _c === void 0 ? void 0 : _c.scale) || defaultScale;\n            dataXyOffset = (1 - dataScale) * 0.5;\n\n            for (row = 0; row < nCount; row++) {\n              for (col = 0; col < nCount; col++) {\n                bIsDark = this.qrCode.isDark(row, col);\n                isBlkPosCtr = col < 8 && (row < 8 || row >= nCount - 8) || col >= nCount - 8 && row < 8;\n                isTiming = row == 6 && col >= 8 && col <= nCount - 8 || col == 6 && row >= 8 && row <= nCount - 8;\n                isProtected = isBlkPosCtr || isTiming;\n\n                for (i = 1; i < alignmentPatternCenters.length - 1; i++) {\n                  isProtected = isProtected || row >= alignmentPatternCenters[i] - 2 && row <= alignmentPatternCenters[i] + 2 && col >= alignmentPatternCenters[i] - 2 && col <= alignmentPatternCenters[i] + 2;\n                }\n\n                nLeft = col * nSize + (isProtected ? 0 : dataXyOffset * nSize);\n                nTop = row * nSize + (isProtected ? 0 : dataXyOffset * nSize);\n                mainCanvasContext.strokeStyle = bIsDark ? this.options.colorDark : this.options.colorLight;\n                mainCanvasContext.lineWidth = 0.5;\n                mainCanvasContext.fillStyle = bIsDark ? this.options.colorDark : \"rgba(255, 255, 255, 0.6)\";\n\n                if (alignmentPatternCenters.length === 0) {\n                  if (!isProtected) {\n                    mainCanvasContext.fillRect(nLeft, nTop, (isProtected ? isBlkPosCtr ? 1 : 1 : dataScale) * nSize, (isProtected ? isBlkPosCtr ? 1 : 1 : dataScale) * nSize);\n                  }\n                } else {\n                  inAgnRange = col < nCount - 4 && col >= nCount - 4 - 5 && row < nCount - 4 && row >= nCount - 4 - 5;\n\n                  if (!isProtected && !inAgnRange) {\n                    // if align pattern list is empty, then it means that we don't need to leave room for the align patterns\n                    mainCanvasContext.fillRect(nLeft, nTop, (isProtected ? isBlkPosCtr ? 1 : 1 : dataScale) * nSize, (isProtected ? isBlkPosCtr ? 1 : 1 : dataScale) * nSize);\n                  }\n                }\n              }\n            }\n\n            cornerAlignmentCenter = alignmentPatternCenters[alignmentPatternCenters.length - 1];\n            protectorStyle = \"rgba(255, 255, 255, 0.6)\"; // - FINDER PROTECTORS\n\n            mainCanvasContext.fillStyle = protectorStyle;\n            mainCanvasContext.fillRect(0, 0, 8 * nSize, 8 * nSize);\n            mainCanvasContext.fillRect(0, (nCount - 8) * nSize, 8 * nSize, 8 * nSize);\n            mainCanvasContext.fillRect((nCount - 8) * nSize, 0, 8 * nSize, 8 * nSize); // - TIMING PROTECTORS\n\n            if ((_e = (_d = this.options.components) === null || _d === void 0 ? void 0 : _d.timing) === null || _e === void 0 ? void 0 : _e.protectors) {\n              mainCanvasContext.fillRect(8 * nSize, 6 * nSize, (nCount - 8 - 8) * nSize, nSize);\n              mainCanvasContext.fillRect(6 * nSize, 8 * nSize, nSize, (nCount - 8 - 8) * nSize);\n            } // - CORNER ALIGNMENT PROTECTORS\n\n\n            if ((_g = (_f = this.options.components) === null || _f === void 0 ? void 0 : _f.cornerAlignment) === null || _g === void 0 ? void 0 : _g.protectors) {\n              AwesomeQR._drawAlignProtector(mainCanvasContext, cornerAlignmentCenter, cornerAlignmentCenter, nSize);\n            } // - ALIGNMENT PROTECTORS\n\n\n            if ((_j = (_h = this.options.components) === null || _h === void 0 ? void 0 : _h.alignment) === null || _j === void 0 ? void 0 : _j.protectors) {\n              for (i = 0; i < alignmentPatternCenters.length; i++) {\n                for (j = 0; j < alignmentPatternCenters.length; j++) {\n                  agnX = alignmentPatternCenters[j];\n                  agnY = alignmentPatternCenters[i];\n\n                  if (agnX === 6 && (agnY === 6 || agnY === cornerAlignmentCenter)) {\n                    continue;\n                  } else if (agnY === 6 && (agnX === 6 || agnX === cornerAlignmentCenter)) {\n                    continue;\n                  } else if (agnX === cornerAlignmentCenter && agnY === cornerAlignmentCenter) {\n                    continue;\n                  } else {\n                    AwesomeQR._drawAlignProtector(mainCanvasContext, agnX, agnY, nSize);\n                  }\n                }\n              }\n            } // - FINDER\n\n\n            mainCanvasContext.fillStyle = this.options.colorDark;\n            mainCanvasContext.fillRect(0, 0, 7 * nSize, nSize);\n            mainCanvasContext.fillRect((nCount - 7) * nSize, 0, 7 * nSize, nSize);\n            mainCanvasContext.fillRect(0, 6 * nSize, 7 * nSize, nSize);\n            mainCanvasContext.fillRect((nCount - 7) * nSize, 6 * nSize, 7 * nSize, nSize);\n            mainCanvasContext.fillRect(0, (nCount - 7) * nSize, 7 * nSize, nSize);\n            mainCanvasContext.fillRect(0, (nCount - 7 + 6) * nSize, 7 * nSize, nSize);\n            mainCanvasContext.fillRect(0, 0, nSize, 7 * nSize);\n            mainCanvasContext.fillRect(6 * nSize, 0, nSize, 7 * nSize);\n            mainCanvasContext.fillRect((nCount - 7) * nSize, 0, nSize, 7 * nSize);\n            mainCanvasContext.fillRect((nCount - 7 + 6) * nSize, 0, nSize, 7 * nSize);\n            mainCanvasContext.fillRect(0, (nCount - 7) * nSize, nSize, 7 * nSize);\n            mainCanvasContext.fillRect(6 * nSize, (nCount - 7) * nSize, nSize, 7 * nSize);\n            mainCanvasContext.fillRect(2 * nSize, 2 * nSize, 3 * nSize, 3 * nSize);\n            mainCanvasContext.fillRect((nCount - 7 + 2) * nSize, 2 * nSize, 3 * nSize, 3 * nSize);\n            mainCanvasContext.fillRect(2 * nSize, (nCount - 7 + 2) * nSize, 3 * nSize, 3 * nSize);\n            timingScale = ((_l = (_k = this.options.components) === null || _k === void 0 ? void 0 : _k.timing) === null || _l === void 0 ? void 0 : _l.scale) || defaultScale;\n            timingXyOffset = (1 - timingScale) * 0.5;\n\n            for (i = 0; i < nCount - 8; i += 2) {\n              AwesomeQR._drawDot(mainCanvasContext, 8 + i, 6, nSize, timingXyOffset, timingScale);\n\n              AwesomeQR._drawDot(mainCanvasContext, 6, 8 + i, nSize, timingXyOffset, timingScale);\n            }\n\n            cornerAlignmentScale = ((_o = (_m = this.options.components) === null || _m === void 0 ? void 0 : _m.cornerAlignment) === null || _o === void 0 ? void 0 : _o.scale) || defaultScale;\n            cornerAlignmentXyOffset = (1 - cornerAlignmentScale) * 0.5;\n\n            AwesomeQR._drawAlign(mainCanvasContext, cornerAlignmentCenter, cornerAlignmentCenter, nSize, cornerAlignmentXyOffset, cornerAlignmentScale, this.options.colorDark, ((_q = (_p = this.options.components) === null || _p === void 0 ? void 0 : _p.cornerAlignment) === null || _q === void 0 ? void 0 : _q.protectors) || false);\n\n            alignmentScale = ((_s = (_r = this.options.components) === null || _r === void 0 ? void 0 : _r.alignment) === null || _s === void 0 ? void 0 : _s.scale) || defaultScale;\n            alignmentXyOffset = (1 - alignmentScale) * 0.5;\n\n            for (i = 0; i < alignmentPatternCenters.length; i++) {\n              for (j = 0; j < alignmentPatternCenters.length; j++) {\n                agnX = alignmentPatternCenters[j];\n                agnY = alignmentPatternCenters[i];\n\n                if (agnX === 6 && (agnY === 6 || agnY === cornerAlignmentCenter)) {\n                  continue;\n                } else if (agnY === 6 && (agnX === 6 || agnX === cornerAlignmentCenter)) {\n                  continue;\n                } else if (agnX === cornerAlignmentCenter && agnY === cornerAlignmentCenter) {\n                  continue;\n                } else {\n                  AwesomeQR._drawAlign(mainCanvasContext, agnX, agnY, nSize, alignmentXyOffset, alignmentScale, this.options.colorDark, ((_u = (_t = this.options.components) === null || _t === void 0 ? void 0 : _t.alignment) === null || _u === void 0 ? void 0 : _u.protectors) || false);\n                }\n              }\n            } // Fill the margin\n\n\n            if (whiteMargin) {\n              mainCanvasContext.fillStyle = \"#FFFFFF\";\n              mainCanvasContext.fillRect(-margin, -margin, size, margin);\n              mainCanvasContext.fillRect(-margin, viewportSize, size, margin);\n              mainCanvasContext.fillRect(viewportSize, -margin, margin, size);\n              mainCanvasContext.fillRect(-margin, -margin, margin, size);\n            }\n\n            if (!!!this.options.logoImage) return [3\n            /*break*/\n            , 6];\n            return [4\n            /*yield*/\n            , canvas_1.loadImage(this.options.logoImage)];\n\n          case 5:\n            logoImage = _v.sent();\n            logoScale = this.options.logoScale;\n            logoMargin = this.options.logoMargin;\n            logoCornerRadius = this.options.logoCornerRadius;\n\n            if (logoScale <= 0 || logoScale >= 1.0) {\n              logoScale = 0.2;\n            }\n\n            if (logoMargin < 0) {\n              logoMargin = 0;\n            }\n\n            if (logoCornerRadius < 0) {\n              logoCornerRadius = 0;\n            }\n\n            logoSize = viewportSize * logoScale;\n            x = 0.5 * (size - logoSize);\n            y = x; // Restore the canvas\n            // After restoring, the top and left margins should be taken into account\n\n            mainCanvasContext.restore(); // Clean the area that the logo covers (including margins)\n\n            mainCanvasContext.fillStyle = \"#FFFFFF\";\n            mainCanvasContext.save();\n\n            AwesomeQR._prepareRoundedCornerClip(mainCanvasContext, x - logoMargin, y - logoMargin, logoSize + 2 * logoMargin, logoSize + 2 * logoMargin, logoCornerRadius + logoMargin);\n\n            mainCanvasContext.clip();\n            oldGlobalCompositeOperation = mainCanvasContext.globalCompositeOperation;\n            mainCanvasContext.globalCompositeOperation = \"destination-out\";\n            mainCanvasContext.fill();\n            mainCanvasContext.globalCompositeOperation = oldGlobalCompositeOperation;\n            mainCanvasContext.restore(); // Draw logo image\n\n            mainCanvasContext.save();\n\n            AwesomeQR._prepareRoundedCornerClip(mainCanvasContext, x, y, logoSize, logoSize, logoCornerRadius);\n\n            mainCanvasContext.clip();\n            mainCanvasContext.drawImage(logoImage, x, y, logoSize, logoSize);\n            mainCanvasContext.restore(); // Re-translate the canvas to translate the top and left margins into invisible area\n\n            mainCanvasContext.save();\n            mainCanvasContext.translate(margin, margin);\n            _v.label = 6;\n\n          case 6:\n            if (!!parsedGIFBackground) {\n              gifFrames.forEach(function (frame) {\n                if (!gifOutput_1) {\n                  gifOutput_1 = new GIFEncoder_1.default(rawSize, rawSize);\n                  gifOutput_1.setDelay(frame.delay);\n                  gifOutput_1.setRepeat(0);\n                }\n\n                var _a = frame.dims,\n                    width = _a.width,\n                    height = _a.height;\n\n                if (!backgroundCanvas_1) {\n                  backgroundCanvas_1 = canvas_1.createCanvas(width, height);\n                  backgroundCanvasContext_1 = backgroundCanvas_1.getContext(\"2d\");\n                  backgroundCanvasContext_1.rect(0, 0, backgroundCanvas_1.width, backgroundCanvas_1.height);\n                  backgroundCanvasContext_1.fillStyle = \"#ffffff\";\n                  backgroundCanvasContext_1.fill();\n                }\n\n                if (!patchCanvas_1 || !patchData_1 || width !== patchCanvas_1.width || height !== patchCanvas_1.height) {\n                  patchCanvas_1 = canvas_1.createCanvas(width, height);\n                  patchCanvasContext_1 = patchCanvas_1.getContext(\"2d\");\n                  patchData_1 = patchCanvasContext_1.createImageData(width, height);\n                }\n\n                patchData_1.data.set(frame.patch);\n                patchCanvasContext_1.putImageData(patchData_1, 0, 0);\n                backgroundCanvasContext_1.drawImage(patchCanvas_1, frame.dims.left, frame.dims.top);\n                var unscaledCanvas = canvas_1.createCanvas(size, size);\n                var unscaledCanvasContext = unscaledCanvas.getContext(\"2d\");\n                unscaledCanvasContext.drawImage(backgroundCanvas_1, 0, 0, size, size);\n                unscaledCanvasContext.rect(0, 0, size, size);\n                unscaledCanvasContext.fillStyle = backgroundDimming;\n                unscaledCanvasContext.fill();\n                unscaledCanvasContext.drawImage(mainCanvas, 0, 0, size, size); // Scale the final image\n\n                var outCanvas = canvas_1.createCanvas(rawSize, rawSize);\n                var outCanvasContext = outCanvas.getContext(\"2d\");\n                outCanvasContext.drawImage(unscaledCanvas, 0, 0, rawSize, rawSize);\n                gifOutput_1.addFrame(outCanvasContext.getImageData(0, 0, outCanvas.width, outCanvas.height).data);\n              });\n\n              if (!gifOutput_1) {\n                throw new Error(\"No frames.\");\n              }\n\n              gifOutput_1.finish();\n\n              if (isElement(this.canvas)) {\n                u8array = gifOutput_1.stream().toFlattenUint8Array();\n                binary = u8array.reduce(function (bin, u8) {\n                  return bin + String.fromCharCode(u8);\n                }, \"\");\n                return [2\n                /*return*/\n                , Promise.resolve(\"data:image/gif;base64,\" + window.btoa(binary))];\n              }\n\n              return [2\n              /*return*/\n              , Promise.resolve(Buffer.from(gifOutput_1.stream().toFlattenUint8Array()))];\n            } else {\n              // Swap and merge the foreground and the background\n              backgroundCanvasContext.drawImage(mainCanvas, 0, 0, size, size);\n              mainCanvasContext.drawImage(backgroundCanvas, -margin, -margin, size, size);\n              outCanvas = canvas_1.createCanvas(rawSize, rawSize);\n              outCanvasContext = outCanvas.getContext(\"2d\");\n              outCanvasContext.drawImage(mainCanvas, 0, 0, rawSize, rawSize);\n              this.canvas = outCanvas;\n\n              if (isElement(this.canvas)) {\n                return [2\n                /*return*/\n                , Promise.resolve(this.canvas.toDataURL())];\n              }\n\n              return [2\n              /*return*/\n              , Promise.resolve(this.canvas.toBuffer())];\n            }\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  AwesomeQR.CorrectLevel = qrcode_1.QRErrorCorrectLevel;\n  AwesomeQR.defaultComponentOptions = {\n    data: {\n      scale: 1\n    },\n    timing: {\n      scale: 1,\n      protectors: false\n    },\n    alignment: {\n      scale: 1,\n      protectors: false\n    },\n    cornerAlignment: {\n      scale: 1,\n      protectors: true\n    }\n  };\n  AwesomeQR.defaultOptions = {\n    text: \"\",\n    size: 400,\n    margin: 20,\n    colorDark: \"#000000\",\n    colorLight: \"#ffffff\",\n    correctLevel: qrcode_1.QRErrorCorrectLevel.M,\n    backgroundImage: undefined,\n    backgroundDimming: \"rgba(0,0,0,0)\",\n    logoImage: undefined,\n    logoScale: 0.2,\n    logoMargin: 4,\n    logoCornerRadius: 8,\n    whiteMargin: true,\n    components: AwesomeQR.defaultComponentOptions,\n    autoColor: true\n  };\n  return AwesomeQR;\n}();\n\nexports.AwesomeQR = AwesomeQR;\n\nfunction isElement(obj) {\n  try {\n    //Using W3 DOM2 (works for FF, Opera and Chrome)\n    return obj instanceof HTMLElement;\n  } catch (e) {\n    //Browsers not supporting W3 DOM2 don't have HTMLElement and\n    //an exception is thrown and we end up here. Testing some\n    //properties that all elements have (works on IE7)\n    return typeof obj === \"object\" && obj.nodeType === 1 && typeof obj.style === \"object\" && typeof obj.ownerDocument === \"object\";\n  }\n}","map":{"version":3,"sources":["/Users/jithendra/Desktop/Work/hbar-shop/hbar-shop-dashboard/node_modules/awesome-qr/lib/awesome-qr.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","__generator","body","_","label","sent","trys","ops","f","y","g","verb","Symbol","iterator","v","op","TypeError","pop","push","__importDefault","mod","__esModule","defineProperty","exports","AwesomeQR","canvas_1","require","gifuct_js_1","qrcode_1","GIFEncoder_1","defaultScale","options","_options","keys","defaultOptions","forEach","k","enumerable","writable","components","defaultComponentOptions","dotScale","undefined","Error","data","scale","timing","alignment","canvas","createCanvas","size","canvasContext","getContext","qrCode","QRCodeModel","correctLevel","Number","isInteger","maskPattern","version","typeNumber","addData","text","make","draw","_this","_draw","_clear","clearRect","width","height","_prepareRoundedCornerClip","x","w","h","r","beginPath","moveTo","arcTo","closePath","_getAverageRGB","image","blockSize","defaultRGB","b","rgb","count","naturalHeight","naturalWidth","context","drawImage","getImageData","_drawDot","centerX","centerY","nSize","xyOffset","fillRect","_drawAlignProtector","_drawAlign","colorDark","hasProtector","oldFillStyle","fillStyle","Array","fill","map","_a","_b","_c","_d","_e","_f","_g","_h","_j","_k","_l","_m","_o","_p","_q","_r","_s","_t","_u","nCount","rawSize","rawMargin","margin","rawViewportSize","whiteMargin","backgroundDimming","viewportSize","mainCanvas","mainCanvasContext","backgroundCanvas","backgroundCanvasContext","parsedGIFBackground","gifFrames","gif","c","backgroundImage","avgRGB","alignmentPatternCenters","dataScale","dataXyOffset","row","col","bIsDark","isBlkPosCtr","isTiming","isProtected","nLeft","nTop","inAgnRange","cornerAlignmentCenter","protectorStyle","j","agnX","agnY","timingScale","timingXyOffset","cornerAlignmentScale","cornerAlignmentXyOffset","alignmentScale","alignmentXyOffset","logoImage","logoScale","logoMargin","logoCornerRadius","logoSize","oldGlobalCompositeOperation","gifOutput_1","backgroundCanvas_1","backgroundCanvasContext_1","patchCanvas_1","patchCanvasContext_1","patchData_1","u8array","binary","outCanvas","outCanvasContext","_v","moduleCount","Math","ceil","save","translate","gifBackground","parseGIF","decompressFrames","autoColor","colorTable","loadImage","rect","colorLight","QRUtil","getPatternPosition","isDark","strokeStyle","lineWidth","protectors","cornerAlignment","restore","clip","globalCompositeOperation","frame","default","setDelay","delay","setRepeat","dims","createImageData","set","patch","putImageData","left","top","unscaledCanvas","unscaledCanvasContext","addFrame","finish","isElement","stream","toFlattenUint8Array","reduce","bin","u8","String","fromCharCode","window","btoa","Buffer","from","toDataURL","toBuffer","CorrectLevel","QRErrorCorrectLevel","M","obj","HTMLElement","nodeType","style","ownerDocument"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AwesomeQR = void 0;\nvar canvas_1 = require(\"canvas\");\nvar gifuct_js_1 = require(\"./gifuct-js\");\nvar qrcode_1 = require(\"./qrcode\");\nvar GIFEncoder_1 = __importDefault(require(\"./gif.js/GIFEncoder\"));\nvar defaultScale = 0.4;\nvar AwesomeQR = /** @class */ (function () {\n    function AwesomeQR(options) {\n        var _options = Object.assign({}, options);\n        Object.keys(AwesomeQR.defaultOptions).forEach(function (k) {\n            if (!(k in _options)) {\n                Object.defineProperty(_options, k, { value: AwesomeQR.defaultOptions[k], enumerable: true, writable: true });\n            }\n        });\n        if (!_options.components) {\n            _options.components = AwesomeQR.defaultComponentOptions;\n        }\n        else if (typeof _options.components === \"object\") {\n            Object.keys(AwesomeQR.defaultComponentOptions).forEach(function (k) {\n                if (!(k in _options.components)) {\n                    Object.defineProperty(_options.components, k, {\n                        value: AwesomeQR.defaultComponentOptions[k],\n                        enumerable: true,\n                        writable: true,\n                    });\n                }\n                else {\n                    Object.defineProperty(_options.components, k, {\n                        value: __assign(__assign({}, AwesomeQR.defaultComponentOptions[k]), _options.components[k]),\n                        enumerable: true,\n                        writable: true,\n                    });\n                }\n            });\n        }\n        if (_options.dotScale !== null && _options.dotScale !== undefined) {\n            if (_options.dotScale <= 0 || _options.dotScale > 1) {\n                throw new Error(\"dotScale should be in range (0, 1].\");\n            }\n            _options.components.data.scale = _options.dotScale;\n            _options.components.timing.scale = _options.dotScale;\n            _options.components.alignment.scale = _options.dotScale;\n        }\n        this.options = _options;\n        this.canvas = canvas_1.createCanvas(options.size, options.size);\n        this.canvasContext = this.canvas.getContext(\"2d\");\n        this.qrCode = new qrcode_1.QRCodeModel(-1, this.options.correctLevel);\n        if (Number.isInteger(this.options.maskPattern)) {\n            this.qrCode.maskPattern = this.options.maskPattern;\n        }\n        if (Number.isInteger(this.options.version)) {\n            this.qrCode.typeNumber = this.options.version;\n        }\n        this.qrCode.addData(this.options.text);\n        this.qrCode.make();\n    }\n    AwesomeQR.prototype.draw = function () {\n        var _this = this;\n        return new Promise(function (resolve) { return _this._draw().then(resolve); });\n    };\n    AwesomeQR.prototype._clear = function () {\n        this.canvasContext.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    };\n    AwesomeQR._prepareRoundedCornerClip = function (canvasContext, x, y, w, h, r) {\n        canvasContext.beginPath();\n        canvasContext.moveTo(x, y);\n        canvasContext.arcTo(x + w, y, x + w, y + h, r);\n        canvasContext.arcTo(x + w, y + h, x, y + h, r);\n        canvasContext.arcTo(x, y + h, x, y, r);\n        canvasContext.arcTo(x, y, x + w, y, r);\n        canvasContext.closePath();\n    };\n    AwesomeQR._getAverageRGB = function (image) {\n        var blockSize = 5;\n        var defaultRGB = {\n            r: 0,\n            g: 0,\n            b: 0,\n        };\n        var width, height;\n        var i = -4;\n        var rgb = {\n            r: 0,\n            g: 0,\n            b: 0,\n        };\n        var count = 0;\n        height = image.naturalHeight || image.height;\n        width = image.naturalWidth || image.width;\n        var canvas = canvas_1.createCanvas(width, height);\n        var context = canvas.getContext(\"2d\");\n        if (!context) {\n            return defaultRGB;\n        }\n        context.drawImage(image, 0, 0);\n        var data;\n        try {\n            data = context.getImageData(0, 0, width, height);\n        }\n        catch (e) {\n            return defaultRGB;\n        }\n        while ((i += blockSize * 4) < data.data.length) {\n            if (data.data[i] > 200 || data.data[i + 1] > 200 || data.data[i + 2] > 200)\n                continue;\n            ++count;\n            rgb.r += data.data[i];\n            rgb.g += data.data[i + 1];\n            rgb.b += data.data[i + 2];\n        }\n        rgb.r = ~~(rgb.r / count);\n        rgb.g = ~~(rgb.g / count);\n        rgb.b = ~~(rgb.b / count);\n        return rgb;\n    };\n    AwesomeQR._drawDot = function (canvasContext, centerX, centerY, nSize, xyOffset, dotScale) {\n        if (xyOffset === void 0) { xyOffset = 0; }\n        if (dotScale === void 0) { dotScale = 1; }\n        canvasContext.fillRect((centerX + xyOffset) * nSize, (centerY + xyOffset) * nSize, dotScale * nSize, dotScale * nSize);\n    };\n    AwesomeQR._drawAlignProtector = function (canvasContext, centerX, centerY, nSize) {\n        canvasContext.clearRect((centerX - 2) * nSize, (centerY - 2) * nSize, 5 * nSize, 5 * nSize);\n        canvasContext.fillRect((centerX - 2) * nSize, (centerY - 2) * nSize, 5 * nSize, 5 * nSize);\n    };\n    AwesomeQR._drawAlign = function (canvasContext, centerX, centerY, nSize, xyOffset, dotScale, colorDark, hasProtector) {\n        if (xyOffset === void 0) { xyOffset = 0; }\n        if (dotScale === void 0) { dotScale = 1; }\n        var oldFillStyle = canvasContext.fillStyle;\n        canvasContext.fillStyle = colorDark;\n        new Array(4).fill(0).map(function (_, i) {\n            AwesomeQR._drawDot(canvasContext, centerX - 2 + i, centerY - 2, nSize, xyOffset, dotScale);\n            AwesomeQR._drawDot(canvasContext, centerX + 2, centerY - 2 + i, nSize, xyOffset, dotScale);\n            AwesomeQR._drawDot(canvasContext, centerX + 2 - i, centerY + 2, nSize, xyOffset, dotScale);\n            AwesomeQR._drawDot(canvasContext, centerX - 2, centerY + 2 - i, nSize, xyOffset, dotScale);\n        });\n        AwesomeQR._drawDot(canvasContext, centerX, centerY, nSize, xyOffset, dotScale);\n        if (!hasProtector) {\n            canvasContext.fillStyle = \"rgba(255, 255, 255, 0.6)\";\n            new Array(2).fill(0).map(function (_, i) {\n                AwesomeQR._drawDot(canvasContext, centerX - 1 + i, centerY - 1, nSize, xyOffset, dotScale);\n                AwesomeQR._drawDot(canvasContext, centerX + 1, centerY - 1 + i, nSize, xyOffset, dotScale);\n                AwesomeQR._drawDot(canvasContext, centerX + 1 - i, centerY + 1, nSize, xyOffset, dotScale);\n                AwesomeQR._drawDot(canvasContext, centerX - 1, centerY + 1 - i, nSize, xyOffset, dotScale);\n            });\n        }\n        canvasContext.fillStyle = oldFillStyle;\n    };\n    AwesomeQR.prototype._draw = function () {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u;\n        return __awaiter(this, void 0, void 0, function () {\n            var nCount, rawSize, rawMargin, margin, rawViewportSize, whiteMargin, backgroundDimming, nSize, viewportSize, size, mainCanvas, mainCanvasContext, backgroundCanvas, backgroundCanvasContext, parsedGIFBackground, gifFrames, gif, r, g, b, count, i, c, backgroundImage, avgRGB, alignmentPatternCenters, dataScale, dataXyOffset, row, col, bIsDark, isBlkPosCtr, isTiming, isProtected, i, nLeft, nTop, inAgnRange, cornerAlignmentCenter, protectorStyle, i, j, agnX, agnY, timingScale, timingXyOffset, i, cornerAlignmentScale, cornerAlignmentXyOffset, alignmentScale, alignmentXyOffset, i, j, agnX, agnY, logoImage, logoScale, logoMargin, logoCornerRadius, logoSize, x, y, oldGlobalCompositeOperation, gifOutput_1, backgroundCanvas_1, backgroundCanvasContext_1, patchCanvas_1, patchCanvasContext_1, patchData_1, u8array, binary, outCanvas, outCanvasContext;\n            return __generator(this, function (_v) {\n                switch (_v.label) {\n                    case 0:\n                        nCount = (_a = this.qrCode) === null || _a === void 0 ? void 0 : _a.moduleCount;\n                        rawSize = this.options.size;\n                        rawMargin = this.options.margin;\n                        if (rawMargin < 0 || rawMargin * 2 >= rawSize) {\n                            rawMargin = 0;\n                        }\n                        margin = Math.ceil(rawMargin);\n                        rawViewportSize = rawSize - 2 * rawMargin;\n                        whiteMargin = this.options.whiteMargin;\n                        backgroundDimming = this.options.backgroundDimming;\n                        nSize = Math.ceil(rawViewportSize / nCount);\n                        viewportSize = nSize * nCount;\n                        size = viewportSize + 2 * margin;\n                        mainCanvas = canvas_1.createCanvas(size, size);\n                        mainCanvasContext = mainCanvas.getContext(\"2d\");\n                        this._clear();\n                        // Translate to make the top and left margins off the viewport\n                        mainCanvasContext.save();\n                        mainCanvasContext.translate(margin, margin);\n                        backgroundCanvas = canvas_1.createCanvas(size, size);\n                        backgroundCanvasContext = backgroundCanvas.getContext(\"2d\");\n                        parsedGIFBackground = null;\n                        gifFrames = [];\n                        if (!!!this.options.gifBackground) return [3 /*break*/, 1];\n                        gif = gifuct_js_1.parseGIF(this.options.gifBackground);\n                        parsedGIFBackground = gif;\n                        gifFrames = gifuct_js_1.decompressFrames(gif, true);\n                        if (this.options.autoColor) {\n                            r = 0, g = 0, b = 0;\n                            count = 0;\n                            for (i = 0; i < gifFrames[0].colorTable.length; i++) {\n                                c = gifFrames[0].colorTable[i];\n                                if (c[0] > 200 || c[1] > 200 || c[2] > 200)\n                                    continue;\n                                if (c[0] === 0 && c[1] === 0 && c[2] === 0)\n                                    continue;\n                                count++;\n                                r += c[0];\n                                g += c[1];\n                                b += c[2];\n                            }\n                            r = ~~(r / count);\n                            g = ~~(g / count);\n                            b = ~~(b / count);\n                            this.options.colorDark = \"rgb(\" + r + \",\" + g + \",\" + b + \")\";\n                        }\n                        return [3 /*break*/, 4];\n                    case 1:\n                        if (!!!this.options.backgroundImage) return [3 /*break*/, 3];\n                        return [4 /*yield*/, canvas_1.loadImage(this.options.backgroundImage)];\n                    case 2:\n                        backgroundImage = _v.sent();\n                        if (this.options.autoColor) {\n                            avgRGB = AwesomeQR._getAverageRGB(backgroundImage);\n                            this.options.colorDark = \"rgb(\" + avgRGB.r + \",\" + avgRGB.g + \",\" + avgRGB.b + \")\";\n                        }\n                        backgroundCanvasContext.drawImage(backgroundImage, 0, 0, backgroundImage.width, backgroundImage.height, 0, 0, size, size);\n                        backgroundCanvasContext.rect(0, 0, size, size);\n                        backgroundCanvasContext.fillStyle = backgroundDimming;\n                        backgroundCanvasContext.fill();\n                        return [3 /*break*/, 4];\n                    case 3:\n                        backgroundCanvasContext.rect(0, 0, size, size);\n                        backgroundCanvasContext.fillStyle = this.options.colorLight;\n                        backgroundCanvasContext.fill();\n                        _v.label = 4;\n                    case 4:\n                        alignmentPatternCenters = qrcode_1.QRUtil.getPatternPosition(this.qrCode.typeNumber);\n                        dataScale = ((_c = (_b = this.options.components) === null || _b === void 0 ? void 0 : _b.data) === null || _c === void 0 ? void 0 : _c.scale) || defaultScale;\n                        dataXyOffset = (1 - dataScale) * 0.5;\n                        for (row = 0; row < nCount; row++) {\n                            for (col = 0; col < nCount; col++) {\n                                bIsDark = this.qrCode.isDark(row, col);\n                                isBlkPosCtr = (col < 8 && (row < 8 || row >= nCount - 8)) || (col >= nCount - 8 && row < 8);\n                                isTiming = (row == 6 && col >= 8 && col <= nCount - 8) || (col == 6 && row >= 8 && row <= nCount - 8);\n                                isProtected = isBlkPosCtr || isTiming;\n                                for (i = 1; i < alignmentPatternCenters.length - 1; i++) {\n                                    isProtected =\n                                        isProtected ||\n                                            (row >= alignmentPatternCenters[i] - 2 &&\n                                                row <= alignmentPatternCenters[i] + 2 &&\n                                                col >= alignmentPatternCenters[i] - 2 &&\n                                                col <= alignmentPatternCenters[i] + 2);\n                                }\n                                nLeft = col * nSize + (isProtected ? 0 : dataXyOffset * nSize);\n                                nTop = row * nSize + (isProtected ? 0 : dataXyOffset * nSize);\n                                mainCanvasContext.strokeStyle = bIsDark ? this.options.colorDark : this.options.colorLight;\n                                mainCanvasContext.lineWidth = 0.5;\n                                mainCanvasContext.fillStyle = bIsDark ? this.options.colorDark : \"rgba(255, 255, 255, 0.6)\";\n                                if (alignmentPatternCenters.length === 0) {\n                                    if (!isProtected) {\n                                        mainCanvasContext.fillRect(nLeft, nTop, (isProtected ? (isBlkPosCtr ? 1 : 1) : dataScale) * nSize, (isProtected ? (isBlkPosCtr ? 1 : 1) : dataScale) * nSize);\n                                    }\n                                }\n                                else {\n                                    inAgnRange = col < nCount - 4 && col >= nCount - 4 - 5 && row < nCount - 4 && row >= nCount - 4 - 5;\n                                    if (!isProtected && !inAgnRange) {\n                                        // if align pattern list is empty, then it means that we don't need to leave room for the align patterns\n                                        mainCanvasContext.fillRect(nLeft, nTop, (isProtected ? (isBlkPosCtr ? 1 : 1) : dataScale) * nSize, (isProtected ? (isBlkPosCtr ? 1 : 1) : dataScale) * nSize);\n                                    }\n                                }\n                            }\n                        }\n                        cornerAlignmentCenter = alignmentPatternCenters[alignmentPatternCenters.length - 1];\n                        protectorStyle = \"rgba(255, 255, 255, 0.6)\";\n                        // - FINDER PROTECTORS\n                        mainCanvasContext.fillStyle = protectorStyle;\n                        mainCanvasContext.fillRect(0, 0, 8 * nSize, 8 * nSize);\n                        mainCanvasContext.fillRect(0, (nCount - 8) * nSize, 8 * nSize, 8 * nSize);\n                        mainCanvasContext.fillRect((nCount - 8) * nSize, 0, 8 * nSize, 8 * nSize);\n                        // - TIMING PROTECTORS\n                        if ((_e = (_d = this.options.components) === null || _d === void 0 ? void 0 : _d.timing) === null || _e === void 0 ? void 0 : _e.protectors) {\n                            mainCanvasContext.fillRect(8 * nSize, 6 * nSize, (nCount - 8 - 8) * nSize, nSize);\n                            mainCanvasContext.fillRect(6 * nSize, 8 * nSize, nSize, (nCount - 8 - 8) * nSize);\n                        }\n                        // - CORNER ALIGNMENT PROTECTORS\n                        if ((_g = (_f = this.options.components) === null || _f === void 0 ? void 0 : _f.cornerAlignment) === null || _g === void 0 ? void 0 : _g.protectors) {\n                            AwesomeQR._drawAlignProtector(mainCanvasContext, cornerAlignmentCenter, cornerAlignmentCenter, nSize);\n                        }\n                        // - ALIGNMENT PROTECTORS\n                        if ((_j = (_h = this.options.components) === null || _h === void 0 ? void 0 : _h.alignment) === null || _j === void 0 ? void 0 : _j.protectors) {\n                            for (i = 0; i < alignmentPatternCenters.length; i++) {\n                                for (j = 0; j < alignmentPatternCenters.length; j++) {\n                                    agnX = alignmentPatternCenters[j];\n                                    agnY = alignmentPatternCenters[i];\n                                    if (agnX === 6 && (agnY === 6 || agnY === cornerAlignmentCenter)) {\n                                        continue;\n                                    }\n                                    else if (agnY === 6 && (agnX === 6 || agnX === cornerAlignmentCenter)) {\n                                        continue;\n                                    }\n                                    else if (agnX === cornerAlignmentCenter && agnY === cornerAlignmentCenter) {\n                                        continue;\n                                    }\n                                    else {\n                                        AwesomeQR._drawAlignProtector(mainCanvasContext, agnX, agnY, nSize);\n                                    }\n                                }\n                            }\n                        }\n                        // - FINDER\n                        mainCanvasContext.fillStyle = this.options.colorDark;\n                        mainCanvasContext.fillRect(0, 0, 7 * nSize, nSize);\n                        mainCanvasContext.fillRect((nCount - 7) * nSize, 0, 7 * nSize, nSize);\n                        mainCanvasContext.fillRect(0, 6 * nSize, 7 * nSize, nSize);\n                        mainCanvasContext.fillRect((nCount - 7) * nSize, 6 * nSize, 7 * nSize, nSize);\n                        mainCanvasContext.fillRect(0, (nCount - 7) * nSize, 7 * nSize, nSize);\n                        mainCanvasContext.fillRect(0, (nCount - 7 + 6) * nSize, 7 * nSize, nSize);\n                        mainCanvasContext.fillRect(0, 0, nSize, 7 * nSize);\n                        mainCanvasContext.fillRect(6 * nSize, 0, nSize, 7 * nSize);\n                        mainCanvasContext.fillRect((nCount - 7) * nSize, 0, nSize, 7 * nSize);\n                        mainCanvasContext.fillRect((nCount - 7 + 6) * nSize, 0, nSize, 7 * nSize);\n                        mainCanvasContext.fillRect(0, (nCount - 7) * nSize, nSize, 7 * nSize);\n                        mainCanvasContext.fillRect(6 * nSize, (nCount - 7) * nSize, nSize, 7 * nSize);\n                        mainCanvasContext.fillRect(2 * nSize, 2 * nSize, 3 * nSize, 3 * nSize);\n                        mainCanvasContext.fillRect((nCount - 7 + 2) * nSize, 2 * nSize, 3 * nSize, 3 * nSize);\n                        mainCanvasContext.fillRect(2 * nSize, (nCount - 7 + 2) * nSize, 3 * nSize, 3 * nSize);\n                        timingScale = ((_l = (_k = this.options.components) === null || _k === void 0 ? void 0 : _k.timing) === null || _l === void 0 ? void 0 : _l.scale) || defaultScale;\n                        timingXyOffset = (1 - timingScale) * 0.5;\n                        for (i = 0; i < nCount - 8; i += 2) {\n                            AwesomeQR._drawDot(mainCanvasContext, 8 + i, 6, nSize, timingXyOffset, timingScale);\n                            AwesomeQR._drawDot(mainCanvasContext, 6, 8 + i, nSize, timingXyOffset, timingScale);\n                        }\n                        cornerAlignmentScale = ((_o = (_m = this.options.components) === null || _m === void 0 ? void 0 : _m.cornerAlignment) === null || _o === void 0 ? void 0 : _o.scale) || defaultScale;\n                        cornerAlignmentXyOffset = (1 - cornerAlignmentScale) * 0.5;\n                        AwesomeQR._drawAlign(mainCanvasContext, cornerAlignmentCenter, cornerAlignmentCenter, nSize, cornerAlignmentXyOffset, cornerAlignmentScale, this.options.colorDark, ((_q = (_p = this.options.components) === null || _p === void 0 ? void 0 : _p.cornerAlignment) === null || _q === void 0 ? void 0 : _q.protectors) || false);\n                        alignmentScale = ((_s = (_r = this.options.components) === null || _r === void 0 ? void 0 : _r.alignment) === null || _s === void 0 ? void 0 : _s.scale) || defaultScale;\n                        alignmentXyOffset = (1 - alignmentScale) * 0.5;\n                        for (i = 0; i < alignmentPatternCenters.length; i++) {\n                            for (j = 0; j < alignmentPatternCenters.length; j++) {\n                                agnX = alignmentPatternCenters[j];\n                                agnY = alignmentPatternCenters[i];\n                                if (agnX === 6 && (agnY === 6 || agnY === cornerAlignmentCenter)) {\n                                    continue;\n                                }\n                                else if (agnY === 6 && (agnX === 6 || agnX === cornerAlignmentCenter)) {\n                                    continue;\n                                }\n                                else if (agnX === cornerAlignmentCenter && agnY === cornerAlignmentCenter) {\n                                    continue;\n                                }\n                                else {\n                                    AwesomeQR._drawAlign(mainCanvasContext, agnX, agnY, nSize, alignmentXyOffset, alignmentScale, this.options.colorDark, ((_u = (_t = this.options.components) === null || _t === void 0 ? void 0 : _t.alignment) === null || _u === void 0 ? void 0 : _u.protectors) || false);\n                                }\n                            }\n                        }\n                        // Fill the margin\n                        if (whiteMargin) {\n                            mainCanvasContext.fillStyle = \"#FFFFFF\";\n                            mainCanvasContext.fillRect(-margin, -margin, size, margin);\n                            mainCanvasContext.fillRect(-margin, viewportSize, size, margin);\n                            mainCanvasContext.fillRect(viewportSize, -margin, margin, size);\n                            mainCanvasContext.fillRect(-margin, -margin, margin, size);\n                        }\n                        if (!!!this.options.logoImage) return [3 /*break*/, 6];\n                        return [4 /*yield*/, canvas_1.loadImage(this.options.logoImage)];\n                    case 5:\n                        logoImage = _v.sent();\n                        logoScale = this.options.logoScale;\n                        logoMargin = this.options.logoMargin;\n                        logoCornerRadius = this.options.logoCornerRadius;\n                        if (logoScale <= 0 || logoScale >= 1.0) {\n                            logoScale = 0.2;\n                        }\n                        if (logoMargin < 0) {\n                            logoMargin = 0;\n                        }\n                        if (logoCornerRadius < 0) {\n                            logoCornerRadius = 0;\n                        }\n                        logoSize = viewportSize * logoScale;\n                        x = 0.5 * (size - logoSize);\n                        y = x;\n                        // Restore the canvas\n                        // After restoring, the top and left margins should be taken into account\n                        mainCanvasContext.restore();\n                        // Clean the area that the logo covers (including margins)\n                        mainCanvasContext.fillStyle = \"#FFFFFF\";\n                        mainCanvasContext.save();\n                        AwesomeQR._prepareRoundedCornerClip(mainCanvasContext, x - logoMargin, y - logoMargin, logoSize + 2 * logoMargin, logoSize + 2 * logoMargin, logoCornerRadius + logoMargin);\n                        mainCanvasContext.clip();\n                        oldGlobalCompositeOperation = mainCanvasContext.globalCompositeOperation;\n                        mainCanvasContext.globalCompositeOperation = \"destination-out\";\n                        mainCanvasContext.fill();\n                        mainCanvasContext.globalCompositeOperation = oldGlobalCompositeOperation;\n                        mainCanvasContext.restore();\n                        // Draw logo image\n                        mainCanvasContext.save();\n                        AwesomeQR._prepareRoundedCornerClip(mainCanvasContext, x, y, logoSize, logoSize, logoCornerRadius);\n                        mainCanvasContext.clip();\n                        mainCanvasContext.drawImage(logoImage, x, y, logoSize, logoSize);\n                        mainCanvasContext.restore();\n                        // Re-translate the canvas to translate the top and left margins into invisible area\n                        mainCanvasContext.save();\n                        mainCanvasContext.translate(margin, margin);\n                        _v.label = 6;\n                    case 6:\n                        if (!!parsedGIFBackground) {\n                            gifFrames.forEach(function (frame) {\n                                if (!gifOutput_1) {\n                                    gifOutput_1 = new GIFEncoder_1.default(rawSize, rawSize);\n                                    gifOutput_1.setDelay(frame.delay);\n                                    gifOutput_1.setRepeat(0);\n                                }\n                                var _a = frame.dims, width = _a.width, height = _a.height;\n                                if (!backgroundCanvas_1) {\n                                    backgroundCanvas_1 = canvas_1.createCanvas(width, height);\n                                    backgroundCanvasContext_1 = backgroundCanvas_1.getContext(\"2d\");\n                                    backgroundCanvasContext_1.rect(0, 0, backgroundCanvas_1.width, backgroundCanvas_1.height);\n                                    backgroundCanvasContext_1.fillStyle = \"#ffffff\";\n                                    backgroundCanvasContext_1.fill();\n                                }\n                                if (!patchCanvas_1 || !patchData_1 || width !== patchCanvas_1.width || height !== patchCanvas_1.height) {\n                                    patchCanvas_1 = canvas_1.createCanvas(width, height);\n                                    patchCanvasContext_1 = patchCanvas_1.getContext(\"2d\");\n                                    patchData_1 = patchCanvasContext_1.createImageData(width, height);\n                                }\n                                patchData_1.data.set(frame.patch);\n                                patchCanvasContext_1.putImageData(patchData_1, 0, 0);\n                                backgroundCanvasContext_1.drawImage(patchCanvas_1, frame.dims.left, frame.dims.top);\n                                var unscaledCanvas = canvas_1.createCanvas(size, size);\n                                var unscaledCanvasContext = unscaledCanvas.getContext(\"2d\");\n                                unscaledCanvasContext.drawImage(backgroundCanvas_1, 0, 0, size, size);\n                                unscaledCanvasContext.rect(0, 0, size, size);\n                                unscaledCanvasContext.fillStyle = backgroundDimming;\n                                unscaledCanvasContext.fill();\n                                unscaledCanvasContext.drawImage(mainCanvas, 0, 0, size, size);\n                                // Scale the final image\n                                var outCanvas = canvas_1.createCanvas(rawSize, rawSize);\n                                var outCanvasContext = outCanvas.getContext(\"2d\");\n                                outCanvasContext.drawImage(unscaledCanvas, 0, 0, rawSize, rawSize);\n                                gifOutput_1.addFrame(outCanvasContext.getImageData(0, 0, outCanvas.width, outCanvas.height).data);\n                            });\n                            if (!gifOutput_1) {\n                                throw new Error(\"No frames.\");\n                            }\n                            gifOutput_1.finish();\n                            if (isElement(this.canvas)) {\n                                u8array = gifOutput_1.stream().toFlattenUint8Array();\n                                binary = u8array.reduce(function (bin, u8) { return bin + String.fromCharCode(u8); }, \"\");\n                                return [2 /*return*/, Promise.resolve(\"data:image/gif;base64,\" + window.btoa(binary))];\n                            }\n                            return [2 /*return*/, Promise.resolve(Buffer.from(gifOutput_1.stream().toFlattenUint8Array()))];\n                        }\n                        else {\n                            // Swap and merge the foreground and the background\n                            backgroundCanvasContext.drawImage(mainCanvas, 0, 0, size, size);\n                            mainCanvasContext.drawImage(backgroundCanvas, -margin, -margin, size, size);\n                            outCanvas = canvas_1.createCanvas(rawSize, rawSize);\n                            outCanvasContext = outCanvas.getContext(\"2d\");\n                            outCanvasContext.drawImage(mainCanvas, 0, 0, rawSize, rawSize);\n                            this.canvas = outCanvas;\n                            if (isElement(this.canvas)) {\n                                return [2 /*return*/, Promise.resolve(this.canvas.toDataURL())];\n                            }\n                            return [2 /*return*/, Promise.resolve(this.canvas.toBuffer())];\n                        }\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    AwesomeQR.CorrectLevel = qrcode_1.QRErrorCorrectLevel;\n    AwesomeQR.defaultComponentOptions = {\n        data: {\n            scale: 1,\n        },\n        timing: {\n            scale: 1,\n            protectors: false,\n        },\n        alignment: {\n            scale: 1,\n            protectors: false,\n        },\n        cornerAlignment: {\n            scale: 1,\n            protectors: true,\n        },\n    };\n    AwesomeQR.defaultOptions = {\n        text: \"\",\n        size: 400,\n        margin: 20,\n        colorDark: \"#000000\",\n        colorLight: \"#ffffff\",\n        correctLevel: qrcode_1.QRErrorCorrectLevel.M,\n        backgroundImage: undefined,\n        backgroundDimming: \"rgba(0,0,0,0)\",\n        logoImage: undefined,\n        logoScale: 0.2,\n        logoMargin: 4,\n        logoCornerRadius: 8,\n        whiteMargin: true,\n        components: AwesomeQR.defaultComponentOptions,\n        autoColor: true,\n    };\n    return AwesomeQR;\n}());\nexports.AwesomeQR = AwesomeQR;\nfunction isElement(obj) {\n    try {\n        //Using W3 DOM2 (works for FF, Opera and Chrome)\n        return obj instanceof HTMLElement;\n    }\n    catch (e) {\n        //Browsers not supporting W3 DOM2 don't have HTMLElement and\n        //an exception is thrown and we end up here. Testing some\n        //properties that all elements have (works on IE7)\n        return (typeof obj === \"object\" &&\n            obj.nodeType === 1 &&\n            typeof obj.style === \"object\" &&\n            typeof obj.ownerDocument === \"object\");\n    }\n}\n"]},"metadata":{},"sourceType":"script"}