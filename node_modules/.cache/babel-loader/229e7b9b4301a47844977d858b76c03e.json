{"ast":null,"code":"export class RelayMessage {\n  constructor(timestamp, type, data, topic) {\n    this.timestamp = timestamp;\n    this.type = type;\n    this.data = data;\n    this.topic = topic;\n  }\n\n}\nexport var RelayMessageType;\n\n(function (RelayMessageType) {\n  RelayMessageType[\"Transaction\"] = \"Transaction\";\n  RelayMessageType[\"TransactionResponse\"] = \"TransactionResponse\";\n  RelayMessageType[\"ApprovePairing\"] = \"ApprovePairing\";\n  RelayMessageType[\"RejectPairing\"] = \"RejectPairing\";\n  RelayMessageType[\"Acknowledge\"] = \"Acknowledge\";\n  RelayMessageType[\"AdditionalAccountRequest\"] = \"AdditionalAccountRequest\";\n  RelayMessageType[\"AdditionalAccountResponse\"] = \"AdditionalAccountResponse\";\n  RelayMessageType[\"AuthenticationRequest\"] = \"AuthenticationRequest\";\n  RelayMessageType[\"AuthenticationResponse\"] = \"AuthenticationResponse\";\n  RelayMessageType[\"SigningRequest\"] = \"SigningRequest\";\n  RelayMessageType[\"SigningResponse\"] = \"SigningResponse\";\n})(RelayMessageType || (RelayMessageType = {})); // export enum TransactionType {\n//     contractCall=\"contractCall\",\n//     contractCreateInstance=\"contractCreateInstance\",\n//     contractUpdateInstance=\"contractUpdateInstance\",\n//     contractDeleteInstance=\"contractDeleteInstance\",\n//     cryptoCreateAccount=\"cryptoCreateAccount\",\n//     cryptoDelete=\"cryptoDelete\",\n//     cryptoTransfer=\"cryptoTransfer\",\n//     cryptoUpdateAccount=\"cryptoUpdateAccount\",\n//     fileAppend=\"fileAppend\",\n//     fileCreate=\"fileCreate\",\n//     fileDelete=\"fileDelete\",\n//     fileUpdate=\"fileUpdate\",\n//     systemDelete=\"systemDelete\",\n//     systemUndelete=\"systemUndelete\",\n//     freeze=\"freeze\",\n//     consensusCreateTopic=\"consensusCreateTopic\",\n//     consensusUpdateTopic=\"consensusUpdateTopic\",\n//     consensusDeleteTopic=\"consensusDeleteTopic\",\n//     consensusSubmitMessage=\"consensusSubmitMessage\",\n//     tokenCreation=\"tokenCreation\",\n//     tokenFreeze=\"tokenFreeze\",\n//     tokenUnfreeze=\"tokenUnfreeze\",\n//     tokenGrantKyc=\"tokenGrantKyc\",\n//     tokenRevokeKyc=\"tokenRevokeKyc\",\n//     tokenDeletion=\"tokenDeletion\",\n//     tokenUpdate=\"tokenUpdate\",\n//     tokenMint=\"tokenMint\",\n//     tokenBurn=\"tokenBurn\",\n//     tokenWipe=\"tokenWipe\",\n//     tokenAssociate=\"tokenAssociate\",\n//     tokenDissociate=\"tokenDissociate\",\n//     token_pause=\"token_pause\",\n//     token_unpause=\"token_unpause\",\n//     scheduleDelete=\"scheduleDelete\",\n// }","map":{"version":3,"mappings":"AAEA,OAAM,MAAOA,YAAP,CAAmB;AAQrBC,cAAYC,SAAZ,EAA+BC,IAA/B,EAAuDC,IAAvD,EAAkEC,KAAlE,EAA+E;AAC3E,SAAKH,SAAL,GAAiBA,SAAjB;AACA,SAAKC,IAAL,GAAYA,IAAZ;AACA,SAAKC,IAAL,GAAYA,IAAZ;AACA,SAAKC,KAAL,GAAaA,KAAb;AACH;;AAboB;AAgBzB,WAAYC,gBAAZ;;AAAA,WAAYA,gBAAZ,EAA4B;AACxBA;AACAA;AACAA;AACAA;AACAA;AACAA;AACAA;AACAA;AACAA;AACAA;AACAA;AACH,CAZD,EAAYA,gBAAgB,KAAhBA,gBAAgB,MAA5B,E,CA6GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","names":["RelayMessage","constructor","timestamp","type","data","topic","RelayMessageType"],"sourceRoot":"","sources":["../../../src/message/relayMessage.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}