{"ast":null,"code":"import create from \"zustand\";\nimport axios from \"axios\";\nimport produce from \"immer\";\nimport { INTERNAL_SERVER_ERROR } from \"../../constants/strings\";\nimport Parse from \"parse\";\nconst INITIAL_WALLET_STATE = {\n  get: {\n    loading: false,\n    success: {\n      ok: false,\n      data: []\n    },\n    failure: {\n      error: false,\n      message: \"\"\n    }\n  },\n  post: {\n    loading: false,\n    success: {\n      ok: false,\n      data: null\n    },\n    failure: {\n      error: false,\n      message: \"\"\n    }\n  }\n};\nconst useWalletStore = create((set, address) => ({\n  walletState: INITIAL_WALLET_STATE,\n  getWalletAddress: async _ref => {\n    let {\n      shop,\n      address\n    } = _ref;\n    set(produce(state => ({ ...state,\n      walletState: { ...state.walletState,\n        post: { ...INITIAL_WALLET_STATE.post,\n          loading: true\n        }\n      }\n    })));\n\n    try {\n      //   const { data } = await axios.post(\n      //     `${process.env.REACT_APP_API_SHOPLOOKS_SERVER_URL}/api/post_wallet_address`,\n      //     { \n      //         shop, \n      //         address,\n      //     }\n      //   );\n      const myObj = new Parse.Object('WalletDeatils');\n      myObj.set('shop', shop);\n      myObj.set('walletAddress', address);\n      await myObj.save();\n\n      if (myObj) {\n        console.log('Ok');\n        set(produce(state => ({ ...state,\n          walletState: { ...state.walletState,\n            post: { ...INITIAL_WALLET_STATE.post,\n              loading: false,\n              success: {\n                ok: true\n              }\n            }\n          }\n        })));\n      }\n    } catch (error) {\n      console.log(error);\n      set(produce(state => ({ ...state,\n        walletState: { ...state.walletState,\n          post: { ...INITIAL_WALLET_STATE.post,\n            loading: false,\n            success: {\n              ok: false\n            },\n            failure: {\n              error: false,\n              message: \"Please Verify the Wallet Address\"\n            }\n          }\n        }\n      })));\n    }\n  }\n}));\nexport default useWalletStore;","map":{"version":3,"sources":["/Users/jithendra/Desktop/Work/meta-soft-xrp/xrp-shopify-coupon-client/src/store/wallet/index.js"],"names":["create","axios","produce","INTERNAL_SERVER_ERROR","Parse","INITIAL_WALLET_STATE","get","loading","success","ok","data","failure","error","message","post","useWalletStore","set","address","walletState","getWalletAddress","shop","state","myObj","Object","save","console","log"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,SAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,OAApB;AACA,SAASC,qBAAT,QAAsC,yBAAtC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,oBAAoB,GAAG;AAC3BC,EAAAA,GAAG,EAAE;AACHC,IAAAA,OAAO,EAAE,KADN;AAEHC,IAAAA,OAAO,EAAE;AACPC,MAAAA,EAAE,EAAE,KADG;AAEPC,MAAAA,IAAI,EAAE;AAFC,KAFN;AAMHC,IAAAA,OAAO,EAAE;AACPC,MAAAA,KAAK,EAAE,KADA;AAEPC,MAAAA,OAAO,EAAE;AAFF;AANN,GADsB;AAY3BC,EAAAA,IAAI,EAAE;AACJP,IAAAA,OAAO,EAAE,KADL;AAEJC,IAAAA,OAAO,EAAE;AACPC,MAAAA,EAAE,EAAE,KADG;AAEPC,MAAAA,IAAI,EAAE;AAFC,KAFL;AAMJC,IAAAA,OAAO,EAAE;AACPC,MAAAA,KAAK,EAAE,KADA;AAEPC,MAAAA,OAAO,EAAE;AAFF;AANL;AAZqB,CAA7B;AAyBA,MAAME,cAAc,GAAGf,MAAM,CAAC,CAACgB,GAAD,EAAMC,OAAN,MAAmB;AAC/CC,EAAAA,WAAW,EAAEb,oBADkC;AAE/Cc,EAAAA,gBAAgB,EAAE,cAA6B;AAAA,QAAtB;AAAEC,MAAAA,IAAF;AAAQH,MAAAA;AAAR,KAAsB;AAC7CD,IAAAA,GAAG,CACDd,OAAO,CAAEmB,KAAD,KAAY,EAClB,GAAGA,KADe;AAElBH,MAAAA,WAAW,EAAE,EACX,GAAGG,KAAK,CAACH,WADE;AAEXJ,QAAAA,IAAI,EAAE,EACJ,GAAGT,oBAAoB,CAACS,IADpB;AAEJP,UAAAA,OAAO,EAAE;AAFL;AAFK;AAFK,KAAZ,CAAD,CADN,CAAH;;AAYA,QAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,YAAMe,KAAK,GAAG,IAAIlB,KAAK,CAACmB,MAAV,CAAiB,eAAjB,CAAd;AACAD,MAAAA,KAAK,CAACN,GAAN,CAAU,MAAV,EAAkBI,IAAlB;AACAE,MAAAA,KAAK,CAACN,GAAN,CAAU,eAAV,EAA2BC,OAA3B;AACA,YAAMK,KAAK,CAACE,IAAN,EAAN;;AAEA,UAAGF,KAAH,EAAS;AACLG,QAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACAV,QAAAA,GAAG,CACCd,OAAO,CAAEmB,KAAD,KAAY,EAChB,GAAGA,KADa;AAEhBH,UAAAA,WAAW,EAAC,EACR,GAAGG,KAAK,CAACH,WADD;AAERJ,YAAAA,IAAI,EAAC,EACD,GAAGT,oBAAoB,CAACS,IADvB;AAEDP,cAAAA,OAAO,EAAE,KAFR;AAGDC,cAAAA,OAAO,EAAE;AACLC,gBAAAA,EAAE,EAAE;AADC;AAHR;AAFG;AAFI,SAAZ,CAAD,CADR,CAAH;AAeH;AACA,KAhCD,CAgCE,OAAOG,KAAP,EAAc;AACda,MAAAA,OAAO,CAACC,GAAR,CAAYd,KAAZ;AACAI,MAAAA,GAAG,CACDd,OAAO,CAAEmB,KAAD,KAAY,EAChB,GAAGA,KADa;AAEhBH,QAAAA,WAAW,EAAE,EACT,GAAGG,KAAK,CAACH,WADA;AAETJ,UAAAA,IAAI,EAAC,EACD,GAAGT,oBAAoB,CAACS,IADvB;AAEDP,YAAAA,OAAO,EAAC,KAFP;AAGDC,YAAAA,OAAO,EAAE;AACLC,cAAAA,EAAE,EAAE;AADC,aAHR;AAMDE,YAAAA,OAAO,EAAE;AACLC,cAAAA,KAAK,EAAE,KADF;AAELC,cAAAA,OAAO,EAAE;AAFJ;AANR;AAFI;AAFG,OAAZ,CAAD,CADN,CAAH;AAmBD;AACF;AArE8C,CAAnB,CAAD,CAA7B;AAwEA,eAAeE,cAAf","sourcesContent":["import create from \"zustand\";\nimport axios from \"axios\";\nimport produce from \"immer\";\nimport { INTERNAL_SERVER_ERROR } from \"../../constants/strings\";\nimport Parse from \"parse\";\n\nconst INITIAL_WALLET_STATE = {\n  get: {\n    loading: false,\n    success: {\n      ok: false,\n      data: [],\n    },\n    failure: {\n      error: false,\n      message: \"\",\n    },\n  },\n  post: {\n    loading: false,\n    success: {\n      ok: false,\n      data: null,\n    },\n    failure: {\n      error: false,\n      message: \"\",\n    },\n  },\n};\n\nconst useWalletStore = create((set, address) => ({\n  walletState: INITIAL_WALLET_STATE,\n  getWalletAddress: async ({ shop, address }) => {\n    set(\n      produce((state) => ({\n        ...state,\n        walletState: {\n          ...state.walletState,\n          post: {\n            ...INITIAL_WALLET_STATE.post,\n            loading: true,\n          },\n        },\n      }))\n    );\n    try {\n    //   const { data } = await axios.post(\n    //     `${process.env.REACT_APP_API_SHOPLOOKS_SERVER_URL}/api/post_wallet_address`,\n    //     { \n    //         shop, \n    //         address,\n    //     }\n    //   );\n\n    const myObj = new Parse.Object('WalletDeatils');\n    myObj.set('shop', shop);\n    myObj.set('walletAddress', address)   \n    await myObj.save();\n\n    if(myObj){\n        console.log('Ok');\n        set(\n            produce((state) => ({\n                ...state,\n                walletState:{\n                    ...state.walletState,\n                    post:{\n                        ...INITIAL_WALLET_STATE.post,\n                        loading: false,\n                        success: {\n                            ok: true\n                        }\n                    }\n                }\n            }))\n        )\n    }\n    } catch (error) {\n      console.log(error);\n      set(\n        produce((state) => ({\n            ...state,\n            walletState: {\n                ...state.walletState,\n                post:{\n                    ...INITIAL_WALLET_STATE.post,\n                    loading:false,\n                    success: {\n                        ok: false,\n                    },\n                    failure: {\n                        error: false,\n                        message: \"Please Verify the Wallet Address\"\n                    }\n                }\n            }\n        }))\n      )\n    }\n  },\n}));\n\nexport default useWalletStore;\n"]},"metadata":{},"sourceType":"module"}