{"ast":null,"code":"var _jsxFileName = \"/Users/jithendra/Desktop/Work/meta-soft-xrp/xrp-shopify-coupon-client/src/components/carousel/index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Box, IconButton, useBreakpointValue, Stack, Heading, Text, Container } from \"@chakra-ui/react\"; // Here we have used react-icons package for the icons\n\nimport { BiLeftArrowAlt, BiRightArrowAlt } from \"react-icons/bi\"; // And react-slick as our Carousel Lib\n\nimport Slider from \"react-slick\"; // Settings for the slider\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst settings = {\n  dots: true,\n  arrows: false,\n  fade: true,\n  infinite: true,\n  autoplay: true,\n  speed: 500,\n  autoplaySpeed: 5000,\n  slidesToShow: 1,\n  slidesToScroll: 1\n};\nexport default function CaptionCarousel(props) {\n  _s();\n\n  // As we have used custom buttons, we need a reference variable to\n  // change the state\n  const [slider, setSlider] = React.useState(null); // These are the breakpoints which changes the position of the\n  // buttons as the screen size changes\n\n  const top = useBreakpointValue({\n    base: \"90%\",\n    md: \"50%\"\n  });\n  const side = useBreakpointValue({\n    base: \"30%\",\n    md: \"40px\"\n  });\n  const {\n    medias = []\n  } = props; // This list contains all the data for carousels\n  // This can be static or loaded from a server\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    position: \"relative\",\n    height: props.height || \"200px\",\n    width: props.width || \"200px\",\n    overflow: \"hidden\",\n    borderWidth: \"1px\",\n    rounded: \"lg\",\n    shadow: \"lg\",\n    margin: \"0 auto\",\n    children: [/*#__PURE__*/_jsxDEV(IconButton, {\n      \"aria-label\": \"left-arrow\",\n      variant: \"ghost\",\n      position: \"absolute\",\n      left: side,\n      top: top,\n      transform: \"translate(-50%, -50%)\",\n      zIndex: 2,\n      onClick: () => slider === null || slider === void 0 ? void 0 : slider.slickPrev(),\n      children: /*#__PURE__*/_jsxDEV(BiLeftArrowAlt, {\n        size: \"40px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      \"aria-label\": \"right-arrow\",\n      variant: \"ghost\",\n      position: \"absolute\",\n      right: side,\n      top: top,\n      transform: \"translate(50%, -50%)\",\n      zIndex: 2,\n      onClick: () => slider === null || slider === void 0 ? void 0 : slider.slickNext(),\n      children: /*#__PURE__*/_jsxDEV(BiRightArrowAlt, {\n        size: \"40px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Slider, {\n      autoplay: false,\n      ...settings,\n      ref: slider => setSlider(slider),\n      children: medias.map((media, index) => /*#__PURE__*/_jsxDEV(Box, {\n        // height={'6xl'}\n        position: \"relative\",\n        backgroundPosition: \"center\",\n        backgroundRepeat: \"no-repeat\",\n        backgroundSize: \"cover\",\n        backgroundImage: `url(${media.url ? media.url : media.src})`,\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          padding: \"0\",\n          size: \"container.lg\",\n          height: props.height || \"400px\",\n          position: \"relative\",\n          children: /*#__PURE__*/_jsxDEV(Stack, {\n            padding: \"0\",\n            w: \"full\",\n            position: \"absolute\",\n            bottom: \"0\",\n            background: \"#00000094\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CaptionCarousel, \"z1sZ+6IwMWAgzEfVm3USjtHBFbY=\", false, function () {\n  return [useBreakpointValue, useBreakpointValue];\n});\n\n_c = CaptionCarousel;\n\nvar _c;\n\n$RefreshReg$(_c, \"CaptionCarousel\");","map":{"version":3,"sources":["/Users/jithendra/Desktop/Work/meta-soft-xrp/xrp-shopify-coupon-client/src/components/carousel/index.js"],"names":["React","Box","IconButton","useBreakpointValue","Stack","Heading","Text","Container","BiLeftArrowAlt","BiRightArrowAlt","Slider","settings","dots","arrows","fade","infinite","autoplay","speed","autoplaySpeed","slidesToShow","slidesToScroll","CaptionCarousel","props","slider","setSlider","useState","top","base","md","side","medias","height","width","slickPrev","slickNext","map","media","index","url","src"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  Box,\n  IconButton,\n  useBreakpointValue,\n  Stack,\n  Heading,\n  Text,\n  Container,\n} from \"@chakra-ui/react\";\n// Here we have used react-icons package for the icons\nimport { BiLeftArrowAlt, BiRightArrowAlt } from \"react-icons/bi\";\n// And react-slick as our Carousel Lib\nimport Slider from \"react-slick\";\n\n// Settings for the slider\nconst settings = {\n  dots: true,\n  arrows: false,\n  fade: true,\n  infinite: true,\n  autoplay: true,\n  speed: 500,\n  autoplaySpeed: 5000,\n  slidesToShow: 1,\n  slidesToScroll: 1,\n};\n\nexport default function CaptionCarousel(props) {\n  // As we have used custom buttons, we need a reference variable to\n  // change the state\n  const [slider, setSlider] = React.useState(null);\n\n  // These are the breakpoints which changes the position of the\n  // buttons as the screen size changes\n  const top = useBreakpointValue({ base: \"90%\", md: \"50%\" });\n  const side = useBreakpointValue({ base: \"30%\", md: \"40px\" });\n\n  const { medias = [] } = props;\n  // This list contains all the data for carousels\n  // This can be static or loaded from a server\n  return (\n    <Box\n      position={\"relative\"}\n      height={props.height || \"200px\"}\n      width={props.width || \"200px\"}\n      overflow={\"hidden\"}\n      borderWidth=\"1px\"\n      rounded=\"lg\"\n      shadow=\"lg\"\n      margin=\"0 auto\"\n    >\n      {/* Left Icon */}\n      <IconButton\n        aria-label=\"left-arrow\"\n        variant=\"ghost\"\n        position=\"absolute\"\n        left={side}\n        top={top}\n        transform={\"translate(-50%, -50%)\"}\n        zIndex={2}\n        onClick={() => slider?.slickPrev()}\n      >\n        <BiLeftArrowAlt size=\"40px\" />\n      </IconButton>\n      {/* Right Icon */}\n      <IconButton\n        aria-label=\"right-arrow\"\n        variant=\"ghost\"\n        position=\"absolute\"\n        right={side}\n        top={top}\n        transform={\"translate(50%, -50%)\"}\n        zIndex={2}\n        onClick={() => slider?.slickNext()}\n      >\n        <BiRightArrowAlt size=\"40px\" />\n      </IconButton>\n      {/* Slider */}\n      <Slider\n        autoplay={false}\n        {...settings}\n        ref={(slider) => setSlider(slider)}\n      >\n        {medias.map((media, index) => (\n          <Box\n            key={index}\n            // height={'6xl'}\n            position=\"relative\"\n            backgroundPosition=\"center\"\n            backgroundRepeat=\"no-repeat\"\n            backgroundSize=\"cover\"\n            backgroundImage={`url(${media.url ? media.url : media.src})`}\n          >\n            {/* This is the block you need to change, to customize the caption */}\n            <Container\n              padding=\"0\"\n              size=\"container.lg\"\n              height={props.height || \"400px\"}\n              position=\"relative\"\n            >\n              <Stack\n                padding=\"0\"\n                w={\"full\"}\n                position=\"absolute\"\n                bottom=\"0\"\n                background=\"#00000094\"\n              >\n                {/* <Heading padding=\"1\" textAlign=\"center\" color=\"white\" fontSize={{ base: 'md', md: 'xl', lg: '2xl' }}>\n                  {card.title}\n                </Heading>\n                <Text margin=\"0\" padding=\"0\" fontSize={{ base: 'md', lg: 'lg' }} color=\"GrayText\">\n                  {card.text}\n                </Text> */}\n              </Stack>\n            </Container>\n          </Box>\n        ))}\n      </Slider>\n    </Box>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}