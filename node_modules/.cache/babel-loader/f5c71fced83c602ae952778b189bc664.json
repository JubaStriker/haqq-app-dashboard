{"ast":null,"code":"import create from \"zustand\";\nimport produce from \"immer\";\nimport Parse from \"parse\";\nimport { INTERNAL_SERVER_ERROR } from \"../../constants/strings\";\nimport axios from \"axios\";\nconst INITIAL_PRODUCTS_STATE = {\n  get: {\n    loading: false,\n    success: {\n      ok: false,\n      data: []\n    },\n    failure: {\n      error: false,\n      message: \"\"\n    }\n  }\n};\nconst useProductsStore = create((set, get) => ({\n  products: INITIAL_PRODUCTS_STATE,\n  getProducts: async function () {\n    let {\n      products = [],\n      shop\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    set(produce(state => ({ ...state,\n      products: { ...state.products,\n        get: { ...INITIAL_PRODUCTS_STATE.get,\n          loading: true\n        }\n      }\n    })));\n\n    try {\n      const ids = products.map(p => {\n        if (typeof p === \"string\") {\n          var _p$split;\n\n          return (_p$split = p.split('/')) === null || _p$split === void 0 ? void 0 : _p$split.pop();\n        }\n\n        return undefined;\n      }).filter(Boolean);\n      const {\n        data\n      } = await axios.get(`${process.env.REACT_APP_API_SHOPLOOKS_SERVER_URL}/api/get_products?shop=${shop}&ids=${ids}`);\n      set(produce(state => ({ ...state,\n        products: { ...state.products,\n          get: { ...INITIAL_PRODUCTS_STATE.get,\n            success: {\n              ok: true,\n              data\n            }\n          }\n        }\n      })));\n      return data;\n    } catch (e) {\n      set(produce(state => ({ ...state,\n        products: { ...state.products,\n          get: { ...INITIAL_PRODUCTS_STATE.get,\n            failure: {\n              error: true,\n              message: e.message || INTERNAL_SERVER_ERROR\n            }\n          }\n        }\n      })));\n    }\n  }\n}));\nexport default useProductsStore;","map":{"version":3,"sources":["/Users/jithendra/Desktop/Work/meta-soft-xrp/xrp-shopify-coupon-client/src/store/products/index.js"],"names":["create","produce","Parse","INTERNAL_SERVER_ERROR","axios","INITIAL_PRODUCTS_STATE","get","loading","success","ok","data","failure","error","message","useProductsStore","set","products","getProducts","shop","state","ids","map","p","split","pop","undefined","filter","Boolean","process","env","REACT_APP_API_SHOPLOOKS_SERVER_URL","e"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,SAAnB;AACA,OAAOC,OAAP,MAAoB,OAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,qBAAT,QAAsC,yBAAtC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,sBAAsB,GAAG;AAC9BC,EAAAA,GAAG,EAAE;AACJC,IAAAA,OAAO,EAAE,KADL;AAEJC,IAAAA,OAAO,EAAE;AACRC,MAAAA,EAAE,EAAE,KADI;AAERC,MAAAA,IAAI,EAAE;AAFE,KAFL;AAMJC,IAAAA,OAAO,EAAE;AACRC,MAAAA,KAAK,EAAE,KADC;AAERC,MAAAA,OAAO,EAAE;AAFD;AANL;AADyB,CAA/B;AAcA,MAAMC,gBAAgB,GAAGd,MAAM,CAAC,CAACe,GAAD,EAAMT,GAAN,MAAe;AAC9CU,EAAAA,QAAQ,EAAEX,sBADoC;AAE9CY,EAAAA,WAAW,EAAE,kBAAuC;AAAA,QAAjC;AAAED,MAAAA,QAAQ,GAAG,EAAb;AAAiBE,MAAAA;AAAjB,KAAiC,uEAAP,EAAO;AACnDH,IAAAA,GAAG,CAACd,OAAO,CAACkB,KAAK,KAAK,EACrB,GAAGA,KADkB;AAErBH,MAAAA,QAAQ,EAAE,EACT,GAAGG,KAAK,CAACH,QADA;AAETV,QAAAA,GAAG,EAAE,EACJ,GAAGD,sBAAsB,CAACC,GADtB;AAEJC,UAAAA,OAAO,EAAE;AAFL;AAFI;AAFW,KAAL,CAAN,CAAR,CAAH;;AAWA,QAAI;AACH,YAAMa,GAAG,GAAGJ,QAAQ,CAACK,GAAT,CAAaC,CAAC,IAAI;AAC7B,YAAI,OAAOA,CAAP,KAAa,QAAjB,EAA2B;AAAA;;AAC1B,6BAAOA,CAAC,CAACC,KAAF,CAAQ,GAAR,CAAP,6CAAO,SAAcC,GAAd,EAAP;AACA;;AACD,eAAOC,SAAP;AACA,OALW,EAKTC,MALS,CAKFC,OALE,CAAZ;AAOA,YAAM;AAAEjB,QAAAA;AAAF,UAAW,MAAMN,KAAK,CAACE,GAAN,CACrB,GAAEsB,OAAO,CAACC,GAAR,CAAYC,kCAAmC,0BAAyBZ,IAAK,QAAOE,GAAI,EADrE,CAAvB;AAGAL,MAAAA,GAAG,CAACd,OAAO,CAACkB,KAAK,KAAK,EACrB,GAAGA,KADkB;AAErBH,QAAAA,QAAQ,EAAE,EACT,GAAGG,KAAK,CAACH,QADA;AAETV,UAAAA,GAAG,EAAE,EACJ,GAAGD,sBAAsB,CAACC,GADtB;AAEJE,YAAAA,OAAO,EAAE;AACRC,cAAAA,EAAE,EAAE,IADI;AAERC,cAAAA;AAFQ;AAFL;AAFI;AAFW,OAAL,CAAN,CAAR,CAAH;AAcA,aAAOA,IAAP;AAEA,KA3BD,CA2BE,OAAOqB,CAAP,EAAU;AACXhB,MAAAA,GAAG,CAACd,OAAO,CAACkB,KAAK,KAAK,EACrB,GAAGA,KADkB;AAErBH,QAAAA,QAAQ,EAAE,EACT,GAAGG,KAAK,CAACH,QADA;AAETV,UAAAA,GAAG,EAAE,EACJ,GAAGD,sBAAsB,CAACC,GADtB;AAEJK,YAAAA,OAAO,EAAE;AACRC,cAAAA,KAAK,EAAE,IADC;AAERC,cAAAA,OAAO,EAAEkB,CAAC,CAAClB,OAAF,IAAaV;AAFd;AAFL;AAFI;AAFW,OAAL,CAAN,CAAR,CAAH;AAaA;AACD;AAxD6C,CAAf,CAAD,CAA/B;AA2DA,eAAeW,gBAAf","sourcesContent":["import create from \"zustand\";\nimport produce from \"immer\";\nimport Parse from \"parse\";\nimport { INTERNAL_SERVER_ERROR } from \"../../constants/strings\";\nimport axios from \"axios\";\n\nconst INITIAL_PRODUCTS_STATE = {\n\tget: {\n\t\tloading: false,\n\t\tsuccess: {\n\t\t\tok: false,\n\t\t\tdata: [],\n\t\t},\n\t\tfailure: {\n\t\t\terror: false,\n\t\t\tmessage: \"\",\n\t\t}\n\t},\n};\n\nconst useProductsStore = create((set, get) => ({\n\tproducts: INITIAL_PRODUCTS_STATE,\n\tgetProducts: async({ products = [], shop } = {}) => {\n\t\tset(produce(state => ({\n\t\t\t...state,\n\t\t\tproducts: {\n\t\t\t\t...state.products,\n\t\t\t\tget: {\n\t\t\t\t\t...INITIAL_PRODUCTS_STATE.get,\n\t\t\t\t\tloading: true,\n\t\t\t\t}\n\t\t\t}\n\t\t})))\n\n\t\ttry {\n\t\t\tconst ids = products.map(p => {\n\t\t\t\tif (typeof p === \"string\") {\n\t\t\t\t\treturn p.split('/')?.pop()\n\t\t\t\t}\n\t\t\t\treturn undefined\n\t\t\t}).filter(Boolean);\n\n\t\t\tconst { data } = await axios.get(\n\t\t\t\t`${process.env.REACT_APP_API_SHOPLOOKS_SERVER_URL}/api/get_products?shop=${shop}&ids=${ids}`\n\t\t\t);\n\t\t\tset(produce(state => ({\n\t\t\t\t...state,\n\t\t\t\tproducts: {\n\t\t\t\t\t...state.products,\n\t\t\t\t\tget: {\n\t\t\t\t\t\t...INITIAL_PRODUCTS_STATE.get,\n\t\t\t\t\t\tsuccess: {\n\t\t\t\t\t\t\tok: true,\n\t\t\t\t\t\t\tdata,\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})));\n\n\t\t\treturn data;\n\n\t\t} catch (e) {\n\t\t\tset(produce(state => ({\n\t\t\t\t...state,\n\t\t\t\tproducts: {\n\t\t\t\t\t...state.products,\n\t\t\t\t\tget: {\n\t\t\t\t\t\t...INITIAL_PRODUCTS_STATE.get,\n\t\t\t\t\t\tfailure: {\n\t\t\t\t\t\t\terror: true,\n\t\t\t\t\t\t\tmessage: e.message || INTERNAL_SERVER_ERROR,\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})))\n\t\t}\n\t},\n}));\n\nexport default useProductsStore;\n\t\n"]},"metadata":{},"sourceType":"module"}