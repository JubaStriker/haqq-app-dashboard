{"ast":null,"code":"/*-\n * ‌\n * Hedera JavaScript SDK\n * ​\n * Copyright (C) 2020 - 2022 Hedera Hashgraph, LLC\n * ​\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * ‍\n */\nimport CACHE from \"../Cache.js\";\nimport ContractId from \"./ContractId.js\";\nimport * as hex from \"../encoding/hex.js\";\n/**\n * @namespace {proto}\n * @typedef {import(\"@hashgraph/proto\").proto.IContractID} HashgraphProto.proto.IContractID\n * @typedef {import(\"@hashgraph/proto\").proto.IKey} HashgraphProto.proto.IKey\n */\n\n/**\n * @typedef {import(\"long\").Long} Long\n * @typedef {import(\"../client/Client.js\").default<*, *>} Client\n */\n\nexport default class DelegateContractId extends ContractId {\n  /**\n   * @param {number | Long | import(\"../EntityIdHelper\").IEntityId} props\n   * @param {(number | Long)=} realm\n   * @param {(number | Long)=} num\n   * @param {Uint8Array=} evmAddress\n   */\n  constructor(props, realm, num, evmAddress) {\n    super(props, realm, num, evmAddress);\n  }\n  /**\n   * @param {Long | number} shard\n   * @param {Long | number} realm\n   * @param {string} evmAddress\n   * @returns {ContractId}\n   */\n\n\n  static fromEvmAddress(shard, realm, evmAddress) {\n    return new DelegateContractId(shard, realm, 0, hex.decode(evmAddress));\n  }\n  /**\n   * @param {string} text\n   * @returns {DelegateContractId}\n   */\n\n\n  static fromString(text) {\n    return new DelegateContractId(ContractId.fromString(text));\n  }\n  /**\n   * @internal\n   * @param {HashgraphProto.proto.IContractID} id\n   * @returns {DelegateContractId}\n   */\n\n\n  static _fromProtobuf(id) {\n    return new DelegateContractId(ContractId._fromProtobuf(id));\n  }\n  /**\n   * @param {Uint8Array} bytes\n   * @returns {DelegateContractId}\n   */\n\n\n  static fromBytes(bytes) {\n    return new DelegateContractId(ContractId.fromBytes(bytes));\n  }\n  /**\n   * @param {string} address\n   * @returns {DelegateContractId}\n   */\n\n\n  static fromSolidityAddress(address) {\n    // eslint-disable-next-line deprecation/deprecation\n    return new DelegateContractId(ContractId.fromSolidityAddress(address));\n  }\n  /**\n   * @returns {DelegateContractId}\n   */\n\n\n  clone() {\n    const id = new DelegateContractId(this);\n    id._checksum = this._checksum;\n    return id;\n  }\n  /**\n   * @returns {HashgraphProto.proto.IKey}\n   */\n\n\n  _toProtobufKey() {\n    return {\n      delegatableContractId: this._toProtobuf()\n    };\n  }\n  /**\n   * @param {HashgraphProto.proto.IContractID} key\n   * @returns {DelegateContractId}\n   */\n\n\n  static __fromProtobufKey(key) {\n    return DelegateContractId._fromProtobuf(key);\n  }\n\n}\nCACHE.setDelegateContractId(key => DelegateContractId.__fromProtobufKey(key));","map":{"version":3,"sources":["/Users/jithendra/Desktop/Work/hbar-shop/hbar-shop-dashboard/node_modules/@hashgraph/sdk/src/contract/DelegateContractId.js"],"names":["CACHE","ContractId","hex","DelegateContractId","constructor","props","realm","num","evmAddress","fromEvmAddress","shard","decode","fromString","text","_fromProtobuf","id","fromBytes","bytes","fromSolidityAddress","address","clone","_checksum","_toProtobufKey","delegatableContractId","_toProtobuf","__fromProtobufKey","key","setDelegateContractId"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,MAAkB,aAAlB;AACA,OAAOC,UAAP,MAAuB,iBAAvB;AACA,OAAO,KAAKC,GAAZ,MAAqB,oBAArB;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,eAAe,MAAMC,kBAAN,SAAiCF,UAAjC,CAA4C;AACvD;AACJ;AACA;AACA;AACA;AACA;AACIG,EAAAA,WAAW,CAACC,KAAD,EAAQC,KAAR,EAAeC,GAAf,EAAoBC,UAApB,EAAgC;AACvC,UAAMH,KAAN,EAAaC,KAAb,EAAoBC,GAApB,EAAyBC,UAAzB;AACH;AAED;AACJ;AACA;AACA;AACA;AACA;;;AACyB,SAAdC,cAAc,CAACC,KAAD,EAAQJ,KAAR,EAAeE,UAAf,EAA2B;AAC5C,WAAO,IAAIL,kBAAJ,CAAuBO,KAAvB,EAA8BJ,KAA9B,EAAqC,CAArC,EAAwCJ,GAAG,CAACS,MAAJ,CAAWH,UAAX,CAAxC,CAAP;AACH;AAED;AACJ;AACA;AACA;;;AACqB,SAAVI,UAAU,CAACC,IAAD,EAAO;AACpB,WAAO,IAAIV,kBAAJ,CAAuBF,UAAU,CAACW,UAAX,CAAsBC,IAAtB,CAAvB,CAAP;AACH;AAED;AACJ;AACA;AACA;AACA;;;AACwB,SAAbC,aAAa,CAACC,EAAD,EAAK;AACrB,WAAO,IAAIZ,kBAAJ,CAAuBF,UAAU,CAACa,aAAX,CAAyBC,EAAzB,CAAvB,CAAP;AACH;AAED;AACJ;AACA;AACA;;;AACoB,SAATC,SAAS,CAACC,KAAD,EAAQ;AACpB,WAAO,IAAId,kBAAJ,CAAuBF,UAAU,CAACe,SAAX,CAAqBC,KAArB,CAAvB,CAAP;AACH;AAED;AACJ;AACA;AACA;;;AAC8B,SAAnBC,mBAAmB,CAACC,OAAD,EAAU;AAChC;AACA,WAAO,IAAIhB,kBAAJ,CAAuBF,UAAU,CAACiB,mBAAX,CAA+BC,OAA/B,CAAvB,CAAP;AACH;AAED;AACJ;AACA;;;AACIC,EAAAA,KAAK,GAAG;AACJ,UAAML,EAAE,GAAG,IAAIZ,kBAAJ,CAAuB,IAAvB,CAAX;AACAY,IAAAA,EAAE,CAACM,SAAH,GAAe,KAAKA,SAApB;AACA,WAAON,EAAP;AACH;AAED;AACJ;AACA;;;AACIO,EAAAA,cAAc,GAAG;AACb,WAAO;AACHC,MAAAA,qBAAqB,EAAE,KAAKC,WAAL;AADpB,KAAP;AAGH;AAED;AACJ;AACA;AACA;;;AAC4B,SAAjBC,iBAAiB,CAACC,GAAD,EAAM;AAC1B,WAAOvB,kBAAkB,CAACW,aAAnB,CAAiCY,GAAjC,CAAP;AACH;;AA/EsD;AAkF3D1B,KAAK,CAAC2B,qBAAN,CAA6BD,GAAD,IAASvB,kBAAkB,CAACsB,iBAAnB,CAAqCC,GAArC,CAArC","sourcesContent":["/*-\n * ‌\n * Hedera JavaScript SDK\n * ​\n * Copyright (C) 2020 - 2022 Hedera Hashgraph, LLC\n * ​\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * ‍\n */\n\nimport CACHE from \"../Cache.js\";\nimport ContractId from \"./ContractId.js\";\nimport * as hex from \"../encoding/hex.js\";\n\n/**\n * @namespace {proto}\n * @typedef {import(\"@hashgraph/proto\").proto.IContractID} HashgraphProto.proto.IContractID\n * @typedef {import(\"@hashgraph/proto\").proto.IKey} HashgraphProto.proto.IKey\n */\n\n/**\n * @typedef {import(\"long\").Long} Long\n * @typedef {import(\"../client/Client.js\").default<*, *>} Client\n */\n\nexport default class DelegateContractId extends ContractId {\n    /**\n     * @param {number | Long | import(\"../EntityIdHelper\").IEntityId} props\n     * @param {(number | Long)=} realm\n     * @param {(number | Long)=} num\n     * @param {Uint8Array=} evmAddress\n     */\n    constructor(props, realm, num, evmAddress) {\n        super(props, realm, num, evmAddress);\n    }\n\n    /**\n     * @param {Long | number} shard\n     * @param {Long | number} realm\n     * @param {string} evmAddress\n     * @returns {ContractId}\n     */\n    static fromEvmAddress(shard, realm, evmAddress) {\n        return new DelegateContractId(shard, realm, 0, hex.decode(evmAddress));\n    }\n\n    /**\n     * @param {string} text\n     * @returns {DelegateContractId}\n     */\n    static fromString(text) {\n        return new DelegateContractId(ContractId.fromString(text));\n    }\n\n    /**\n     * @internal\n     * @param {HashgraphProto.proto.IContractID} id\n     * @returns {DelegateContractId}\n     */\n    static _fromProtobuf(id) {\n        return new DelegateContractId(ContractId._fromProtobuf(id));\n    }\n\n    /**\n     * @param {Uint8Array} bytes\n     * @returns {DelegateContractId}\n     */\n    static fromBytes(bytes) {\n        return new DelegateContractId(ContractId.fromBytes(bytes));\n    }\n\n    /**\n     * @param {string} address\n     * @returns {DelegateContractId}\n     */\n    static fromSolidityAddress(address) {\n        // eslint-disable-next-line deprecation/deprecation\n        return new DelegateContractId(ContractId.fromSolidityAddress(address));\n    }\n\n    /**\n     * @returns {DelegateContractId}\n     */\n    clone() {\n        const id = new DelegateContractId(this);\n        id._checksum = this._checksum;\n        return id;\n    }\n\n    /**\n     * @returns {HashgraphProto.proto.IKey}\n     */\n    _toProtobufKey() {\n        return {\n            delegatableContractId: this._toProtobuf(),\n        };\n    }\n\n    /**\n     * @param {HashgraphProto.proto.IContractID} key\n     * @returns {DelegateContractId}\n     */\n    static __fromProtobufKey(key) {\n        return DelegateContractId._fromProtobuf(key);\n    }\n}\n\nCACHE.setDelegateContractId((key) => DelegateContractId.__fromProtobufKey(key));\n"]},"metadata":{},"sourceType":"module"}