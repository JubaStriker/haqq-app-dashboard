{"ast":null,"code":"var _jsxFileName = \"/Users/jithendra/Desktop/Work/hbar-shop/hbar-shop-dashboard/src/routes/settings/index.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useContext, useState } from \"react\";\nimport { Box, Heading, ButtonGroup, Text, Button, Container, useToast, Code, Divider, Input, FormControl, InputLeftElement, InputGroup, FormHelperText, Alert, AlertIcon, SimpleGrid, FormErrorMessage, Spinner, SkeletonText } from \"@chakra-ui/react\";\nimport useScriptsStore from \"../../store/scripts\";\nimport { ShopContext } from \"../../context\";\nimport { INTERNAL_SERVER_ERROR } from \"../../constants/strings\";\nimport NavBar from \"../../components/navbar\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport useWalletStore from \"../../store/wallet\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SettingsRoute = () => {\n  _s();\n\n  var _hBarWalletAddress$ge4, _hBarWalletAddress$ge5, _hBarWalletAddress$ge6;\n\n  const shop = useContext(ShopContext);\n  const scripts = useScriptsStore(state => state.scripts);\n  const postScripts = useScriptsStore(state => state.postScripts);\n  const getScripts = useScriptsStore(state => state.getScripts);\n  const destroyScripts = useScriptsStore(state => state.destroyScripts);\n  const toast = useToast();\n  const verifyWalletSate = useWalletStore(state => state.verifyWalletSate);\n  const hBarWalletAddress = useWalletStore(state => state.walletState);\n  const getWalletAddress = useWalletStore(state => state.getWalletAddress);\n  const postWalletAddress = useWalletStore(state => state.postWalletAddress);\n  const verifyWalletAddress = useWalletStore(state => state.verifyWalletAddress);\n  const fetchWalletAddress = useWalletStore(state => state.fetchWalletAddress);\n\n  const onSubmitHandler = async data => {\n    const walletAddress = data;\n    await verifyWalletAddress(walletAddress);\n    console.log(verifyWalletSate.get.success.ok);\n\n    if (verifyWalletSate.get.success.ok === true) {\n      try {\n        await postWalletAddress({\n          shop,\n          walletAddress\n        });\n        toast({\n          title: \"Wallet address added successfully!\",\n          status: \"success\",\n          duration: 3000\n        });\n      } catch (e) {\n        toast({\n          title: e.message || \"Something went wrong.\",\n          status: \"error\",\n          duration: 3000\n        });\n      }\n    } else {\n      toast({\n        title: \"Something went wrong.\",\n        status: \"error\",\n        duration: 3000\n      });\n    }\n  };\n\n  const connectWallet = () => {\n    console.log('Hello World');\n    window.ethereum.request({\n      method: \"eth_requestAccounts\"\n    });\n    fetchWalletAddress();\n  };\n\n  const walletSchema = Yup.object().shape({\n    walletAddress: Yup.string().required(\"Wallet Address Is required\")\n  });\n  const formik = useFormik({\n    initialValues: {\n      walletAddress: \"\"\n    },\n    validationSchema: walletSchema,\n    onSubmit: values => {\n      if (values) {\n        onSubmitHandler(values.walletAddress);\n      }\n    }\n  });\n  useEffect(() => {\n    getWalletAddress(shop);\n    getScripts(shop);\n    fetchWalletAddress();\n  }, []);\n  useEffect(() => {\n    var _hBarWalletAddress$ge, _hBarWalletAddress$ge2, _hBarWalletAddress$ge3;\n\n    formik.setFieldValue(\"walletAddress\", (hBarWalletAddress === null || hBarWalletAddress === void 0 ? void 0 : (_hBarWalletAddress$ge = hBarWalletAddress.get) === null || _hBarWalletAddress$ge === void 0 ? void 0 : (_hBarWalletAddress$ge2 = _hBarWalletAddress$ge.success) === null || _hBarWalletAddress$ge2 === void 0 ? void 0 : (_hBarWalletAddress$ge3 = _hBarWalletAddress$ge2.data) === null || _hBarWalletAddress$ge3 === void 0 ? void 0 : _hBarWalletAddress$ge3.walletAddress) || \"\");\n  }, [hBarWalletAddress === null || hBarWalletAddress === void 0 ? void 0 : (_hBarWalletAddress$ge4 = hBarWalletAddress.get) === null || _hBarWalletAddress$ge4 === void 0 ? void 0 : (_hBarWalletAddress$ge5 = _hBarWalletAddress$ge4.success) === null || _hBarWalletAddress$ge5 === void 0 ? void 0 : (_hBarWalletAddress$ge6 = _hBarWalletAddress$ge5.data) === null || _hBarWalletAddress$ge6 === void 0 ? void 0 : _hBarWalletAddress$ge6.walletAddress]);\n\n  const enableWidget = async () => {\n    try {\n      await postScripts(shop);\n      toast({\n        title: `Widget added successfully! Please visit your online store after 30 seconds to check the widget.`,\n        status: \"success\"\n      });\n      getScripts(shop);\n    } catch (e) {\n      toast({\n        title: e.message || INTERNAL_SERVER_ERROR,\n        status: \"error\"\n      });\n    }\n  };\n\n  const HbarAddressInput = () => {\n    if (hBarWalletAddress.get.loading) {\n      return /*#__PURE__*/_jsxDEV(Box, {\n        width: \"100%\",\n        alignItems: \"center\",\n        children: /*#__PURE__*/_jsxDEV(SkeletonText, {\n          mt: \"4\",\n          noOfLines: 4,\n          spacing: \"4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this);\n    } else if (hBarWalletAddress.get.success.ok) {\n      return /*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          size: \"xl\",\n          fontWeight: \"bold\",\n          pb: \"5px\",\n          children: \"HBAR wallet address where to receive HBAR from customer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          onSubmit: formik.handleSubmit,\n          isInvalid: formik.touched.walletAddress && formik.errors.walletAddress,\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            id: \"walletAddress\",\n            name: \"walletAddress\",\n            type: \"text\",\n            placeholder: \"HBAR Wallet Address\",\n            onChange: formik.handleChange,\n            value: formik.values.walletAddress\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n            size: \"sm\",\n            color: \"red\",\n            children: formik.touched.walletAddress && formik.errors.walletAddress ? formik.errors.walletAddress : /*#__PURE__*/_jsxDEV(FormErrorMessage, {\n              children: \"Please check HBAR wallet address where to receive HBAR from customer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => {\n            connectWallet();\n          },\n          children: \"Connect to HBAR Wallet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          mt: 4,\n          onClick: formik.handleSubmit,\n          isLoading: hBarWalletAddress.post.loading,\n          type: \"submit\",\n          size: \"sm\",\n          colorScheme: \"messenger\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this);\n    }\n  };\n\n  const disableWidget = async () => {\n    try {\n      await destroyScripts(shop);\n      toast({\n        title: `Widget removed successfully!`,\n        status: \"success\"\n      });\n      getScripts(shop);\n    } catch (e) {\n      toast({\n        title: e.message || INTERNAL_SERVER_ERROR,\n        status: \"error\"\n      });\n    }\n  };\n\n  const renderButton = () => {\n    if (scripts.get.loading) {\n      return /*#__PURE__*/_jsxDEV(Button, {\n        colorScheme: \"gray\",\n        isLoading: true,\n        isDisabled: true,\n        children: \"Loading ...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this);\n    } else if (scripts.get.success.data.length) {\n      return /*#__PURE__*/_jsxDEV(Button, {\n        isLoading: scripts.destroy.loading || scripts.get.loading,\n        fontWeight: \"bold\",\n        size: \"sm\",\n        colorScheme: \"red\",\n        onClick: disableWidget,\n        children: \"Remove Widget From Your Store\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(Button, {\n        isLoading: scripts.post.loading || scripts.get.loading,\n        fontWeight: \"bold\",\n        size: \"sm\",\n        colorScheme: \"green\",\n        onClick: enableWidget,\n        children: \"Add Widget To Your Store\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      maxW: \"7xl\",\n      p: [12, 6],\n      bg: \"#f6f6f7\",\n      textAlign: \"left\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        as: \"section\",\n        maxW: \"3xl\",\n        mx: \"auto\",\n        children: /*#__PURE__*/_jsxDEV(SimpleGrid, {\n          spacing: 4,\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            bg: \"white\",\n            borderRadius: 10,\n            p: 5,\n            boxShadow: \"md\",\n            children: HbarAddressInput()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            bg: \"white\",\n            borderRadius: 10,\n            p: 5,\n            boxShadow: \"md\",\n            children: [/*#__PURE__*/_jsxDEV(Text, {\n              size: \"xl\",\n              fontWeight: \"bold\",\n              children: \"Widget Embed Settings\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Text, {\n              mt: \"4\",\n              fontSize: \"sm\",\n              children: \"Enable or disable \\\"HBAR Coupon\\\" widget on your store. The widget gets appended to the bottom of your store page above the footer on the home page.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n              mt: \"4\",\n              spacing: \"6\",\n              children: renderButton()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Alert, {\n              mt: 4,\n              status: \"info\",\n              children: [/*#__PURE__*/_jsxDEV(AlertIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(SimpleGrid, {\n                children: [/*#__PURE__*/_jsxDEV(Box, {\n                  children: /*#__PURE__*/_jsxDEV(Text, {\n                    fontSize: \"sm\",\n                    children: \"NOTE: If you want the widget only on certain pages or only in certain positions please add the following html tag to custom liquid or custom html section.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 262,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 261,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Box, {\n                  children: /*#__PURE__*/_jsxDEV(Code, {\n                    children: `<div id=\"frangout-shop-look-app\"> </div>`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 269,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 268,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(SettingsRoute, \"nQsEJu0yQ+GNA1soKjIuSV0HZPI=\", false, function () {\n  return [useScriptsStore, useScriptsStore, useScriptsStore, useScriptsStore, useToast, useWalletStore, useWalletStore, useWalletStore, useWalletStore, useWalletStore, useWalletStore, useFormik];\n});\n\n_c = SettingsRoute;\nexport default SettingsRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"SettingsRoute\");","map":{"version":3,"sources":["/Users/jithendra/Desktop/Work/hbar-shop/hbar-shop-dashboard/src/routes/settings/index.js"],"names":["useEffect","useContext","useState","Box","Heading","ButtonGroup","Text","Button","Container","useToast","Code","Divider","Input","FormControl","InputLeftElement","InputGroup","FormHelperText","Alert","AlertIcon","SimpleGrid","FormErrorMessage","Spinner","SkeletonText","useScriptsStore","ShopContext","INTERNAL_SERVER_ERROR","NavBar","useFormik","Yup","useWalletStore","SettingsRoute","shop","scripts","state","postScripts","getScripts","destroyScripts","toast","verifyWalletSate","hBarWalletAddress","walletState","getWalletAddress","postWalletAddress","verifyWalletAddress","fetchWalletAddress","onSubmitHandler","data","walletAddress","console","log","get","success","ok","title","status","duration","e","message","connectWallet","window","ethereum","request","method","walletSchema","object","shape","string","required","formik","initialValues","validationSchema","onSubmit","values","setFieldValue","enableWidget","HbarAddressInput","loading","handleSubmit","touched","errors","handleChange","post","disableWidget","renderButton","length","destroy"],"mappings":"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","sourcesContent":["import { useEffect, useContext, useState } from \"react\";\nimport {\n  Box,\n  Heading,\n  ButtonGroup,\n  Text,\n  Button,\n  Container,\n  useToast,\n  Code,\n  Divider,\n  Input,\n  FormControl,\n  InputLeftElement,\n  InputGroup,\n  FormHelperText,\n  Alert,\n  AlertIcon,\n  SimpleGrid,\n  FormErrorMessage,\n  Spinner,\n  SkeletonText,\n} from \"@chakra-ui/react\";\nimport useScriptsStore from \"../../store/scripts\";\nimport { ShopContext } from \"../../context\";\nimport { INTERNAL_SERVER_ERROR } from \"../../constants/strings\";\nimport NavBar from \"../../components/navbar\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport useWalletStore from \"../../store/wallet\";\n\nconst SettingsRoute = () => {\n  const shop = useContext(ShopContext);\n  const scripts = useScriptsStore((state) => state.scripts);\n  const postScripts = useScriptsStore((state) => state.postScripts);\n  const getScripts = useScriptsStore((state) => state.getScripts);\n  const destroyScripts = useScriptsStore((state) => state.destroyScripts);\n  const toast = useToast();\n\n  const verifyWalletSate = useWalletStore((state) => state.verifyWalletSate);\n  const hBarWalletAddress = useWalletStore((state) => state.walletState);\n  const getWalletAddress = useWalletStore((state) => state.getWalletAddress);\n  const postWalletAddress = useWalletStore((state) => state.postWalletAddress);\n  const verifyWalletAddress = useWalletStore(\n    (state) => state.verifyWalletAddress\n  );\n  const fetchWalletAddress = useWalletStore(\n    (state) => state.fetchWalletAddress\n  );\n\n  const onSubmitHandler = async (data) => {\n    const walletAddress = data;\n    await verifyWalletAddress(walletAddress);\n    console.log(verifyWalletSate.get.success.ok);\n    if (verifyWalletSate.get.success.ok === true) {\n      try {\n        await postWalletAddress({ shop, walletAddress });\n        toast({\n          title: \"Wallet address added successfully!\",\n          status: \"success\",\n          duration: 3000,\n        });\n      } catch (e) {\n        toast({\n          title: e.message || \"Something went wrong.\",\n          status: \"error\",\n          duration: 3000,\n        });\n      }\n    } else {\n      toast({\n        title: \"Something went wrong.\",\n        status: \"error\",\n        duration: 3000,\n      });\n    }\n  };\n\n  \n\n  const connectWallet = () => {\n    console.log('Hello World');\n    window.ethereum.request({method: \"eth_requestAccounts\"})\n    fetchWalletAddress();\n  }\n\n  const walletSchema = Yup.object().shape({\n    walletAddress: Yup.string().required(\"Wallet Address Is required\"),\n  });\n\n  const formik = useFormik({\n    initialValues: { walletAddress: \"\" },\n    validationSchema: walletSchema,\n    onSubmit: (values) => {\n      if (values) {\n        onSubmitHandler(values.walletAddress);\n      }\n    },\n  });\n\n  useEffect(() => {\n    getWalletAddress(shop);\n    getScripts(shop);\n    fetchWalletAddress();\n    \n  }, []);\n\n  useEffect(() => {\n    formik.setFieldValue(\n      \"walletAddress\",\n      hBarWalletAddress?.get?.success?.data?.walletAddress || \"\"\n    );\n  }, [hBarWalletAddress?.get?.success?.data?.walletAddress]);\n\n  const enableWidget = async () => {\n    try {\n      await postScripts(shop);\n      toast({\n        title: `Widget added successfully! Please visit your online store after 30 seconds to check the widget.`,\n        status: \"success\",\n      });\n      getScripts(shop);\n    } catch (e) {\n      toast({\n        title: e.message || INTERNAL_SERVER_ERROR,\n        status: \"error\",\n      });\n    }\n  };\n  const HbarAddressInput = () => {\n    if (hBarWalletAddress.get.loading) {\n      return (\n        <Box width={\"100%\"} alignItems=\"center\">\n          <SkeletonText mt=\"4\" noOfLines={4} spacing=\"4\" />\n        </Box>\n      );\n    } else if (hBarWalletAddress.get.success.ok) {\n      return (\n        <Box>\n          <Text size=\"xl\" fontWeight=\"bold\" pb=\"5px\">\n            HBAR wallet address where to receive HBAR from customer\n          </Text>\n          <FormControl\n            onSubmit={formik.handleSubmit}\n            isInvalid={\n              formik.touched.walletAddress && formik.errors.walletAddress\n            }\n          >\n            <Input\n              id=\"walletAddress\"\n              name=\"walletAddress\"\n              type=\"text\"\n              placeholder=\"HBAR Wallet Address\"\n              onChange={formik.handleChange}\n              value={formik.values.walletAddress}\n            />\n\n            <FormHelperText size=\"sm\" color={\"red\"}>\n              {formik.touched.walletAddress && formik.errors.walletAddress ? (\n                formik.errors.walletAddress\n              ) : (\n                <FormErrorMessage>\n                  Please check HBAR wallet address where to receive HBAR from\n                  customer\n                </FormErrorMessage>\n              )}\n            </FormHelperText>\n          </FormControl>\n\n          <Button onClick={() => {connectWallet()}} >Connect to HBAR Wallet</Button>\n\n          <Button\n            mt={4}\n            onClick={formik.handleSubmit}\n            isLoading={hBarWalletAddress.post.loading}\n            type=\"submit\"\n            size=\"sm\"\n            colorScheme={\"messenger\"}\n          >\n            Submit\n          </Button>\n        </Box>\n      );\n    }\n  };\n\n  const disableWidget = async () => {\n    try {\n      await destroyScripts(shop);\n      toast({\n        title: `Widget removed successfully!`,\n        status: \"success\",\n      });\n      getScripts(shop);\n    } catch (e) {\n      toast({\n        title: e.message || INTERNAL_SERVER_ERROR,\n        status: \"error\",\n      });\n    }\n  };\n\n  const renderButton = () => {\n    if (scripts.get.loading) {\n      return (\n        <Button colorScheme=\"gray\" isLoading isDisabled>\n          Loading ...\n        </Button>\n      );\n    } else if (scripts.get.success.data.length) {\n      return (\n        <Button\n          isLoading={scripts.destroy.loading || scripts.get.loading}\n          fontWeight=\"bold\"\n          size=\"sm\"\n          colorScheme=\"red\"\n          onClick={disableWidget}\n        >\n          Remove Widget From Your Store\n        </Button>\n      );\n    } else {\n      return (\n        <Button\n          isLoading={scripts.post.loading || scripts.get.loading}\n          fontWeight=\"bold\"\n          size=\"sm\"\n          colorScheme=\"green\"\n          onClick={enableWidget}\n        >\n          Add Widget To Your Store\n        </Button>\n      );\n    }\n  };\n\n  return (\n    <>\n      <NavBar />\n      <Container maxW={\"7xl\"} p={[12, 6]} bg=\"#f6f6f7\" textAlign={\"left\"}>\n        <Box as=\"section\" maxW=\"3xl\" mx=\"auto\">\n          <SimpleGrid spacing={4}>\n            <Box bg=\"white\" borderRadius={10} p={5} boxShadow=\"md\">\n              {HbarAddressInput()}\n            </Box>\n            <Box bg=\"white\" borderRadius={10} p={5} boxShadow=\"md\">\n              <Text size=\"xl\" fontWeight=\"bold\">\n                Widget Embed Settings\n              </Text>\n              <Text mt=\"4\" fontSize=\"sm\">\n                Enable or disable \"HBAR Coupon\" widget on your store. The widget\n                gets appended to the bottom of your store page above the footer\n                on the home page.\n              </Text>\n              <ButtonGroup mt=\"4\" spacing=\"6\">\n                {renderButton()}\n              </ButtonGroup>\n              <Alert mt={4} status=\"info\">\n                <AlertIcon />\n                <SimpleGrid>\n                  <Box>\n                    <Text fontSize=\"sm\">\n                      NOTE: If you want the widget only on certain pages or only\n                      in certain positions please add the following html tag to\n                      custom liquid or custom html section.\n                    </Text>\n                  </Box>\n                  <Box>\n                    <Code\n                      children={`<div id=\"frangout-shop-look-app\"> </div>`}\n                    ></Code>\n                  </Box>\n                </SimpleGrid>\n              </Alert>\n            </Box>\n          </SimpleGrid>\n        </Box>\n      </Container>\n    </>\n  );\n};\n\nexport default SettingsRoute;\n"]},"metadata":{},"sourceType":"module"}