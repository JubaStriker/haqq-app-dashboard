{"ast":null,"code":"import create from \"zustand\";\nimport axios from \"axios\";\nimport produce from \"immer\";\nimport { INTERNAL_SERVER_ERROR } from \"../../constants/strings\";\nimport Parse from \"parse\";\nconst INITIAL_WALLET_STATE = {\n  get: {\n    loading: false,\n    success: {\n      ok: false,\n      data: []\n    },\n    failure: {\n      error: false,\n      message: \"\"\n    }\n  },\n  post: {\n    loading: false,\n    success: {\n      ok: false,\n      data: null\n    },\n    failure: {\n      error: false,\n      message: \"\"\n    }\n  }\n};\nconst useWalletStore = create((set, address) => ({\n  walletState: INITIAL_WALLET_STATE,\n  //   getWalletAddress: async ({shop}) => {\n  //     try{\n  //         const xrpAddress = new Parse.Query('Shop');\n  //         xrpAddress.get(shop)\n  //     } catch(e){\n  //         console.log(error)\n  //     }\n  //   },\n  postWalletAddress: async _ref => {\n    let {\n      shop,\n      address\n    } = _ref;\n    set(produce(state => ({ ...state,\n      walletState: { ...state.walletState,\n        post: { ...INITIAL_WALLET_STATE.post,\n          loading: true\n        }\n      }\n    })));\n\n    try {\n      const {\n        data\n      } = await axios.post(`${process.env.REACT_APP_API_SHOPLOOKS_SERVER_URL}/api/put_shop`, {\n        shop,\n        address\n      });\n      console.log(data); // const myObj = new Parse.Object('WalletDeatils');\n      // myObj.set('shop', shop);\n      // myObj.set('walletAddress', address)   \n      // await myObj.save();\n      // if(myObj){\n      //     console.log('Ok');\n      //     set(\n      //         produce((state) => ({\n      //             ...state,\n      //             walletState:{\n      //                 ...state.walletState,\n      //                 post:{\n      //                     ...INITIAL_WALLET_STATE.post,\n      //                     loading: false,\n      //                     success: {\n      //                         ok: true\n      //                     }\n      //                 }\n      //             }\n      //         }))\n      //     )\n      // }\n    } catch (error) {\n      console.log(error);\n      set(produce(state => ({ ...state,\n        walletState: { ...state.walletState,\n          post: { ...INITIAL_WALLET_STATE.post,\n            loading: false,\n            success: {\n              ok: false\n            },\n            failure: {\n              error: false,\n              message: \"Please Verify the Wallet Address\"\n            }\n          }\n        }\n      })));\n    }\n  }\n}));\nexport default useWalletStore;","map":{"version":3,"sources":["/Users/jithendra/Desktop/Work/meta-soft-xrp/xrp-shopify-coupon-client/src/store/wallet/index.js"],"names":["create","axios","produce","INTERNAL_SERVER_ERROR","Parse","INITIAL_WALLET_STATE","get","loading","success","ok","data","failure","error","message","post","useWalletStore","set","address","walletState","postWalletAddress","shop","state","process","env","REACT_APP_API_SHOPLOOKS_SERVER_URL","console","log"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,SAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,OAApB;AACA,SAASC,qBAAT,QAAsC,yBAAtC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,oBAAoB,GAAG;AAC3BC,EAAAA,GAAG,EAAE;AACHC,IAAAA,OAAO,EAAE,KADN;AAEHC,IAAAA,OAAO,EAAE;AACPC,MAAAA,EAAE,EAAE,KADG;AAEPC,MAAAA,IAAI,EAAE;AAFC,KAFN;AAMHC,IAAAA,OAAO,EAAE;AACPC,MAAAA,KAAK,EAAE,KADA;AAEPC,MAAAA,OAAO,EAAE;AAFF;AANN,GADsB;AAY3BC,EAAAA,IAAI,EAAE;AACJP,IAAAA,OAAO,EAAE,KADL;AAEJC,IAAAA,OAAO,EAAE;AACPC,MAAAA,EAAE,EAAE,KADG;AAEPC,MAAAA,IAAI,EAAE;AAFC,KAFL;AAMJC,IAAAA,OAAO,EAAE;AACPC,MAAAA,KAAK,EAAE,KADA;AAEPC,MAAAA,OAAO,EAAE;AAFF;AANL;AAZqB,CAA7B;AAyBA,MAAME,cAAc,GAAGf,MAAM,CAAC,CAACgB,GAAD,EAAMC,OAAN,MAAmB;AAC/CC,EAAAA,WAAW,EAAEb,oBADkC;AAEjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEc,EAAAA,iBAAiB,EAAE,cAA6B;AAAA,QAAtB;AAAEC,MAAAA,IAAF;AAAQH,MAAAA;AAAR,KAAsB;AAC9CD,IAAAA,GAAG,CACDd,OAAO,CAAEmB,KAAD,KAAY,EAClB,GAAGA,KADe;AAElBH,MAAAA,WAAW,EAAE,EACX,GAAGG,KAAK,CAACH,WADE;AAEXJ,QAAAA,IAAI,EAAE,EACJ,GAAGT,oBAAoB,CAACS,IADpB;AAEJP,UAAAA,OAAO,EAAE;AAFL;AAFK;AAFK,KAAZ,CAAD,CADN,CAAH;;AAYA,QAAI;AACF,YAAM;AAAEG,QAAAA;AAAF,UAAW,MAAMT,KAAK,CAACa,IAAN,CACpB,GAAEQ,OAAO,CAACC,GAAR,CAAYC,kCAAmC,eAD7B,EAErB;AACIJ,QAAAA,IADJ;AAEIH,QAAAA;AAFJ,OAFqB,CAAvB;AAOEQ,MAAAA,OAAO,CAACC,GAAR,CAAYhB,IAAZ,EARA,CASJ;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACC,KAhCD,CAgCE,OAAOE,KAAP,EAAc;AACda,MAAAA,OAAO,CAACC,GAAR,CAAYd,KAAZ;AACAI,MAAAA,GAAG,CACDd,OAAO,CAAEmB,KAAD,KAAY,EAChB,GAAGA,KADa;AAEhBH,QAAAA,WAAW,EAAE,EACT,GAAGG,KAAK,CAACH,WADA;AAETJ,UAAAA,IAAI,EAAC,EACD,GAAGT,oBAAoB,CAACS,IADvB;AAEDP,YAAAA,OAAO,EAAC,KAFP;AAGDC,YAAAA,OAAO,EAAE;AACLC,cAAAA,EAAE,EAAE;AADC,aAHR;AAMDE,YAAAA,OAAO,EAAE;AACLC,cAAAA,KAAK,EAAE,KADF;AAELC,cAAAA,OAAO,EAAE;AAFJ;AANR;AAFI;AAFG,OAAZ,CAAD,CADN,CAAH;AAmBD;AACF;AA7E8C,CAAnB,CAAD,CAA7B;AAgFA,eAAeE,cAAf","sourcesContent":["import create from \"zustand\";\nimport axios from \"axios\";\nimport produce from \"immer\";\nimport { INTERNAL_SERVER_ERROR } from \"../../constants/strings\";\nimport Parse from \"parse\";\n\nconst INITIAL_WALLET_STATE = {\n  get: {\n    loading: false,\n    success: {\n      ok: false,\n      data: [],\n    },\n    failure: {\n      error: false,\n      message: \"\",\n    },\n  },\n  post: {\n    loading: false,\n    success: {\n      ok: false,\n      data: null,\n    },\n    failure: {\n      error: false,\n      message: \"\",\n    },\n  },\n};\n\nconst useWalletStore = create((set, address) => ({\n  walletState: INITIAL_WALLET_STATE,\n//   getWalletAddress: async ({shop}) => {\n//     try{\n//         const xrpAddress = new Parse.Query('Shop');\n//         xrpAddress.get(shop)\n//     } catch(e){\n//         console.log(error)\n//     }\n//   },\n  postWalletAddress: async ({ shop, address }) => {\n    set(\n      produce((state) => ({\n        ...state,\n        walletState: {\n          ...state.walletState,\n          post: {\n            ...INITIAL_WALLET_STATE.post,\n            loading: true,\n          },\n        },\n      }))\n    );\n    try {\n      const { data } = await axios.post(\n        `${process.env.REACT_APP_API_SHOPLOOKS_SERVER_URL}/api/put_shop`,\n        { \n            shop, \n            address,\n        }\n      );\n        console.log(data);\n    // const myObj = new Parse.Object('WalletDeatils');\n    // myObj.set('shop', shop);\n    // myObj.set('walletAddress', address)   \n    // await myObj.save();\n\n    // if(myObj){\n    //     console.log('Ok');\n    //     set(\n    //         produce((state) => ({\n    //             ...state,\n    //             walletState:{\n    //                 ...state.walletState,\n    //                 post:{\n    //                     ...INITIAL_WALLET_STATE.post,\n    //                     loading: false,\n    //                     success: {\n    //                         ok: true\n    //                     }\n    //                 }\n    //             }\n    //         }))\n    //     )\n    // }\n    } catch (error) {\n      console.log(error);\n      set(\n        produce((state) => ({\n            ...state,\n            walletState: {\n                ...state.walletState,\n                post:{\n                    ...INITIAL_WALLET_STATE.post,\n                    loading:false,\n                    success: {\n                        ok: false,\n                    },\n                    failure: {\n                        error: false,\n                        message: \"Please Verify the Wallet Address\"\n                    }\n                }\n            }\n        }))\n      )\n    }\n  },\n}));\n\nexport default useWalletStore;\n"]},"metadata":{},"sourceType":"module"}