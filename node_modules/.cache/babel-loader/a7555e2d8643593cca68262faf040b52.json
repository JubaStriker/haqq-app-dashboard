{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.compareParseObjects = void 0;\n\nvar compareParseObjects = function (a, b, sorts) {\n  var order = sorts[0];\n  var operator = order.slice(0, 1);\n  var isDescending = operator === '-';\n\n  if (isDescending) {\n    order = order.substring(1);\n  }\n\n  if (order === '_created_at') {\n    order = 'createdAt';\n  }\n\n  if (order === '_updated_at') {\n    order = 'updatedAt';\n  }\n\n  if (!/^[A-Za-z][0-9A-Za-z_]*$/.test(order) || order === 'password') {\n    throw new Parse.Error(Parse.Error.INVALID_KEY_NAME, \"Invalid Key: \" + order);\n  }\n\n  var field1 = a.get(order);\n  var field2 = b.get(order);\n\n  if (field1 < field2) {\n    return isDescending ? 1 : -1;\n  }\n\n  if (field1 > field2) {\n    return isDescending ? -1 : 1;\n  }\n\n  if (sorts.length > 1) {\n    var remainingSorts = sorts.slice(1);\n    return (0, exports.compareParseObjects)(a, b, remainingSorts);\n  }\n\n  return 0;\n};\n\nexports.compareParseObjects = compareParseObjects;","map":{"version":3,"mappings":";;;;;AAAO,IAAMA,mBAAmB,GAAG,UACjCC,CADiC,EAEjCC,CAFiC,EAGjCC,KAHiC,EAGlB;AAEf,MAAIC,KAAK,GAAGD,KAAK,CAAC,CAAD,CAAjB;AACA,MAAME,QAAQ,GAAGD,KAAK,CAACE,KAAN,CAAY,CAAZ,EAAe,CAAf,CAAjB;AACA,MAAMC,YAAY,GAAGF,QAAQ,KAAK,GAAlC;;AACA,MAAIE,YAAJ,EAAkB;AAChBH,SAAK,GAAGA,KAAK,CAACI,SAAN,CAAgB,CAAhB,CAAR;AACD;;AACD,MAAIJ,KAAK,KAAK,aAAd,EAA6B;AAC3BA,SAAK,GAAG,WAAR;AACD;;AACD,MAAIA,KAAK,KAAK,aAAd,EAA6B;AAC3BA,SAAK,GAAG,WAAR;AACD;;AACD,MAAI,CAAE,yBAAD,CAA4BK,IAA5B,CAAiCL,KAAjC,CAAD,IAA4CA,KAAK,KAAK,UAA1D,EAAsE;AACpE,UAAM,IAAIM,KAAK,CAACC,KAAV,CAAgBD,KAAK,CAACC,KAAN,CAAYC,gBAA5B,EAA8C,kBAAgBR,KAA9D,CAAN;AACD;;AACD,MAAMS,MAAM,GAAGZ,CAAC,CAACa,GAAF,CAAMV,KAAN,CAAf;AACA,MAAMW,MAAM,GAAGb,CAAC,CAACY,GAAF,CAAMV,KAAN,CAAf;;AACA,MAAIS,MAAM,GAAGE,MAAb,EAAqB;AACnB,WAAOR,YAAY,GAAG,CAAH,GAAO,CAAC,CAA3B;AACD;;AACD,MAAIM,MAAM,GAAGE,MAAb,EAAqB;AACnB,WAAOR,YAAY,GAAG,CAAC,CAAJ,GAAQ,CAA3B;AACD;;AACD,MAAIJ,KAAK,CAACa,MAAN,GAAe,CAAnB,EAAsB;AACpB,QAAMC,cAAc,GAAGd,KAAK,CAACG,KAAN,CAAY,CAAZ,CAAvB;AACA,WAAO,iCAAoBL,CAApB,EAAuBC,CAAvB,EAA0Be,cAA1B,CAAP;AACD;;AACD,SAAO,CAAP;AACD,CAjCM;;AAAMC,8BAAmBlB,mBAAnB","names":["compareParseObjects","a","b","sorts","order","operator","slice","isDescending","substring","test","Parse","Error","INVALID_KEY_NAME","field1","get","field2","length","remainingSorts","exports"],"sourceRoot":"","sources":["../src/util.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}