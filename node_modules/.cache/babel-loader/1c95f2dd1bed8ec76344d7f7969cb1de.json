{"ast":null,"code":"/*-\n * ‌\n * Hedera JavaScript SDK\n * ​\n * Copyright (C) 2020 - 2022 Hedera Hashgraph, LLC\n * ​\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * ‍\n */\n\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").proto.TokenType} HashgraphProto.proto.TokenType\n */\nexport default class TokenType {\n  /**\n   * @hideconstructor\n   * @internal\n   * @param {number} code\n   */\n  constructor(code) {\n    /** @readonly */\n    this._code = code;\n    Object.freeze(this);\n  }\n  /**\n   * @returns {string}\n   */\n\n\n  toString() {\n    switch (this) {\n      case TokenType.FungibleCommon:\n        return \"FUNGIBLE_COMMON\";\n\n      case TokenType.NonFungibleUnique:\n        return \"NON_FUNGIBLE_UNIQUE\";\n\n      default:\n        return `UNKNOWN (${this._code})`;\n    }\n  }\n  /**\n   * @internal\n   * @param {number} code\n   * @returns {TokenType}\n   */\n\n\n  static _fromCode(code) {\n    switch (code) {\n      case 0:\n        return TokenType.FungibleCommon;\n\n      case 1:\n        return TokenType.NonFungibleUnique;\n    }\n\n    throw new Error(`(BUG) TokenType.fromCode() does not handle code: ${code}`);\n  }\n  /**\n   * @returns {HashgraphProto.proto.TokenType}\n   */\n\n\n  valueOf() {\n    return this._code;\n  }\n\n}\n/**\n * Interchangeable value with one another, where any quantity of them has the\n * same value as another equal quantity if they are in the same class. Share\n * a single set of properties, not distinct from one another. Simply represented\n * as a balance or quantity to a given Hedera account.\n */\n\nTokenType.FungibleCommon = new TokenType(0);\n/**\n * Unique, not interchangeable with other tokens of the same type as they\n * typically have different values. Individually traced and can carry unique\n * properties (e.g. serial number).\n */\n\nTokenType.NonFungibleUnique = new TokenType(1);","map":{"version":3,"sources":["/Users/jithendra/Desktop/Work/hbar-shop/hbar-shopify-coupon-client/node_modules/@hashgraph/sdk/src/token/TokenType.js"],"names":["TokenType","constructor","code","_code","Object","freeze","toString","FungibleCommon","NonFungibleUnique","_fromCode","Error","valueOf"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAEA,eAAe,MAAMA,SAAN,CAAgB;AAC3B;AACJ;AACA;AACA;AACA;AACIC,EAAAA,WAAW,CAACC,IAAD,EAAO;AACd;AACA,SAAKC,KAAL,GAAaD,IAAb;AAEAE,IAAAA,MAAM,CAACC,MAAP,CAAc,IAAd;AACH;AAED;AACJ;AACA;;;AACIC,EAAAA,QAAQ,GAAG;AACP,YAAQ,IAAR;AACI,WAAKN,SAAS,CAACO,cAAf;AACI,eAAO,iBAAP;;AACJ,WAAKP,SAAS,CAACQ,iBAAf;AACI,eAAO,qBAAP;;AACJ;AACI,eAAQ,YAAW,KAAKL,KAAM,GAA9B;AANR;AAQH;AAED;AACJ;AACA;AACA;AACA;;;AACoB,SAATM,SAAS,CAACP,IAAD,EAAO;AACnB,YAAQA,IAAR;AACI,WAAK,CAAL;AACI,eAAOF,SAAS,CAACO,cAAjB;;AACJ,WAAK,CAAL;AACI,eAAOP,SAAS,CAACQ,iBAAjB;AAJR;;AAOA,UAAM,IAAIE,KAAJ,CACD,oDAAmDR,IAAK,EADvD,CAAN;AAGH;AAED;AACJ;AACA;;;AACIS,EAAAA,OAAO,GAAG;AACN,WAAO,KAAKR,KAAZ;AACH;;AAlD0B;AAqD/B;AACA;AACA;AACA;AACA;AACA;;AACAH,SAAS,CAACO,cAAV,GAA2B,IAAIP,SAAJ,CAAc,CAAd,CAA3B;AAEA;AACA;AACA;AACA;AACA;;AACAA,SAAS,CAACQ,iBAAV,GAA8B,IAAIR,SAAJ,CAAc,CAAd,CAA9B","sourcesContent":["/*-\n * ‌\n * Hedera JavaScript SDK\n * ​\n * Copyright (C) 2020 - 2022 Hedera Hashgraph, LLC\n * ​\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * ‍\n */\n\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").proto.TokenType} HashgraphProto.proto.TokenType\n */\n\nexport default class TokenType {\n    /**\n     * @hideconstructor\n     * @internal\n     * @param {number} code\n     */\n    constructor(code) {\n        /** @readonly */\n        this._code = code;\n\n        Object.freeze(this);\n    }\n\n    /**\n     * @returns {string}\n     */\n    toString() {\n        switch (this) {\n            case TokenType.FungibleCommon:\n                return \"FUNGIBLE_COMMON\";\n            case TokenType.NonFungibleUnique:\n                return \"NON_FUNGIBLE_UNIQUE\";\n            default:\n                return `UNKNOWN (${this._code})`;\n        }\n    }\n\n    /**\n     * @internal\n     * @param {number} code\n     * @returns {TokenType}\n     */\n    static _fromCode(code) {\n        switch (code) {\n            case 0:\n                return TokenType.FungibleCommon;\n            case 1:\n                return TokenType.NonFungibleUnique;\n        }\n\n        throw new Error(\n            `(BUG) TokenType.fromCode() does not handle code: ${code}`\n        );\n    }\n\n    /**\n     * @returns {HashgraphProto.proto.TokenType}\n     */\n    valueOf() {\n        return this._code;\n    }\n}\n\n/**\n * Interchangeable value with one another, where any quantity of them has the\n * same value as another equal quantity if they are in the same class. Share\n * a single set of properties, not distinct from one another. Simply represented\n * as a balance or quantity to a given Hedera account.\n */\nTokenType.FungibleCommon = new TokenType(0);\n\n/**\n * Unique, not interchangeable with other tokens of the same type as they\n * typically have different values. Individually traced and can carry unique\n * properties (e.g. serial number).\n */\nTokenType.NonFungibleUnique = new TokenType(1);\n"]},"metadata":{},"sourceType":"module"}