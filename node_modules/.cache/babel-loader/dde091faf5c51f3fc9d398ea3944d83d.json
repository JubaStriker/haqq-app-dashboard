{"ast":null,"code":"/*-\n * ‌\n * Hedera JavaScript SDK\n * ​\n * Copyright (C) 2020 - 2022 Hedera Hashgraph, LLC\n * ​\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * ‍\n */\nimport * as HashgraphProto from \"@hashgraph/proto\";\nexport default class SemanticVersion {\n  /**\n   * @private\n   * @param {object} props\n   * @param {number} props.major\n   * @param {number} props.minor\n   * @param {number} props.patch\n   */\n  constructor(props) {\n    /** @readonly */\n    this.major = props.major;\n    /** @readonly */\n\n    this.minor = props.minor;\n    /** @readonly */\n\n    this.patch = props.patch;\n    Object.freeze(this);\n  }\n  /**\n   * @internal\n   * @param {HashgraphProto.proto.ISemanticVersion} version\n   * @returns {SemanticVersion}\n   */\n\n\n  static _fromProtobuf(version) {\n    return new SemanticVersion({\n      major:\n      /** @type {number} */\n      version.major,\n      minor:\n      /** @type {number} */\n      version.minor,\n      patch:\n      /** @type {number} */\n      version.patch\n    });\n  }\n  /**\n   * @internal\n   * @returns {HashgraphProto.proto.ISemanticVersion}\n   */\n\n\n  _toProtobuf() {\n    return {\n      major: this.major,\n      minor: this.minor,\n      patch: this.patch\n    };\n  }\n  /**\n   * @param {Uint8Array} bytes\n   * @returns {SemanticVersion}\n   */\n\n\n  static fromBytes(bytes) {\n    return SemanticVersion._fromProtobuf(HashgraphProto.proto.SemanticVersion.decode(bytes));\n  }\n  /**\n   * @returns {Uint8Array}\n   */\n\n\n  toBytes() {\n    return HashgraphProto.proto.SemanticVersion.encode(this._toProtobuf()).finish();\n  }\n\n}","map":{"version":3,"sources":["/Users/jithendra/Desktop/Work/hbar-shop/hbar-shopify-coupon-client/node_modules/@hashgraph/sdk/src/network/SemanticVersion.js"],"names":["HashgraphProto","SemanticVersion","constructor","props","major","minor","patch","Object","freeze","_fromProtobuf","version","_toProtobuf","fromBytes","bytes","proto","decode","toBytes","encode","finish"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAO,KAAKA,cAAZ,MAAgC,kBAAhC;AAEA,eAAe,MAAMC,eAAN,CAAsB;AACjC;AACJ;AACA;AACA;AACA;AACA;AACA;AACIC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf;AACA,SAAKC,KAAL,GAAaD,KAAK,CAACC,KAAnB;AACA;;AACA,SAAKC,KAAL,GAAaF,KAAK,CAACE,KAAnB;AACA;;AACA,SAAKC,KAAL,GAAaH,KAAK,CAACG,KAAnB;AAEAC,IAAAA,MAAM,CAACC,MAAP,CAAc,IAAd;AACH;AAED;AACJ;AACA;AACA;AACA;;;AACwB,SAAbC,aAAa,CAACC,OAAD,EAAU;AAC1B,WAAO,IAAIT,eAAJ,CAAoB;AACvBG,MAAAA,KAAK;AAAE;AAAuBM,MAAAA,OAAO,CAACN,KADf;AAEvBC,MAAAA,KAAK;AAAE;AAAuBK,MAAAA,OAAO,CAACL,KAFf;AAGvBC,MAAAA,KAAK;AAAE;AAAuBI,MAAAA,OAAO,CAACJ;AAHf,KAApB,CAAP;AAKH;AAED;AACJ;AACA;AACA;;;AACIK,EAAAA,WAAW,GAAG;AACV,WAAO;AACHP,MAAAA,KAAK,EAAE,KAAKA,KADT;AAEHC,MAAAA,KAAK,EAAE,KAAKA,KAFT;AAGHC,MAAAA,KAAK,EAAE,KAAKA;AAHT,KAAP;AAKH;AAED;AACJ;AACA;AACA;;;AACoB,SAATM,SAAS,CAACC,KAAD,EAAQ;AACpB,WAAOZ,eAAe,CAACQ,aAAhB,CACHT,cAAc,CAACc,KAAf,CAAqBb,eAArB,CAAqCc,MAArC,CAA4CF,KAA5C,CADG,CAAP;AAGH;AAED;AACJ;AACA;;;AACIG,EAAAA,OAAO,GAAG;AACN,WAAOhB,cAAc,CAACc,KAAf,CAAqBb,eAArB,CAAqCgB,MAArC,CACH,KAAKN,WAAL,EADG,EAELO,MAFK,EAAP;AAGH;;AA7DgC","sourcesContent":["/*-\n * ‌\n * Hedera JavaScript SDK\n * ​\n * Copyright (C) 2020 - 2022 Hedera Hashgraph, LLC\n * ​\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * ‍\n */\n\nimport * as HashgraphProto from \"@hashgraph/proto\";\n\nexport default class SemanticVersion {\n    /**\n     * @private\n     * @param {object} props\n     * @param {number} props.major\n     * @param {number} props.minor\n     * @param {number} props.patch\n     */\n    constructor(props) {\n        /** @readonly */\n        this.major = props.major;\n        /** @readonly */\n        this.minor = props.minor;\n        /** @readonly */\n        this.patch = props.patch;\n\n        Object.freeze(this);\n    }\n\n    /**\n     * @internal\n     * @param {HashgraphProto.proto.ISemanticVersion} version\n     * @returns {SemanticVersion}\n     */\n    static _fromProtobuf(version) {\n        return new SemanticVersion({\n            major: /** @type {number} */ (version.major),\n            minor: /** @type {number} */ (version.minor),\n            patch: /** @type {number} */ (version.patch),\n        });\n    }\n\n    /**\n     * @internal\n     * @returns {HashgraphProto.proto.ISemanticVersion}\n     */\n    _toProtobuf() {\n        return {\n            major: this.major,\n            minor: this.minor,\n            patch: this.patch,\n        };\n    }\n\n    /**\n     * @param {Uint8Array} bytes\n     * @returns {SemanticVersion}\n     */\n    static fromBytes(bytes) {\n        return SemanticVersion._fromProtobuf(\n            HashgraphProto.proto.SemanticVersion.decode(bytes)\n        );\n    }\n\n    /**\n     * @returns {Uint8Array}\n     */\n    toBytes() {\n        return HashgraphProto.proto.SemanticVersion.encode(\n            this._toProtobuf()\n        ).finish();\n    }\n}\n"]},"metadata":{},"sourceType":"module"}