{"ast":null,"code":"/*-\n * ‌\n * Hedera JavaScript SDK\n * ​\n * Copyright (C) 2020 - 2022 Hedera Hashgraph, LLC\n * ​\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * ‍\n */\nimport Query, { QUERY_REGISTRY } from \"../query/Query.js\";\nimport ContractId from \"./ContractId.js\";\nimport AccountId from \"../account/AccountId.js\";\nimport ContractFunctionParameters from \"./ContractFunctionParameters.js\";\nimport ContractFunctionResult from \"./ContractFunctionResult.js\";\nimport Long from \"long\";\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").proto.IQuery} HashgraphProto.proto.IQuery\n * @typedef {import(\"@hashgraph/proto\").proto.IQueryHeader} HashgraphProto.proto.IQueryHeader\n * @typedef {import(\"@hashgraph/proto\").proto.IResponse} HashgraphProto.proto.IResponse\n * @typedef {import(\"@hashgraph/proto\").proto.IResponseHeader} HashgraphProto.proto.IResponseHeader\n * @typedef {import(\"@hashgraph/proto\").proto.IContractCallLocalQuery} HashgraphProto.proto.IContractCallLocalQuery\n * @typedef {import(\"@hashgraph/proto\").proto.IContractCallLocalResponse} HashgraphProto.proto.IContractCallLocalResponse\n * @typedef {import(\"@hashgraph/proto\").proto.IContractFunctionResult} HashgraphProto.proto.IContractFunctionResult\n */\n\n/**\n * @typedef {import(\"../channel/Channel.js\").default} Channel\n * @typedef {import(\"../client/Client.js\").default<*, *>} Client\n */\n\n/**\n * @typedef {object} FunctionParameters\n * @property {ContractFunctionParameters} parameters\n * @property {string} name\n */\n\n/**\n * @augments {Query<ContractFunctionResult>}\n */\n\nexport default class ContractCallQuery extends Query {\n  /**\n   * @param {object} [props]\n   * @param {ContractId | string} [props.contractId]\n   * @param {number | Long} [props.gas]\n   * @param {FunctionParameters | Uint8Array} [props.functionParameters]\n   * @param {number | Long} [props.maxResultSize]\n   * @param {AccountId | string} [props.senderAccountId]\n   */\n  constructor() {\n    let props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    super();\n    /**\n     * @private\n     * @type {?ContractId}\n     */\n\n    this._contractId = null;\n\n    if (props.contractId != null) {\n      this.setContractId(props.contractId);\n    }\n    /**\n     * @private\n     * @type {?Long}\n     */\n\n\n    this._gas = null;\n\n    if (props.gas != null) {\n      this.setGas(props.gas);\n    }\n    /**\n     * @private\n     * @type {?Uint8Array}\n     */\n\n\n    this._functionParameters = null;\n\n    if (props.functionParameters != null) {\n      if (props.functionParameters instanceof Uint8Array) {\n        this.setFunctionParameters(props.functionParameters);\n      } else {\n        this.setFunction(props.functionParameters.name, props.functionParameters.parameters);\n      }\n    }\n    /**\n     * @private\n     * @type {?Long}\n     */\n\n\n    this._maxResultSize = null;\n\n    if (props.maxResultSize != null) {\n      this.setMaxResultSize(props.maxResultSize);\n    }\n    /**\n     * @private\n     * @type {?AccountId}\n     */\n\n\n    this._senderAccountId = null;\n\n    if (props.senderAccountId != null) {\n      this.setSenderAccountId(props.senderAccountId);\n    }\n  }\n  /**\n   * @internal\n   * @param {HashgraphProto.proto.IQuery} query\n   * @returns {ContractCallQuery}\n   */\n\n\n  static _fromProtobuf(query) {\n    const call =\n    /** @type {HashgraphProto.proto.IContractCallLocalQuery} */\n    query.contractCallLocal;\n    return new ContractCallQuery({\n      contractId: call.contractID != null ? ContractId._fromProtobuf(call.contractID) : undefined,\n      gas: call.gas != null ? call.gas : undefined,\n      functionParameters: call.functionParameters != null ? call.functionParameters : undefined,\n      maxResultSize: call.maxResultSize != null ? call.maxResultSize : undefined\n    });\n  }\n  /**\n   * @returns {?ContractId}\n   */\n\n\n  get contractId() {\n    return this._contractId;\n  }\n  /**\n   * Set the contract ID for which the call is being requested.\n   *\n   * @param {ContractId | string} contractId\n   * @returns {ContractCallQuery}\n   */\n\n\n  setContractId(contractId) {\n    this._contractId = typeof contractId === \"string\" ? ContractId.fromString(contractId) : contractId.clone();\n    return this;\n  }\n  /**\n   * @returns {?Long}\n   */\n\n\n  get gas() {\n    return this._gas;\n  }\n  /**\n   * @param {number | Long} gas\n   * @returns {ContractCallQuery}\n   */\n\n\n  setGas(gas) {\n    this._gas = gas instanceof Long ? gas : Long.fromValue(gas);\n    return this;\n  }\n  /**\n   * @returns {?AccountId}\n   */\n\n\n  get senderAccountId() {\n    return this._senderAccountId;\n  }\n  /**\n   * @param {AccountId | string} senderAccountId\n   * @returns {ContractCallQuery}\n   */\n\n\n  setSenderAccountId(senderAccountId) {\n    this._senderAccountId = typeof senderAccountId === \"string\" ? AccountId.fromString(senderAccountId) : senderAccountId;\n    return this;\n  }\n  /**\n   * @returns {?Uint8Array}\n   */\n\n\n  get functionParameters() {\n    return this._functionParameters;\n  }\n  /**\n   * @param {Uint8Array} params\n   * @returns {ContractCallQuery}\n   */\n\n\n  setFunctionParameters(params) {\n    this._functionParameters = params;\n    return this;\n  }\n  /**\n   * @param {string} name\n   * @param {?ContractFunctionParameters} [params]\n   * @returns {ContractCallQuery}\n   */\n\n\n  setFunction(name, params) {\n    this._functionParameters = (params != null ? params : new ContractFunctionParameters())._build(name);\n    return this;\n  }\n  /**\n   * @param {number | Long} size\n   * @returns {ContractCallQuery}\n   */\n\n\n  setMaxResultSize(size) {\n    this._maxResultSize = size instanceof Long ? size : Long.fromValue(size);\n    return this;\n  }\n  /**\n   * @param {Client} client\n   */\n\n\n  _validateChecksums(client) {\n    if (this._contractId != null) {\n      this._contractId.validateChecksum(client);\n    }\n  }\n  /**\n   * @override\n   * @internal\n   * @param {Channel} channel\n   * @param {HashgraphProto.proto.IQuery} request\n   * @returns {Promise<HashgraphProto.proto.IResponse>}\n   */\n\n\n  _execute(channel, request) {\n    return channel.smartContract.contractCallLocalMethod(request);\n  }\n  /**\n   * @override\n   * @internal\n   * @param {HashgraphProto.proto.IResponse} response\n   * @returns {HashgraphProto.proto.IResponseHeader}\n   */\n\n\n  _mapResponseHeader(response) {\n    const contractCallLocal =\n    /** @type {HashgraphProto.proto.IContractCallLocalResponse} */\n    response.contractCallLocal;\n    return (\n      /** @type {HashgraphProto.proto.IResponseHeader} */\n      contractCallLocal.header\n    );\n  }\n  /**\n   * @protected\n   * @override\n   * @param {HashgraphProto.proto.IResponse} response\n   * @returns {Promise<ContractFunctionResult>}\n   */\n\n\n  _mapResponse(response) {\n    const call =\n    /**\n     *@type {HashgraphProto.proto.IContractCallLocalResponse}\n     */\n    response.contractCallLocal;\n    return Promise.resolve(ContractFunctionResult._fromProtobuf(\n    /**\n     * @type {HashgraphProto.proto.IContractFunctionResult}\n     */\n    call.functionResult, false));\n  }\n  /**\n   * @override\n   * @internal\n   * @param {HashgraphProto.proto.IQueryHeader} header\n   * @returns {HashgraphProto.proto.IQuery}\n   */\n\n\n  _onMakeRequest(header) {\n    return {\n      contractCallLocal: {\n        header,\n        contractID: this._contractId != null ? this._contractId._toProtobuf() : null,\n        gas: this._gas,\n        maxResultSize: this._maxResultSize,\n        functionParameters: this._functionParameters,\n        senderId: this._senderAccountId != null ? this._senderAccountId._toProtobuf() : null\n      }\n    };\n  }\n  /**\n   * @returns {string}\n   */\n\n\n  _getLogId() {\n    const timestamp = this._paymentTransactionId != null && this._paymentTransactionId.validStart != null ? this._paymentTransactionId.validStart : this._timestamp;\n    return `ContractCallQuery:${timestamp.toString()}`;\n  }\n\n} // eslint-disable-next-line @typescript-eslint/unbound-method\n\nQUERY_REGISTRY.set(\"contractCallLocal\", ContractCallQuery._fromProtobuf);","map":{"version":3,"sources":["/Users/jithendra/Desktop/Work/hbar-shop/hbar-shopify-coupon-client/node_modules/@hashgraph/sdk/src/contract/ContractCallQuery.js"],"names":["Query","QUERY_REGISTRY","ContractId","AccountId","ContractFunctionParameters","ContractFunctionResult","Long","ContractCallQuery","constructor","props","_contractId","contractId","setContractId","_gas","gas","setGas","_functionParameters","functionParameters","Uint8Array","setFunctionParameters","setFunction","name","parameters","_maxResultSize","maxResultSize","setMaxResultSize","_senderAccountId","senderAccountId","setSenderAccountId","_fromProtobuf","query","call","contractCallLocal","contractID","undefined","fromString","clone","fromValue","params","_build","size","_validateChecksums","client","validateChecksum","_execute","channel","request","smartContract","contractCallLocalMethod","_mapResponseHeader","response","header","_mapResponse","Promise","resolve","functionResult","_onMakeRequest","_toProtobuf","senderId","_getLogId","timestamp","_paymentTransactionId","validStart","_timestamp","toString","set"],"mappings":"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","sourcesContent":["/*-\n * ‌\n * Hedera JavaScript SDK\n * ​\n * Copyright (C) 2020 - 2022 Hedera Hashgraph, LLC\n * ​\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * ‍\n */\n\nimport Query, { QUERY_REGISTRY } from \"../query/Query.js\";\nimport ContractId from \"./ContractId.js\";\nimport AccountId from \"../account/AccountId.js\";\nimport ContractFunctionParameters from \"./ContractFunctionParameters.js\";\nimport ContractFunctionResult from \"./ContractFunctionResult.js\";\nimport Long from \"long\";\n\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").proto.IQuery} HashgraphProto.proto.IQuery\n * @typedef {import(\"@hashgraph/proto\").proto.IQueryHeader} HashgraphProto.proto.IQueryHeader\n * @typedef {import(\"@hashgraph/proto\").proto.IResponse} HashgraphProto.proto.IResponse\n * @typedef {import(\"@hashgraph/proto\").proto.IResponseHeader} HashgraphProto.proto.IResponseHeader\n * @typedef {import(\"@hashgraph/proto\").proto.IContractCallLocalQuery} HashgraphProto.proto.IContractCallLocalQuery\n * @typedef {import(\"@hashgraph/proto\").proto.IContractCallLocalResponse} HashgraphProto.proto.IContractCallLocalResponse\n * @typedef {import(\"@hashgraph/proto\").proto.IContractFunctionResult} HashgraphProto.proto.IContractFunctionResult\n */\n\n/**\n * @typedef {import(\"../channel/Channel.js\").default} Channel\n * @typedef {import(\"../client/Client.js\").default<*, *>} Client\n */\n\n/**\n * @typedef {object} FunctionParameters\n * @property {ContractFunctionParameters} parameters\n * @property {string} name\n */\n\n/**\n * @augments {Query<ContractFunctionResult>}\n */\nexport default class ContractCallQuery extends Query {\n    /**\n     * @param {object} [props]\n     * @param {ContractId | string} [props.contractId]\n     * @param {number | Long} [props.gas]\n     * @param {FunctionParameters | Uint8Array} [props.functionParameters]\n     * @param {number | Long} [props.maxResultSize]\n     * @param {AccountId | string} [props.senderAccountId]\n     */\n    constructor(props = {}) {\n        super();\n\n        /**\n         * @private\n         * @type {?ContractId}\n         */\n        this._contractId = null;\n        if (props.contractId != null) {\n            this.setContractId(props.contractId);\n        }\n\n        /**\n         * @private\n         * @type {?Long}\n         */\n        this._gas = null;\n        if (props.gas != null) {\n            this.setGas(props.gas);\n        }\n\n        /**\n         * @private\n         * @type {?Uint8Array}\n         */\n        this._functionParameters = null;\n        if (props.functionParameters != null) {\n            if (props.functionParameters instanceof Uint8Array) {\n                this.setFunctionParameters(props.functionParameters);\n            } else {\n                this.setFunction(\n                    props.functionParameters.name,\n                    props.functionParameters.parameters\n                );\n            }\n        }\n\n        /**\n         * @private\n         * @type {?Long}\n         */\n        this._maxResultSize = null;\n        if (props.maxResultSize != null) {\n            this.setMaxResultSize(props.maxResultSize);\n        }\n\n        /**\n         * @private\n         * @type {?AccountId}\n         */\n        this._senderAccountId = null;\n        if (props.senderAccountId != null) {\n            this.setSenderAccountId(props.senderAccountId);\n        }\n    }\n\n    /**\n     * @internal\n     * @param {HashgraphProto.proto.IQuery} query\n     * @returns {ContractCallQuery}\n     */\n    static _fromProtobuf(query) {\n        const call =\n            /** @type {HashgraphProto.proto.IContractCallLocalQuery} */ (\n                query.contractCallLocal\n            );\n\n        return new ContractCallQuery({\n            contractId:\n                call.contractID != null\n                    ? ContractId._fromProtobuf(call.contractID)\n                    : undefined,\n            gas: call.gas != null ? call.gas : undefined,\n            functionParameters:\n                call.functionParameters != null\n                    ? call.functionParameters\n                    : undefined,\n            maxResultSize:\n                call.maxResultSize != null ? call.maxResultSize : undefined,\n        });\n    }\n\n    /**\n     * @returns {?ContractId}\n     */\n    get contractId() {\n        return this._contractId;\n    }\n\n    /**\n     * Set the contract ID for which the call is being requested.\n     *\n     * @param {ContractId | string} contractId\n     * @returns {ContractCallQuery}\n     */\n    setContractId(contractId) {\n        this._contractId =\n            typeof contractId === \"string\"\n                ? ContractId.fromString(contractId)\n                : contractId.clone();\n\n        return this;\n    }\n\n    /**\n     * @returns {?Long}\n     */\n    get gas() {\n        return this._gas;\n    }\n\n    /**\n     * @param {number | Long} gas\n     * @returns {ContractCallQuery}\n     */\n    setGas(gas) {\n        this._gas = gas instanceof Long ? gas : Long.fromValue(gas);\n        return this;\n    }\n\n    /**\n     * @returns {?AccountId}\n     */\n    get senderAccountId() {\n        return this._senderAccountId;\n    }\n\n    /**\n     * @param {AccountId | string} senderAccountId\n     * @returns {ContractCallQuery}\n     */\n    setSenderAccountId(senderAccountId) {\n        this._senderAccountId =\n            typeof senderAccountId === \"string\"\n                ? AccountId.fromString(senderAccountId)\n                : senderAccountId;\n        return this;\n    }\n\n    /**\n     * @returns {?Uint8Array}\n     */\n    get functionParameters() {\n        return this._functionParameters;\n    }\n\n    /**\n     * @param {Uint8Array} params\n     * @returns {ContractCallQuery}\n     */\n    setFunctionParameters(params) {\n        this._functionParameters = params;\n        return this;\n    }\n\n    /**\n     * @param {string} name\n     * @param {?ContractFunctionParameters} [params]\n     * @returns {ContractCallQuery}\n     */\n    setFunction(name, params) {\n        this._functionParameters = (\n            params != null ? params : new ContractFunctionParameters()\n        )._build(name);\n\n        return this;\n    }\n\n    /**\n     * @param {number | Long} size\n     * @returns {ContractCallQuery}\n     */\n    setMaxResultSize(size) {\n        this._maxResultSize =\n            size instanceof Long ? size : Long.fromValue(size);\n        return this;\n    }\n\n    /**\n     * @param {Client} client\n     */\n    _validateChecksums(client) {\n        if (this._contractId != null) {\n            this._contractId.validateChecksum(client);\n        }\n    }\n\n    /**\n     * @override\n     * @internal\n     * @param {Channel} channel\n     * @param {HashgraphProto.proto.IQuery} request\n     * @returns {Promise<HashgraphProto.proto.IResponse>}\n     */\n    _execute(channel, request) {\n        return channel.smartContract.contractCallLocalMethod(request);\n    }\n\n    /**\n     * @override\n     * @internal\n     * @param {HashgraphProto.proto.IResponse} response\n     * @returns {HashgraphProto.proto.IResponseHeader}\n     */\n    _mapResponseHeader(response) {\n        const contractCallLocal =\n            /** @type {HashgraphProto.proto.IContractCallLocalResponse} */ (\n                response.contractCallLocal\n            );\n        return /** @type {HashgraphProto.proto.IResponseHeader} */ (\n            contractCallLocal.header\n        );\n    }\n\n    /**\n     * @protected\n     * @override\n     * @param {HashgraphProto.proto.IResponse} response\n     * @returns {Promise<ContractFunctionResult>}\n     */\n    _mapResponse(response) {\n        const call =\n            /**\n             *@type {HashgraphProto.proto.IContractCallLocalResponse}\n             */\n            (response.contractCallLocal);\n\n        return Promise.resolve(\n            ContractFunctionResult._fromProtobuf(\n                /**\n                 * @type {HashgraphProto.proto.IContractFunctionResult}\n                 */\n                (call.functionResult),\n                false\n            )\n        );\n    }\n\n    /**\n     * @override\n     * @internal\n     * @param {HashgraphProto.proto.IQueryHeader} header\n     * @returns {HashgraphProto.proto.IQuery}\n     */\n    _onMakeRequest(header) {\n        return {\n            contractCallLocal: {\n                header,\n                contractID:\n                    this._contractId != null\n                        ? this._contractId._toProtobuf()\n                        : null,\n                gas: this._gas,\n                maxResultSize: this._maxResultSize,\n                functionParameters: this._functionParameters,\n                senderId:\n                    this._senderAccountId != null\n                        ? this._senderAccountId._toProtobuf()\n                        : null,\n            },\n        };\n    }\n\n    /**\n     * @returns {string}\n     */\n    _getLogId() {\n        const timestamp =\n            this._paymentTransactionId != null &&\n            this._paymentTransactionId.validStart != null\n                ? this._paymentTransactionId.validStart\n                : this._timestamp;\n\n        return `ContractCallQuery:${timestamp.toString()}`;\n    }\n}\n\n// eslint-disable-next-line @typescript-eslint/unbound-method\nQUERY_REGISTRY.set(\"contractCallLocal\", ContractCallQuery._fromProtobuf);\n"]},"metadata":{},"sourceType":"module"}