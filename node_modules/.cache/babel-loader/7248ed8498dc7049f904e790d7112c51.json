{"ast":null,"code":"/*-\n * ‌\n * Hedera JavaScript SDK\n * ​\n * Copyright (C) 2020 - 2022 Hedera Hashgraph, LLC\n * ​\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * ‍\n */\nimport Query, { QUERY_REGISTRY } from \"../query/Query.js\";\nimport FileId from \"./FileId.js\";\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").proto.IQuery} HashgraphProto.proto.IQuery\n * @typedef {import(\"@hashgraph/proto\").proto.IQueryHeader} HashgraphProto.proto.IQueryHeader\n * @typedef {import(\"@hashgraph/proto\").proto.IResponse} HashgraphProto.proto.IResponse\n * @typedef {import(\"@hashgraph/proto\").proto.IResponseHeader} HashgraphProto.proto.IResponseHeader\n * @typedef {import(\"@hashgraph/proto\").proto.IFileGetContentsQuery} HashgraphProto.proto.IFileGetContentsQuery\n * @typedef {import(\"@hashgraph/proto\").proto.IFileGetContentsResponse} HashgraphProto.proto.IFileGetContentsResponse\n * @typedef {import(\"@hashgraph/proto\").proto.FileGetContentsResponse.IFileContents} HashgraphProto.proto.FileGetContentsResponse.IFileContents\n */\n\n/**\n * @typedef {import(\"../channel/Channel.js\").default} Channel\n * @typedef {import(\"../client/Client.js\").default<*, *>} Client\n * @typedef {import(\"../account/AccountId.js\").default} AccountId\n */\n\n/**\n * @augments {Query<Uint8Array>}\n */\n\nexport default class FileContentsQuery extends Query {\n  /**\n   * @param {object} [props]\n   * @param {FileId | string} [props.fileId]\n   */\n  constructor() {\n    let props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    super();\n    /**\n     * @type {?FileId}\n     * @private\n     */\n\n    this._fileId = null;\n\n    if (props.fileId != null) {\n      this.setFileId(props.fileId);\n    }\n  }\n  /**\n   * @internal\n   * @param {HashgraphProto.proto.IQuery} query\n   * @returns {FileContentsQuery}\n   */\n\n\n  static _fromProtobuf(query) {\n    const contents =\n    /** @type {HashgraphProto.proto.IFileGetContentsQuery} */\n    query.fileGetContents;\n    return new FileContentsQuery({\n      fileId: contents.fileID != null ? FileId._fromProtobuf(contents.fileID) : undefined\n    });\n  }\n  /**\n   * @param {Client} client\n   */\n\n\n  _validateChecksums(client) {\n    if (this._fileId != null) {\n      this._fileId.validateChecksum(client);\n    }\n  }\n  /**\n   * @override\n   * @internal\n   * @param {Channel} channel\n   * @param {HashgraphProto.proto.IQuery} request\n   * @returns {Promise<HashgraphProto.proto.IResponse>}\n   */\n\n\n  _execute(channel, request) {\n    return channel.file.getFileContent(request);\n  }\n  /**\n   * @returns {?FileId}\n   */\n\n\n  get fileId() {\n    return this._fileId;\n  }\n  /**\n   * Set the file ID for which the info is being requested.\n   *\n   * @param {FileId | string} fileId\n   * @returns {FileContentsQuery}\n   */\n\n\n  setFileId(fileId) {\n    this._fileId = typeof fileId === \"string\" ? FileId.fromString(fileId) : fileId.clone();\n    return this;\n  }\n  /**\n   * @override\n   * @internal\n   * @param {HashgraphProto.proto.IResponse} response\n   * @returns {HashgraphProto.proto.IResponseHeader}\n   */\n\n\n  _mapResponseHeader(response) {\n    const fileGetContents =\n    /** @type {HashgraphProto.proto.IFileGetContentsResponse} */\n    response.fileGetContents;\n    return (\n      /** @type {HashgraphProto.proto.IResponseHeader} */\n      fileGetContents.header\n    );\n  }\n  /**\n   * @protected\n   * @override\n   * @param {HashgraphProto.proto.IResponse} response\n   * @returns {Promise<Uint8Array>}\n   */\n\n\n  _mapResponse(response) {\n    const fileContentsResponse =\n    /** @type {HashgraphProto.proto.IFileGetContentsResponse} */\n    response.fileGetContents;\n    const fileConents =\n    /** @type {HashgraphProto.proto.FileGetContentsResponse.IFileContents} */\n    fileContentsResponse.fileContents;\n    const contents =\n    /** @type {Uint8Array} */\n    fileConents.contents;\n    return Promise.resolve(contents);\n  }\n  /**\n   * @override\n   * @internal\n   * @param {HashgraphProto.proto.IQueryHeader} header\n   * @returns {HashgraphProto.proto.IQuery}\n   */\n\n\n  _onMakeRequest(header) {\n    return {\n      fileGetContents: {\n        header,\n        fileID: this._fileId != null ? this._fileId._toProtobuf() : null\n      }\n    };\n  }\n  /**\n   * @returns {string}\n   */\n\n\n  _getLogId() {\n    const timestamp = this._paymentTransactionId != null && this._paymentTransactionId.validStart != null ? this._paymentTransactionId.validStart : this._timestamp;\n    return `FileContentsQuery:${timestamp.toString()}`;\n  }\n\n} // eslint-disable-next-line @typescript-eslint/unbound-method\n\nQUERY_REGISTRY.set(\"fileGetContents\", FileContentsQuery._fromProtobuf);","map":{"version":3,"sources":["/Users/jithendra/Desktop/Work/hbar-shop/hbar-shopify-coupon-client/node_modules/@hashgraph/sdk/src/file/FileContentsQuery.js"],"names":["Query","QUERY_REGISTRY","FileId","FileContentsQuery","constructor","props","_fileId","fileId","setFileId","_fromProtobuf","query","contents","fileGetContents","fileID","undefined","_validateChecksums","client","validateChecksum","_execute","channel","request","file","getFileContent","fromString","clone","_mapResponseHeader","response","header","_mapResponse","fileContentsResponse","fileConents","fileContents","Promise","resolve","_onMakeRequest","_toProtobuf","_getLogId","timestamp","_paymentTransactionId","validStart","_timestamp","toString","set"],"mappings":"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","sourcesContent":["/*-\n * ‌\n * Hedera JavaScript SDK\n * ​\n * Copyright (C) 2020 - 2022 Hedera Hashgraph, LLC\n * ​\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * ‍\n */\n\nimport Query, { QUERY_REGISTRY } from \"../query/Query.js\";\nimport FileId from \"./FileId.js\";\n\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").proto.IQuery} HashgraphProto.proto.IQuery\n * @typedef {import(\"@hashgraph/proto\").proto.IQueryHeader} HashgraphProto.proto.IQueryHeader\n * @typedef {import(\"@hashgraph/proto\").proto.IResponse} HashgraphProto.proto.IResponse\n * @typedef {import(\"@hashgraph/proto\").proto.IResponseHeader} HashgraphProto.proto.IResponseHeader\n * @typedef {import(\"@hashgraph/proto\").proto.IFileGetContentsQuery} HashgraphProto.proto.IFileGetContentsQuery\n * @typedef {import(\"@hashgraph/proto\").proto.IFileGetContentsResponse} HashgraphProto.proto.IFileGetContentsResponse\n * @typedef {import(\"@hashgraph/proto\").proto.FileGetContentsResponse.IFileContents} HashgraphProto.proto.FileGetContentsResponse.IFileContents\n */\n\n/**\n * @typedef {import(\"../channel/Channel.js\").default} Channel\n * @typedef {import(\"../client/Client.js\").default<*, *>} Client\n * @typedef {import(\"../account/AccountId.js\").default} AccountId\n */\n\n/**\n * @augments {Query<Uint8Array>}\n */\nexport default class FileContentsQuery extends Query {\n    /**\n     * @param {object} [props]\n     * @param {FileId | string} [props.fileId]\n     */\n    constructor(props = {}) {\n        super();\n\n        /**\n         * @type {?FileId}\n         * @private\n         */\n        this._fileId = null;\n        if (props.fileId != null) {\n            this.setFileId(props.fileId);\n        }\n    }\n\n    /**\n     * @internal\n     * @param {HashgraphProto.proto.IQuery} query\n     * @returns {FileContentsQuery}\n     */\n    static _fromProtobuf(query) {\n        const contents =\n            /** @type {HashgraphProto.proto.IFileGetContentsQuery} */ (\n                query.fileGetContents\n            );\n\n        return new FileContentsQuery({\n            fileId:\n                contents.fileID != null\n                    ? FileId._fromProtobuf(contents.fileID)\n                    : undefined,\n        });\n    }\n\n    /**\n     * @param {Client} client\n     */\n    _validateChecksums(client) {\n        if (this._fileId != null) {\n            this._fileId.validateChecksum(client);\n        }\n    }\n\n    /**\n     * @override\n     * @internal\n     * @param {Channel} channel\n     * @param {HashgraphProto.proto.IQuery} request\n     * @returns {Promise<HashgraphProto.proto.IResponse>}\n     */\n    _execute(channel, request) {\n        return channel.file.getFileContent(request);\n    }\n\n    /**\n     * @returns {?FileId}\n     */\n    get fileId() {\n        return this._fileId;\n    }\n\n    /**\n     * Set the file ID for which the info is being requested.\n     *\n     * @param {FileId | string} fileId\n     * @returns {FileContentsQuery}\n     */\n    setFileId(fileId) {\n        this._fileId =\n            typeof fileId === \"string\"\n                ? FileId.fromString(fileId)\n                : fileId.clone();\n\n        return this;\n    }\n\n    /**\n     * @override\n     * @internal\n     * @param {HashgraphProto.proto.IResponse} response\n     * @returns {HashgraphProto.proto.IResponseHeader}\n     */\n    _mapResponseHeader(response) {\n        const fileGetContents =\n            /** @type {HashgraphProto.proto.IFileGetContentsResponse} */ (\n                response.fileGetContents\n            );\n        return /** @type {HashgraphProto.proto.IResponseHeader} */ (\n            fileGetContents.header\n        );\n    }\n\n    /**\n     * @protected\n     * @override\n     * @param {HashgraphProto.proto.IResponse} response\n     * @returns {Promise<Uint8Array>}\n     */\n    _mapResponse(response) {\n        const fileContentsResponse =\n            /** @type {HashgraphProto.proto.IFileGetContentsResponse} */ (\n                response.fileGetContents\n            );\n        const fileConents =\n            /** @type {HashgraphProto.proto.FileGetContentsResponse.IFileContents} */ (\n                fileContentsResponse.fileContents\n            );\n        const contents = /** @type {Uint8Array} */ (fileConents.contents);\n\n        return Promise.resolve(contents);\n    }\n\n    /**\n     * @override\n     * @internal\n     * @param {HashgraphProto.proto.IQueryHeader} header\n     * @returns {HashgraphProto.proto.IQuery}\n     */\n    _onMakeRequest(header) {\n        return {\n            fileGetContents: {\n                header,\n                fileID:\n                    this._fileId != null ? this._fileId._toProtobuf() : null,\n            },\n        };\n    }\n\n    /**\n     * @returns {string}\n     */\n    _getLogId() {\n        const timestamp =\n            this._paymentTransactionId != null &&\n            this._paymentTransactionId.validStart != null\n                ? this._paymentTransactionId.validStart\n                : this._timestamp;\n\n        return `FileContentsQuery:${timestamp.toString()}`;\n    }\n}\n\n// eslint-disable-next-line @typescript-eslint/unbound-method\nQUERY_REGISTRY.set(\"fileGetContents\", FileContentsQuery._fromProtobuf);\n"]},"metadata":{},"sourceType":"module"}