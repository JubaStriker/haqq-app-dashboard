{"ast":null,"code":"var bech32 = require('./crypto/bech32'); // bip 173 bech 32 addresses (https://github.com/bitcoin/bips/blob/master/bip-0173.mediawiki)\n\n\nmodule.exports = {\n  isValidAddress: function (address, currency) {\n    let opts = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    const {\n      networkType = 'prod'\n    } = opts;\n    const decoded = bech32.decode(address, bech32.encodings.BECH32);\n\n    if (!decoded) {\n      return false;\n    }\n\n    const bech32Hrp = decoded.hrp;\n    let correctBech32Hrps;\n\n    if (networkType === 'prod' || networkType === 'testnet') {\n      correctBech32Hrps = currency.bech32Hrp[networkType];\n    } else if (currency.bech32Hrp) {\n      correctBech32Hrps = currency.bech32Hrp.prod.concat(currency.bech32Hrp.testnet);\n    } else {\n      return false;\n    }\n\n    if (correctBech32Hrps.indexOf(bech32Hrp) === -1) {\n      return false;\n    }\n\n    return true;\n  }\n};","map":{"version":3,"sources":["/Users/jithendra/Desktop/Work/hbar-shop/hbar-shopify-coupon-client/node_modules/multicoin-address-validator/src/bip173_validator.js"],"names":["bech32","require","module","exports","isValidAddress","address","currency","opts","networkType","decoded","decode","encodings","BECH32","bech32Hrp","hrp","correctBech32Hrps","prod","concat","testnet","indexOf"],"mappings":"AAAA,IAAIA,MAAM,GAAGC,OAAO,CAAC,iBAAD,CAApB,C,CAEA;;;AACAC,MAAM,CAACC,OAAP,GAAiB;AACbC,EAAAA,cAAc,EAAE,UAAUC,OAAV,EAAmBC,QAAnB,EAAwC;AAAA,QAAXC,IAAW,uEAAJ,EAAI;AACpD,UAAM;AAAEC,MAAAA,WAAW,GAAG;AAAhB,QAA2BD,IAAjC;AACA,UAAME,OAAO,GAAGT,MAAM,CAACU,MAAP,CAAcL,OAAd,EAAuBL,MAAM,CAACW,SAAP,CAAiBC,MAAxC,CAAhB;;AACA,QAAI,CAACH,OAAL,EAAc;AACV,aAAO,KAAP;AACH;;AAED,UAAMI,SAAS,GAAGJ,OAAO,CAACK,GAA1B;AACA,QAAIC,iBAAJ;;AACA,QAAIP,WAAW,KAAK,MAAhB,IAA0BA,WAAW,KAAK,SAA9C,EAAyD;AACrDO,MAAAA,iBAAiB,GAAGT,QAAQ,CAACO,SAAT,CAAmBL,WAAnB,CAApB;AACH,KAFD,MAEO,IAAIF,QAAQ,CAACO,SAAb,EAAwB;AAC3BE,MAAAA,iBAAiB,GAAGT,QAAQ,CAACO,SAAT,CAAmBG,IAAnB,CAAwBC,MAAxB,CAA+BX,QAAQ,CAACO,SAAT,CAAmBK,OAAlD,CAApB;AACH,KAFM,MAEA;AACH,aAAO,KAAP;AACH;;AAED,QAAIH,iBAAiB,CAACI,OAAlB,CAA0BN,SAA1B,MAAyC,CAAC,CAA9C,EAAiD;AAC7C,aAAO,KAAP;AACH;;AAED,WAAO,IAAP;AACH;AAvBY,CAAjB","sourcesContent":["var bech32 = require('./crypto/bech32');\n\n// bip 173 bech 32 addresses (https://github.com/bitcoin/bips/blob/master/bip-0173.mediawiki)\nmodule.exports = {\n    isValidAddress: function (address, currency, opts = {}) {\n        const { networkType = 'prod' } = opts;\n        const decoded = bech32.decode(address, bech32.encodings.BECH32);\n        if (!decoded) {\n            return false;\n        }\n\n        const bech32Hrp = decoded.hrp;\n        let correctBech32Hrps;\n        if (networkType === 'prod' || networkType === 'testnet') {\n            correctBech32Hrps = currency.bech32Hrp[networkType];\n        } else if (currency.bech32Hrp) {\n            correctBech32Hrps = currency.bech32Hrp.prod.concat(currency.bech32Hrp.testnet)\n        } else {\n            return false;\n        }\n\n        if (correctBech32Hrps.indexOf(bech32Hrp) === -1) {\n            return false;\n        }\n\n        return true;\n    }\n};\n"]},"metadata":{},"sourceType":"script"}