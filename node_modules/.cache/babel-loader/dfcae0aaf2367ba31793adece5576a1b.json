{"ast":null,"code":"var BTCValidator = require('./bitcoin_validator');\n\nvar ETHValidator = require('./ethereum_validator');\n\nfunction checkBothValidators(address, currency, networkType) {\n  var result = BTCValidator.isValidAddress(address, currency, networkType);\n  return result ? result : ETHValidator.isValidAddress(address, currency, networkType);\n}\n\nmodule.exports = {\n  isValidAddress: function (address, currency, opts) {\n    if (opts) {\n      if (opts.chainType === 'erc20') {\n        return ETHValidator.isValidAddress(address, currency, opts.networkType);\n      } else if (opts.chainType === 'omni') {\n        return BTCValidator.isValidAddress(address, currency, opts.networkType);\n      }\n    }\n\n    return checkBothValidators(address, currency, opts);\n  }\n};","map":{"version":3,"sources":["/Users/jithendra/Desktop/Work/hbar-shop/xrp-shopify-coupon-client/node_modules/multicoin-address-validator/src/usdt_validator.js"],"names":["BTCValidator","require","ETHValidator","checkBothValidators","address","currency","networkType","result","isValidAddress","module","exports","opts","chainType"],"mappings":"AAAA,IAAIA,YAAY,GAAGC,OAAO,CAAC,qBAAD,CAA1B;;AACA,IAAIC,YAAY,GAAGD,OAAO,CAAC,sBAAD,CAA1B;;AAEA,SAASE,mBAAT,CAA6BC,OAA7B,EAAsCC,QAAtC,EAAgDC,WAAhD,EAA6D;AACzD,MAAIC,MAAM,GAAGP,YAAY,CAACQ,cAAb,CAA4BJ,OAA5B,EAAqCC,QAArC,EAA+CC,WAA/C,CAAb;AACA,SAAOC,MAAM,GAAGA,MAAH,GACTL,YAAY,CAACM,cAAb,CAA4BJ,OAA5B,EAAqCC,QAArC,EAA+CC,WAA/C,CADJ;AAEH;;AAEDG,MAAM,CAACC,OAAP,GAAiB;AACbF,EAAAA,cAAc,EAAE,UAAUJ,OAAV,EAAmBC,QAAnB,EAA6BM,IAA7B,EAAmC;AAC/C,QAAIA,IAAJ,EAAU;AACN,UAAIA,IAAI,CAACC,SAAL,KAAmB,OAAvB,EAAgC;AAC5B,eAAOV,YAAY,CAACM,cAAb,CAA4BJ,OAA5B,EAAqCC,QAArC,EAA+CM,IAAI,CAACL,WAApD,CAAP;AACH,OAFD,MAEO,IAAIK,IAAI,CAACC,SAAL,KAAmB,MAAvB,EAA+B;AAClC,eAAOZ,YAAY,CAACQ,cAAb,CAA4BJ,OAA5B,EAAqCC,QAArC,EAA+CM,IAAI,CAACL,WAApD,CAAP;AACH;AACJ;;AACD,WAAOH,mBAAmB,CAACC,OAAD,EAAUC,QAAV,EAAoBM,IAApB,CAA1B;AACH;AAVY,CAAjB","sourcesContent":["var BTCValidator = require('./bitcoin_validator');\nvar ETHValidator = require('./ethereum_validator');\n\nfunction checkBothValidators(address, currency, networkType) {\n    var result = BTCValidator.isValidAddress(address, currency, networkType);\n    return result ? result :\n        ETHValidator.isValidAddress(address, currency, networkType);\n}\n\nmodule.exports = {\n    isValidAddress: function (address, currency, opts) {\n        if (opts) {\n            if (opts.chainType === 'erc20') {\n                return ETHValidator.isValidAddress(address, currency, opts.networkType);\n            } else if (opts.chainType === 'omni') {\n                return BTCValidator.isValidAddress(address, currency, opts.networkType);\n            }\n        }\n        return checkBothValidators(address, currency, opts);\n    }\n};\n"]},"metadata":{},"sourceType":"script"}