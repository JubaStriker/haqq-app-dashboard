{"ast":null,"code":"import create from 'zustand';\nimport produce from 'immer';\nimport axios from 'axios';\nimport { INTERNAL_SERVER_ERROR } from '../../constants/strings';\nconst INITIAL_CURRENCY_EXCHANGE_SATAE = {\n  get: {\n    loading: false,\n    success: {\n      ok: false,\n      data: []\n    },\n    failure: {\n      error: false,\n      message: \"\"\n    }\n  }\n};\nconst useCurrencyExchangeStore = create(set => ({\n  currencyExchangeState: INITIAL_CURRENCY_EXCHANGE_SATAE,\n  getCurrencyExchangeSate: async _ref => {\n    let {\n      storeCurrency,\n      exchangeCurrency\n    } = _ref;\n    set(produce(state => ({ ...state,\n      currencyExchangeState: { ...state.currencyExchangeState,\n        get: { ...INITIAL_CURRENCY_EXCHANGE_SATAE.get,\n          loading: true\n        }\n      }\n    })));\n\n    try {\n      const data = await axios.get(`https://api.coingecko.com/api/v3/simple/price?ids=${storeCurrency}&vs_currencies=${exchangeCurrency}`);\n      set(produce(state => ({ ...state,\n        currencyExchangeState: { ...state.currencyExchangeState,\n          get: { ...INITIAL_CURRENCY_EXCHANGE_SATAE.get,\n            success: {\n              ok: true,\n              data: data\n            }\n          }\n        }\n      })));\n      return data;\n    } catch (e) {\n      console.log(error);\n    }\n  }\n}));\nexport default useCurrencyExchangeStore;","map":{"version":3,"sources":["/Users/jithendra/Desktop/Work/meta-soft-xrp/xrp-shopify-coupon-client/src/store/currency-exchage/index.js"],"names":["create","produce","axios","INTERNAL_SERVER_ERROR","INITIAL_CURRENCY_EXCHANGE_SATAE","get","loading","success","ok","data","failure","error","message","useCurrencyExchangeStore","set","currencyExchangeState","getCurrencyExchangeSate","storeCurrency","exchangeCurrency","state","e","console","log"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,SAAnB;AACA,OAAOC,OAAP,MAAoB,OAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,qBAAT,QAAsC,yBAAtC;AAEA,MAAMC,+BAA+B,GAAG;AACpCC,EAAAA,GAAG,EAAC;AACAC,IAAAA,OAAO,EAAE,KADT;AAEJC,IAAAA,OAAO,EAAE;AACPC,MAAAA,EAAE,EAAE,KADG;AAEPC,MAAAA,IAAI,EAAE;AAFC,KAFL;AAMJC,IAAAA,OAAO,EAAE;AACPC,MAAAA,KAAK,EAAE,KADA;AAEPC,MAAAA,OAAO,EAAE;AAFF;AANL;AADgC,CAAxC;AAcA,MAAMC,wBAAwB,GAAGb,MAAM,CAAEc,GAAD,KAAU;AAC9CC,EAAAA,qBAAqB,EAAEX,+BADuB;AAE9CY,EAAAA,uBAAuB,EAAE,cAA6C;AAAA,QAAtC;AAACC,MAAAA,aAAD;AAAgBC,MAAAA;AAAhB,KAAsC;AAClEJ,IAAAA,GAAG,CACCb,OAAO,CAAEkB,KAAD,KAAY,EAChB,GAAGA,KADa;AAEhBJ,MAAAA,qBAAqB,EAAE,EACnB,GAAGI,KAAK,CAACJ,qBADU;AAEnBV,QAAAA,GAAG,EAAE,EACD,GAAGD,+BAA+B,CAACC,GADlC;AAEDC,UAAAA,OAAO,EAAE;AAFR;AAFc;AAFP,KAAZ,CAAD,CADR,CAAH;;AAaA,QAAG;AACC,YAAMG,IAAI,GAAG,MAAMP,KAAK,CAACG,GAAN,CAAW,qDAAoDY,aAAc,kBAAiBC,gBAAiB,EAA/G,CAAnB;AACAJ,MAAAA,GAAG,CACCb,OAAO,CAAEkB,KAAD,KAAY,EAChB,GAAGA,KADa;AAEhBJ,QAAAA,qBAAqB,EAAE,EACnB,GAAGI,KAAK,CAACJ,qBADU;AAEnBV,UAAAA,GAAG,EAAE,EACD,GAAGD,+BAA+B,CAACC,GADlC;AAEDE,YAAAA,OAAO,EAAE;AACLC,cAAAA,EAAE,EAAE,IADC;AAELC,cAAAA,IAAI,EAAEA;AAFD;AAFR;AAFc;AAFP,OAAZ,CAAD,CADR,CAAH;AAeA,aAAOA,IAAP;AACH,KAlBD,CAkBE,OAAOW,CAAP,EAAS;AACPC,MAAAA,OAAO,CAACC,GAAR,CAAYX,KAAZ;AACH;AACJ;AArC6C,CAAV,CAAD,CAAvC;AAwCA,eAAeE,wBAAf","sourcesContent":["import create from 'zustand';\nimport produce from 'immer';\nimport axios from 'axios';\nimport { INTERNAL_SERVER_ERROR } from '../../constants/strings';\n\nconst INITIAL_CURRENCY_EXCHANGE_SATAE = {\n    get:{\n        loading: false,\n    success: {\n      ok: false,\n      data: [],\n    },\n    failure: {\n      error: false,\n      message: \"\",\n    },\n    }\n}\n\nconst useCurrencyExchangeStore = create((set) => ({\n    currencyExchangeState: INITIAL_CURRENCY_EXCHANGE_SATAE,\n    getCurrencyExchangeSate: async ({storeCurrency, exchangeCurrency}) => {\n        set(\n            produce((state) => ({\n                ...state,\n                currencyExchangeState: {\n                    ...state.currencyExchangeState,\n                    get: {\n                        ...INITIAL_CURRENCY_EXCHANGE_SATAE.get,\n                        loading: true,\n                    }\n                }\n            }))\n        )\n\n        try{ \n            const data = await axios.get(`https://api.coingecko.com/api/v3/simple/price?ids=${storeCurrency}&vs_currencies=${exchangeCurrency}`)\n            set(\n                produce((state) => ({\n                    ...state,\n                    currencyExchangeState: {\n                        ...state.currencyExchangeState,\n                        get: {\n                            ...INITIAL_CURRENCY_EXCHANGE_SATAE.get,\n                            success: {\n                                ok: true,\n                                data: data,\n                            }\n                        }\n                    }\n                }))\n            )\n            return data;\n        } catch (e){\n            console.log(error);\n        }\n    }\n}))\n\nexport default useCurrencyExchangeStore"]},"metadata":{},"sourceType":"module"}