{"ast":null,"code":"var _jsxFileName = \"/Users/jithendra/Desktop/Work/meta-soft-xrp/xrp-shopify-coupon-client/src/routes/transaction/index.js\",\n    _s = $RefreshSig$();\n\nimport { Box, Container, Heading, Table, TableContainer, Th, Thead, Tr, Tbody, Td, VStack, Text, Divider, useColorMode, Link } from \"@chakra-ui/react\";\nimport { useContext, useEffect, useState } from \"react\";\nimport NavBar from \"../../components/navbar\";\nimport { ShopContext } from \"../../context\";\nimport useTransactionStore from \"../../store/transaction\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst TransactionRoute = () => {\n  _s();\n\n  const shop = useContext(ShopContext);\n  const transactionState = useTransactionStore(state => state.transactionState);\n  const getTransactionState = useTransactionStore(state => state.getTransactionState);\n  useEffect(async () => {\n    getTransactionState(shop);\n  }, []);\n\n  if (transactionState.get.loading) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        children: \"Loading.....\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  } else if (transactionState.get.success.ok) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        children: \"LOADED....\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  } // return (\n  //   <>\n  //     <Container\n  //       maxW={\"7xl\"}\n  //       p={[12, 6]}\n  //       h=\"100vh\"\n  //       bg=\"#f6f6f7\"\n  //       textAlign={\"left\"}\n  //     >\n  //       <Box bg=\"white\" width={\"5xl\"} m=\"auto\" p={5} borderRadius=\"10px\">\n  //         <VStack spacing={2} align=\"stretch\">\n  //           <Box>\n  //             <Text size=\"xl\" fontWeight=\"bold\">\n  //               XRP Transaction Details\n  //             </Text>\n  //             <Divider borderColor=\"gray.200\" />\n  //           </Box>\n  //         </VStack>\n  //         {/* {transactionState.get.success.data?.result?.transactions.map((details) => (\n  //          <Text>{details.tx.Account}</Text>\n  //        ))} */}\n  //         <TableContainer p=\"5\">\n  //           <Table variant={\"simple\"}>\n  //             <Thead>\n  //               <Tr>\n  //                 <Th>Account</Th>\n  //                 <Th isNumeric>Amount</Th>\n  //                 <Th>Ledger Index</Th>\n  //                 <Th>Fee</Th>\n  //                 <Th>Transaction Ref</Th>\n  //               </Tr>\n  //             </Thead>\n  //             <Tbody>\n  //               {transactionState.get.success.data?.result?.transactions.map(\n  //                 (details) => (\n  //                   // <Text>{details.tx.Account}</Text>\n  //                   <Tr>\n  //                     <Td>{details.tx.Account}</Td>\n  //                     <Td isNumeric>\n  //                       {window.xrpl.dropsToXrp(details.tx.Amount)}\n  //                     </Td>\n  //                     <Td>{details.tx.inLedger}</Td>\n  //                     <Td>{details.tx.Fee}</Td>\n  //                     <Td>\n  //                       <Link\n  //                         color=\"teal\"\n  //                         target=\"_blank\"\n  //                         href={`${process.env.REACT_APP_XRP_TRANSACTION_REFFERENCE}transactions/${details.tx.hash}`}\n  //                       >\n  //                         {details.tx.hash}\n  //                       </Link>\n  //                     </Td>\n  //                   </Tr>\n  //                 )\n  //               )}\n  //             </Tbody>\n  //           </Table>\n  //         </TableContainer>\n  //       </Box>\n  //     </Container>\n  //   </>\n  // );\n\n};\n\n_s(TransactionRoute, \"XkI+nRKMWI4V9xNt3yDarm/vj88=\", false, function () {\n  return [useTransactionStore, useTransactionStore];\n});\n\n_c = TransactionRoute;\nexport default TransactionRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"TransactionRoute\");","map":{"version":3,"sources":["/Users/jithendra/Desktop/Work/meta-soft-xrp/xrp-shopify-coupon-client/src/routes/transaction/index.js"],"names":["Box","Container","Heading","Table","TableContainer","Th","Thead","Tr","Tbody","Td","VStack","Text","Divider","useColorMode","Link","useContext","useEffect","useState","NavBar","ShopContext","useTransactionStore","TransactionRoute","shop","transactionState","state","getTransactionState","get","loading","success","ok"],"mappings":";;;AAAA,SACEA,GADF,EAEEC,SAFF,EAGEC,OAHF,EAIEC,KAJF,EAKEC,cALF,EAMEC,EANF,EAOEC,KAPF,EAQEC,EARF,EASEC,KATF,EAUEC,EAVF,EAWEC,MAXF,EAYEC,IAZF,EAaEC,OAbF,EAcEC,YAdF,EAeEC,IAfF,QAgBO,kBAhBP;AAiBA,SAASC,UAAT,EAAqBC,SAArB,EAAgCC,QAAhC,QAAgD,OAAhD;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,OAAOC,mBAAP,MAAgC,yBAAhC;;;;AAEA,MAAMC,gBAAgB,GAAG,MAAM;AAAA;;AAC7B,QAAMC,IAAI,GAAGP,UAAU,CAACI,WAAD,CAAvB;AACA,QAAMI,gBAAgB,GAAGH,mBAAmB,CACzCI,KAAD,IAAWA,KAAK,CAACD,gBADyB,CAA5C;AAGA,QAAME,mBAAmB,GAAGL,mBAAmB,CAC5CI,KAAD,IAAWA,KAAK,CAACC,mBAD4B,CAA/C;AAIAT,EAAAA,SAAS,CAAC,YAAY;AACpBS,IAAAA,mBAAmB,CAACH,IAAD,CAAnB;AACD,GAFQ,EAEN,EAFM,CAAT;;AAIA,MAAIC,gBAAgB,CAACG,GAAjB,CAAqBC,OAAzB,EAAkC;AAChC,wBACE;AAAA,8BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA,oBADF;AAMD,GAPD,MAOO,IAAIJ,gBAAgB,CAACG,GAAjB,CAAqBE,OAArB,CAA6BC,EAAjC,EAAqC;AAC1C,wBACE;AAAA,8BACA,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADA,eAEE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA,oBADF;AAMD,GA3B4B,CA6B7B;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACD,CA5FD;;GAAMR,gB;UAEqBD,mB,EAGGA,mB;;;KALxBC,gB;AA8FN,eAAeA,gBAAf","sourcesContent":["import {\n  Box,\n  Container,\n  Heading,\n  Table,\n  TableContainer,\n  Th,\n  Thead,\n  Tr,\n  Tbody,\n  Td,\n  VStack,\n  Text,\n  Divider,\n  useColorMode,\n  Link,\n} from \"@chakra-ui/react\";\nimport { useContext, useEffect, useState } from \"react\";\nimport NavBar from \"../../components/navbar\";\nimport { ShopContext } from \"../../context\";\nimport useTransactionStore from \"../../store/transaction\";\n\nconst TransactionRoute = () => {\n  const shop = useContext(ShopContext);\n  const transactionState = useTransactionStore(\n    (state) => state.transactionState\n  );\n  const getTransactionState = useTransactionStore(\n    (state) => state.getTransactionState\n  );\n\n  useEffect(async () => {\n    getTransactionState(shop);\n  }, []);\n\n  if (transactionState.get.loading) {\n    return (\n      <>\n        <NavBar />\n        <Text>Loading.....</Text>\n      </>\n    );\n  } else if (transactionState.get.success.ok) {\n    return (\n      <>\n      <NavBar />\n        <Text>LOADED....</Text>\n      </>\n    );\n  }\n\n  // return (\n  //   <>\n      \n  //     <Container\n  //       maxW={\"7xl\"}\n  //       p={[12, 6]}\n  //       h=\"100vh\"\n  //       bg=\"#f6f6f7\"\n  //       textAlign={\"left\"}\n  //     >\n  //       <Box bg=\"white\" width={\"5xl\"} m=\"auto\" p={5} borderRadius=\"10px\">\n  //         <VStack spacing={2} align=\"stretch\">\n  //           <Box>\n  //             <Text size=\"xl\" fontWeight=\"bold\">\n  //               XRP Transaction Details\n  //             </Text>\n  //             <Divider borderColor=\"gray.200\" />\n  //           </Box>\n  //         </VStack>\n  //         {/* {transactionState.get.success.data?.result?.transactions.map((details) => (\n  //          <Text>{details.tx.Account}</Text>\n  //        ))} */}\n  //         <TableContainer p=\"5\">\n  //           <Table variant={\"simple\"}>\n  //             <Thead>\n  //               <Tr>\n  //                 <Th>Account</Th>\n  //                 <Th isNumeric>Amount</Th>\n  //                 <Th>Ledger Index</Th>\n  //                 <Th>Fee</Th>\n  //                 <Th>Transaction Ref</Th>\n  //               </Tr>\n  //             </Thead>\n  //             <Tbody>\n  //               {transactionState.get.success.data?.result?.transactions.map(\n  //                 (details) => (\n  //                   // <Text>{details.tx.Account}</Text>\n  //                   <Tr>\n  //                     <Td>{details.tx.Account}</Td>\n  //                     <Td isNumeric>\n  //                       {window.xrpl.dropsToXrp(details.tx.Amount)}\n  //                     </Td>\n  //                     <Td>{details.tx.inLedger}</Td>\n  //                     <Td>{details.tx.Fee}</Td>\n  //                     <Td>\n  //                       <Link\n  //                         color=\"teal\"\n  //                         target=\"_blank\"\n  //                         href={`${process.env.REACT_APP_XRP_TRANSACTION_REFFERENCE}transactions/${details.tx.hash}`}\n  //                       >\n  //                         {details.tx.hash}\n  //                       </Link>\n  //                     </Td>\n  //                   </Tr>\n  //                 )\n  //               )}\n  //             </Tbody>\n  //           </Table>\n  //         </TableContainer>\n  //       </Box>\n  //     </Container>\n  //   </>\n  // );\n};\n\nexport default TransactionRoute;\n"]},"metadata":{},"sourceType":"module"}