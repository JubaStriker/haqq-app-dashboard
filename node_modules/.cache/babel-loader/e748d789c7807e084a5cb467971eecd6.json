{"ast":null,"code":"import create from \"zustand\";\nimport axios from \"axios\";\nimport produce from \"immer\";\nimport Parse from \"parse\";\nimport { INTERNAL_SERVER_ERROR } from \"../../constants/strings\";\nimport { getBase64 } from \"../../utils/media\";\nconst INITIAL_FILES_STATE = {\n  get: {\n    loading: false,\n    success: {\n      ok: false,\n      data: null\n    },\n    failure: {\n      error: false,\n      message: \"\"\n    }\n  },\n  post: {\n    loading: false,\n    success: {\n      ok: false,\n      data: null\n    },\n    failure: {\n      error: false,\n      message: \"\"\n    }\n  },\n  destroy: {\n    loading: false,\n    success: {\n      ok: false,\n      data: null\n    },\n    failure: {\n      error: false,\n      message: \"\"\n    }\n  }\n};\nconst useFilesStore = create((set, get) => ({\n  files: INITIAL_FILES_STATE,\n  getFiles: async () => {\n    set(produce(state => ({ ...state,\n      files: { ...state.files,\n        get: { ...INITIAL_FILES_STATE.get,\n          loading: true\n        }\n      }\n    })));\n\n    try {\n      const {\n        data\n      } = await axios.get(``, {\n        headers: {\n          Authorization: `Bearer ${window.localStorage.getItem('thinkificAccessToken')}`,\n          accept: 'application/json'\n        }\n      });\n      set(produce(state => ({ ...state,\n        files: { ...state.files,\n          get: { ...INITIAL_FILES_STATE.get,\n            success: {\n              ok: true,\n              data: []\n            }\n          }\n        }\n      })));\n    } catch (e) {\n      set(produce(state => ({ ...state,\n        files: { ...state.files,\n          get: { ...INITIAL_FILES_STATE.get,\n            failure: {\n              error: true,\n              message: e.message || INTERNAL_SERVER_ERROR\n            }\n          }\n        }\n      })));\n    }\n  },\n  postFiles: async uploads => {\n    set(produce(state => ({ ...state,\n      files: { ...state.files,\n        post: { ...INITIAL_FILES_STATE.post,\n          loading: true\n        }\n      }\n    })));\n\n    try {\n      const base64s = await Promise.all(uploads.map(async upload => {\n        return {\n          data: await getBase64(upload),\n          type: upload.type\n        };\n      }));\n      const savedFiles = await Promise.all(base64s.map(async base64 => {\n        var _parseFile$_source, _parseFile$_source2;\n\n        const parseFile = new Parse.File(\"looks\", {\n          base64: base64.data\n        }, base64.type); // const savedFile = await parseFile.save();\n\n        const {\n          data\n        } = await axios.post(`${process.env.REACT_APP_API_SHOPLOOKS_SERVER_URL}/parse/files/looks`, {\n          base64: (parseFile === null || parseFile === void 0 ? void 0 : (_parseFile$_source = parseFile._source) === null || _parseFile$_source === void 0 ? void 0 : _parseFile$_source.base64) || parseFile._data,\n          _ApplicationId: Parse.applicationId,\n          _ClientVersion: \"js3.4.1\",\n          _ContentType: parseFile === null || parseFile === void 0 ? void 0 : (_parseFile$_source2 = parseFile._source) === null || _parseFile$_source2 === void 0 ? void 0 : _parseFile$_source2.type,\n          _JavaScriptKey: Parse.javaScriptKey,\n          fileData: {\n            metadata: {},\n            tags: {}\n          }\n        }, {\n          headers: {\n            'content-type': 'text/plain'\n          }\n        });\n        return data;\n      }));\n      set(produce(state => ({ ...state,\n        files: { ...state.files,\n          post: { ...INITIAL_FILES_STATE.post,\n            success: {\n              ok: true,\n              data: savedFiles\n            }\n          }\n        }\n      })));\n      return savedFiles;\n    } catch (e) {\n      set(produce(state => ({ ...state,\n        files: { ...state.files,\n          post: { ...INITIAL_FILES_STATE.post,\n            failure: {\n              error: true,\n              message: e.message || INTERNAL_SERVER_ERROR\n            }\n          }\n        }\n      })));\n      throw e;\n    }\n  },\n  destroyFiles: async id => {\n    set(produce(state => ({ ...state,\n      files: { ...state.files,\n        destroy: { ...INITIAL_FILES_STATE.destroy,\n          loading: true\n        }\n      }\n    })));\n\n    try {\n      const {\n        data\n      } = await axios.delete(``, {\n        headers: {\n          Authorization: `Bearer ${window.localStorage.getItem('thinkificAccessToken')}`,\n          accept: '*/*',\n          'Access-Control-Allow-Origin': '*'\n        }\n      });\n      set(produce(state => ({ ...state,\n        files: { ...state.files,\n          destroy: { ...INITIAL_FILES_STATE.destroy,\n            success: {\n              ok: true,\n              data\n            }\n          }\n        }\n      })));\n      return data;\n    } catch (e) {\n      set(produce(state => ({ ...state,\n        files: { ...state.files,\n          destroy: { ...INITIAL_FILES_STATE.destroy,\n            failure: {\n              error: true,\n              message: e.message || INTERNAL_SERVER_ERROR\n            }\n          }\n        }\n      })));\n      throw e;\n    }\n  }\n}));\nexport default useFilesStore;","map":{"version":3,"sources":["/Users/jithendra/Desktop/Work/meta-soft-xrp/xrp-shopify-coupon-client/src/store/files/index.js"],"names":["create","axios","produce","Parse","INTERNAL_SERVER_ERROR","getBase64","INITIAL_FILES_STATE","get","loading","success","ok","data","failure","error","message","post","destroy","useFilesStore","set","files","getFiles","state","headers","Authorization","window","localStorage","getItem","accept","e","postFiles","uploads","base64s","Promise","all","map","upload","type","savedFiles","base64","parseFile","File","process","env","REACT_APP_API_SHOPLOOKS_SERVER_URL","_source","_data","_ApplicationId","applicationId","_ClientVersion","_ContentType","_JavaScriptKey","javaScriptKey","fileData","metadata","tags","destroyFiles","id","delete"],"mappings":"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","sourcesContent":["import create from \"zustand\";\nimport axios from \"axios\";\nimport produce from \"immer\";\nimport Parse from \"parse\";\nimport { INTERNAL_SERVER_ERROR } from \"../../constants/strings\";\nimport { getBase64 } from \"../../utils/media\";\n\nconst INITIAL_FILES_STATE = {\n\tget: {\n\t\tloading: false,\n\t\tsuccess: {\n\t\t\tok: false,\n\t\t\tdata: null,\n\t\t},\n\t\tfailure: {\n\t\t\terror: false,\n\t\t\tmessage: \"\",\n\t\t}\n\t},\n\tpost: {\n\t\tloading: false,\n\t\tsuccess: {\n\t\t\tok: false,\n\t\t\tdata: null,\n\t\t},\n\t\tfailure: {\n\t\t\terror: false,\n\t\t\tmessage: \"\",\n\t\t}\n\t},\n\tdestroy: {\n\t\tloading: false,\n\t\tsuccess: {\n\t\t\tok: false,\n\t\t\tdata: null,\n\t\t},\n\t\tfailure: {\n\t\t\terror: false,\n\t\t\tmessage: \"\",\n\t\t}\n\t}\n};\n\nconst useFilesStore = create((set, get) => ({\n\tfiles: INITIAL_FILES_STATE,\n\tgetFiles: async() => {\n\t\tset(produce(state => ({\n\t\t\t...state,\n\t\t\tfiles: {\n\t\t\t\t...state.files,\n\t\t\t\tget: {\n\t\t\t\t\t...INITIAL_FILES_STATE.get,\n\t\t\t\t\tloading: true,\n\t\t\t\t}\n\t\t\t}\n\t\t})))\n\n\t\ttry {\n\t\t\tconst { data } = await axios.get(``, {\n\t\t\t\theaders: {\n\t\t\t\t\tAuthorization: `Bearer ${window.localStorage.getItem('thinkificAccessToken')}`,\n\t\t\t\t\taccept: 'application/json',\n\t\t\t\t}\n\t\t\t});\n\t\t\tset(produce(state => ({\n\t\t\t\t...state,\n\t\t\t\tfiles: {\n\t\t\t\t\t...state.files,\n\t\t\t\t\tget: {\n\t\t\t\t\t\t...INITIAL_FILES_STATE.get,\n\t\t\t\t\t\tsuccess: {\n\t\t\t\t\t\t\tok: true,\n\t\t\t\t\t\t\tdata: [],\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})))\n\n\t\t} catch (e) {\n\t\t\tset(produce(state => ({\n\t\t\t\t...state,\n\t\t\t\tfiles: {\n\t\t\t\t\t...state.files,\n\t\t\t\t\tget: {\n\t\t\t\t\t\t...INITIAL_FILES_STATE.get,\n\t\t\t\t\t\tfailure: {\n\t\t\t\t\t\t\terror: true,\n\t\t\t\t\t\t\tmessage: e.message || INTERNAL_SERVER_ERROR,\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})))\n\t\t}\n\t},\n\tpostFiles: async (uploads) => {\n\t\tset(produce(state => ({\n\t\t\t...state,\n\t\t\tfiles: {\n\t\t\t\t...state.files,\n\t\t\t\tpost: {\n\t\t\t\t\t...INITIAL_FILES_STATE.post,\n\t\t\t\t\tloading: true,\n\t\t\t\t}\n\t\t\t}\n\t\t})))\n\n\t\ttry {\n\t\t\tconst base64s = await Promise.all(uploads.map(async upload => {\n\t\t\t\treturn {\n\t\t\t\t\tdata: await getBase64(upload),\n\t\t\t\t\ttype: upload.type,\n\t\t\t\t}\n\t\t\t}));\n\t\t\tconst savedFiles = await Promise.all(base64s.map(async (base64) => {\n\t\t\t\tconst parseFile = new Parse.File(\"looks\", { base64: base64.data }, base64.type );\n\t\t\t\t// const savedFile = await parseFile.save();\n\t\t\t\tconst { data } = await axios.post(`${process.env.REACT_APP_API_SHOPLOOKS_SERVER_URL}/parse/files/looks`, {\n\t\t\t\t\tbase64: parseFile?._source?.base64 || parseFile._data,\n\t\t\t\t\t_ApplicationId: Parse.applicationId,\n\t\t\t\t\t_ClientVersion: \"js3.4.1\",\n\t\t\t\t\t_ContentType: parseFile?._source?.type,\n\t\t\t\t\t_JavaScriptKey: Parse.javaScriptKey,\n\t\t\t\t\tfileData: { metadata: {}, tags: {} }\n\t\t\t\t}, {\n\t\t\t\t\theaders: {\n\t\t\t\t\t\t'content-type': 'text/plain'\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\treturn data;\n\t\t\t}));\n\t\t\tset(produce(state => ({\n\t\t\t\t...state,\n\t\t\t\tfiles: {\n\t\t\t\t\t...state.files,\n\t\t\t\t\tpost: {\n\t\t\t\t\t\t...INITIAL_FILES_STATE.post,\n\t\t\t\t\t\tsuccess: {\n\t\t\t\t\t\t\tok: true,\n\t\t\t\t\t\t\tdata: savedFiles\n\t\t\t\t\t\t},\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})))\n\t\t\treturn savedFiles;\n\n\t\t} catch (e) {\n\t\t\tset(produce(state => ({\n\t\t\t\t...state,\n\t\t\t\tfiles: {\n\t\t\t\t\t...state.files,\n\t\t\t\t\tpost: {\n\t\t\t\t\t\t...INITIAL_FILES_STATE.post,\n\t\t\t\t\t\tfailure: {\n\t\t\t\t\t\t\terror: true,\n\t\t\t\t\t\t\tmessage: e.message || INTERNAL_SERVER_ERROR\n\t\t\t\t\t\t},\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})))\n\t\t\tthrow e;\n\t\t}\n\t},\n\tdestroyFiles: async (id) => {\n\t\tset(produce(state => ({\n\t\t\t...state,\n\t\t\tfiles: {\n\t\t\t\t...state.files,\n\t\t\t\tdestroy: {\n\t\t\t\t\t...INITIAL_FILES_STATE.destroy,\n\t\t\t\t\tloading: true,\n\t\t\t\t}\n\t\t\t}\n\t\t})))\n\n\t\ttry {\n\t\t\tconst { data } = await axios.delete(``,{\n\t\t\t\theaders: {\n\t\t\t\t\tAuthorization: `Bearer ${window.localStorage.getItem('thinkificAccessToken')}`,\n\t\t\t\t\taccept: '*/*',\n\t\t\t\t\t'Access-Control-Allow-Origin': '*',\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tset(produce(state => ({\n\t\t\t\t...state,\n\t\t\t\tfiles: {\n\t\t\t\t\t...state.files,\n\t\t\t\t\tdestroy: {\n\t\t\t\t\t\t...INITIAL_FILES_STATE.destroy,\n\t\t\t\t\t\tsuccess: {\n\t\t\t\t\t\t\tok: true,\n\t\t\t\t\t\t\tdata,\n\t\t\t\t\t\t},\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})))\n\t\t\treturn data;\n\n\t\t} catch (e) {\n\t\t\tset(produce(state => ({\n\t\t\t\t...state,\n\t\t\t\tfiles: {\n\t\t\t\t\t...state.files,\n\t\t\t\t\tdestroy: {\n\t\t\t\t\t\t...INITIAL_FILES_STATE.destroy,\n\t\t\t\t\t\tfailure: {\n\t\t\t\t\t\t\terror: true,\n\t\t\t\t\t\t\tmessage: e.message || INTERNAL_SERVER_ERROR\n\t\t\t\t\t\t},\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})))\n\t\t\tthrow e;\n\t\t}\n\t}\n}));\n\nexport default useFilesStore;\n\t\n"]},"metadata":{},"sourceType":"module"}