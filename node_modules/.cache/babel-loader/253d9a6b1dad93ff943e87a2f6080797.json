{"ast":null,"code":"'use strict';\n/**\n * Credits to https://github.com/cryptocoinjs/blake-hash\n */\n\nBlake256.sigma = [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], [14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3], [11, 8, 12, 0, 5, 2, 15, 13, 10, 14, 3, 6, 7, 1, 9, 4], [7, 9, 3, 1, 13, 12, 11, 14, 2, 6, 5, 10, 4, 0, 15, 8], [9, 0, 5, 7, 2, 4, 10, 15, 14, 1, 11, 12, 6, 8, 3, 13], [2, 12, 6, 10, 0, 11, 8, 3, 4, 13, 7, 5, 15, 14, 1, 9], [12, 5, 1, 15, 14, 13, 4, 10, 0, 7, 6, 3, 9, 2, 8, 11], [13, 11, 7, 14, 12, 1, 3, 9, 5, 0, 15, 4, 8, 6, 2, 10], [6, 15, 14, 9, 11, 3, 0, 8, 12, 2, 13, 7, 1, 4, 10, 5], [10, 2, 8, 4, 7, 6, 1, 5, 15, 11, 9, 14, 3, 12, 13, 0], [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], [14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3], [11, 8, 12, 0, 5, 2, 15, 13, 10, 14, 3, 6, 7, 1, 9, 4], [7, 9, 3, 1, 13, 12, 11, 14, 2, 6, 5, 10, 4, 0, 15, 8], [9, 0, 5, 7, 2, 4, 10, 15, 14, 1, 11, 12, 6, 8, 3, 13], [2, 12, 6, 10, 0, 11, 8, 3, 4, 13, 7, 5, 15, 14, 1, 9]];\nBlake256.u256 = [0x243f6a88, 0x85a308d3, 0x13198a2e, 0x03707344, 0xa4093822, 0x299f31d0, 0x082efa98, 0xec4e6c89, 0x452821e6, 0x38d01377, 0xbe5466cf, 0x34e90c6c, 0xc0ac29b7, 0xc97c50dd, 0x3f84d5b5, 0xb5470917];\nBlake256.padding = Buffer.from([0x80, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);\n\nBlake256.prototype._length_carry = function (arr) {\n  for (var j = 0; j < arr.length; ++j) {\n    if (arr[j] < 0x0100000000) break;\n    arr[j] -= 0x0100000000;\n    arr[j + 1] += 1;\n  }\n};\n\nBlake256.prototype.update = function (data, encoding) {\n  data = Buffer.from(data, encoding);\n  var block = this._block;\n  var offset = 0;\n\n  while (this._blockOffset + data.length - offset >= block.length) {\n    for (var i = this._blockOffset; i < block.length;) block[i++] = data[offset++];\n\n    this._length[0] += block.length * 8;\n\n    this._length_carry(this._length);\n\n    this._compress();\n\n    this._blockOffset = 0;\n  }\n\n  while (offset < data.length) block[this._blockOffset++] = data[offset++];\n\n  return this;\n};\n\nvar zo = Buffer.from([0x01]);\nvar oo = Buffer.from([0x81]);\n\nfunction rot(x, n) {\n  return (x << 32 - n | x >>> n) >>> 0;\n}\n\nfunction g(v, m, i, a, b, c, d, e) {\n  var sigma = Blake256.sigma;\n  var u256 = Blake256.u256;\n  v[a] = v[a] + ((m[sigma[i][e]] ^ u256[sigma[i][e + 1]]) >>> 0) + v[b] >>> 0;\n  v[d] = rot(v[d] ^ v[a], 16);\n  v[c] = v[c] + v[d] >>> 0;\n  v[b] = rot(v[b] ^ v[c], 12);\n  v[a] = v[a] + ((m[sigma[i][e + 1]] ^ u256[sigma[i][e]]) >>> 0) + v[b] >>> 0;\n  v[d] = rot(v[d] ^ v[a], 8);\n  v[c] = v[c] + v[d] >>> 0;\n  v[b] = rot(v[b] ^ v[c], 7);\n}\n\nfunction Blake256() {\n  this._h = [0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19];\n  this._s = [0, 0, 0, 0];\n  this._block = Buffer.allocUnsafe(64);\n  this._blockOffset = 0;\n  this._length = [0, 0];\n  this._nullt = false;\n  this._zo = zo;\n  this._oo = oo;\n}\n\nBlake256.prototype._compress = function () {\n  var u256 = Blake256.u256;\n  var v = new Array(16);\n  var m = new Array(16);\n  var i;\n\n  for (i = 0; i < 16; ++i) m[i] = this._block.readUInt32BE(i * 4);\n\n  for (i = 0; i < 8; ++i) v[i] = this._h[i] >>> 0;\n\n  for (i = 8; i < 12; ++i) v[i] = (this._s[i - 8] ^ u256[i - 8]) >>> 0;\n\n  for (i = 12; i < 16; ++i) v[i] = u256[i - 8];\n\n  if (!this._nullt) {\n    v[12] = (v[12] ^ this._length[0]) >>> 0;\n    v[13] = (v[13] ^ this._length[0]) >>> 0;\n    v[14] = (v[14] ^ this._length[1]) >>> 0;\n    v[15] = (v[15] ^ this._length[1]) >>> 0;\n  }\n\n  for (i = 0; i < 14; ++i) {\n    /* column step */\n    g(v, m, i, 0, 4, 8, 12, 0);\n    g(v, m, i, 1, 5, 9, 13, 2);\n    g(v, m, i, 2, 6, 10, 14, 4);\n    g(v, m, i, 3, 7, 11, 15, 6);\n    /* diagonal step */\n\n    g(v, m, i, 0, 5, 10, 15, 8);\n    g(v, m, i, 1, 6, 11, 12, 10);\n    g(v, m, i, 2, 7, 8, 13, 12);\n    g(v, m, i, 3, 4, 9, 14, 14);\n  }\n\n  for (i = 0; i < 16; ++i) this._h[i % 8] = (this._h[i % 8] ^ v[i]) >>> 0;\n\n  for (i = 0; i < 8; ++i) this._h[i] = (this._h[i] ^ this._s[i % 4]) >>> 0;\n};\n\nBlake256.prototype._padding = function () {\n  var lo = this._length[0] + this._blockOffset * 8;\n  var hi = this._length[1];\n\n  if (lo >= 0x0100000000) {\n    lo -= 0x0100000000;\n    hi += 1;\n  }\n\n  var msglen = Buffer.allocUnsafe(8);\n  msglen.writeUInt32BE(hi, 0);\n  msglen.writeUInt32BE(lo, 4);\n\n  if (this._blockOffset === 55) {\n    this._length[0] -= 8;\n    this.update(this._oo);\n  } else {\n    if (this._blockOffset < 55) {\n      if (this._blockOffset === 0) this._nullt = true;\n      this._length[0] -= (55 - this._blockOffset) * 8;\n      this.update(Blake256.padding.slice(0, 55 - this._blockOffset));\n    } else {\n      this._length[0] -= (64 - this._blockOffset) * 8;\n      this.update(Blake256.padding.slice(0, 64 - this._blockOffset));\n      this._length[0] -= 55 * 8;\n      this.update(Blake256.padding.slice(1, 1 + 55));\n      this._nullt = true;\n    }\n\n    this.update(this._zo);\n    this._length[0] -= 8;\n  }\n\n  this._length[0] -= 64;\n  this.update(msglen);\n};\n\nBlake256.prototype.digest = function (encoding) {\n  this._padding();\n\n  var buffer = Buffer.allocUnsafe(32);\n\n  for (var i = 0; i < 8; ++i) buffer.writeUInt32BE(this._h[i], i * 4);\n\n  return buffer.toString(encoding);\n};\n\nmodule.exports = Blake256;","map":{"version":3,"sources":["/Users/jithendra/Desktop/Work/hbar-shop/xrp-shopify-coupon-client/node_modules/multicoin-address-validator/src/crypto/blake256.js"],"names":["Blake256","sigma","u256","padding","Buffer","from","prototype","_length_carry","arr","j","length","update","data","encoding","block","_block","offset","_blockOffset","i","_length","_compress","zo","oo","rot","x","n","g","v","m","a","b","c","d","e","_h","_s","allocUnsafe","_nullt","_zo","_oo","Array","readUInt32BE","_padding","lo","hi","msglen","writeUInt32BE","slice","digest","buffer","toString","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\n/**\n * Credits to https://github.com/cryptocoinjs/blake-hash\n */\nBlake256.sigma = [\n    [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15],\n    [14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3],\n    [11, 8, 12, 0, 5, 2, 15, 13, 10, 14, 3, 6, 7, 1, 9, 4],\n    [7, 9, 3, 1, 13, 12, 11, 14, 2, 6, 5, 10, 4, 0, 15, 8],\n    [9, 0, 5, 7, 2, 4, 10, 15, 14, 1, 11, 12, 6, 8, 3, 13],\n    [2, 12, 6, 10, 0, 11, 8, 3, 4, 13, 7, 5, 15, 14, 1, 9],\n    [12, 5, 1, 15, 14, 13, 4, 10, 0, 7, 6, 3, 9, 2, 8, 11],\n    [13, 11, 7, 14, 12, 1, 3, 9, 5, 0, 15, 4, 8, 6, 2, 10],\n    [6, 15, 14, 9, 11, 3, 0, 8, 12, 2, 13, 7, 1, 4, 10, 5],\n    [10, 2, 8, 4, 7, 6, 1, 5, 15, 11, 9, 14, 3, 12, 13, 0],\n    [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15],\n    [14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3],\n    [11, 8, 12, 0, 5, 2, 15, 13, 10, 14, 3, 6, 7, 1, 9, 4],\n    [7, 9, 3, 1, 13, 12, 11, 14, 2, 6, 5, 10, 4, 0, 15, 8],\n    [9, 0, 5, 7, 2, 4, 10, 15, 14, 1, 11, 12, 6, 8, 3, 13],\n    [2, 12, 6, 10, 0, 11, 8, 3, 4, 13, 7, 5, 15, 14, 1, 9]\n]\n\nBlake256.u256 = [\n    0x243f6a88, 0x85a308d3, 0x13198a2e, 0x03707344,\n    0xa4093822, 0x299f31d0, 0x082efa98, 0xec4e6c89,\n    0x452821e6, 0x38d01377, 0xbe5466cf, 0x34e90c6c,\n    0xc0ac29b7, 0xc97c50dd, 0x3f84d5b5, 0xb5470917\n]\n\nBlake256.padding = Buffer.from([\n    0x80, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n])\n\nBlake256.prototype._length_carry = function (arr) {\n    for (var j = 0; j < arr.length; ++j) {\n        if (arr[j] < 0x0100000000) break\n        arr[j] -= 0x0100000000\n        arr[j + 1] += 1\n    }\n}\n\nBlake256.prototype.update = function (data, encoding) {\n    data = Buffer.from(data, encoding);\n    var block = this._block\n    var offset = 0\n\n    while (this._blockOffset + data.length - offset >= block.length) {\n        for (var i = this._blockOffset; i < block.length;) block[i++] = data[offset++]\n\n        this._length[0] += block.length * 8\n        this._length_carry(this._length)\n\n        this._compress()\n        this._blockOffset = 0\n    }\n\n    while (offset < data.length) block[this._blockOffset++] = data[offset++]\n    return this;\n}\n\nvar zo = Buffer.from([0x01])\nvar oo = Buffer.from([0x81])\n\nfunction rot (x, n) {\n    return ((x << (32 - n)) | (x >>> n)) >>> 0\n}\n\nfunction g (v, m, i, a, b, c, d, e) {\n    var sigma = Blake256.sigma\n    var u256 = Blake256.u256\n\n    v[a] = (v[a] + ((m[sigma[i][e]] ^ u256[sigma[i][e + 1]]) >>> 0) + v[b]) >>> 0\n    v[d] = rot(v[d] ^ v[a], 16)\n    v[c] = (v[c] + v[d]) >>> 0\n    v[b] = rot(v[b] ^ v[c], 12)\n    v[a] = (v[a] + ((m[sigma[i][e + 1]] ^ u256[sigma[i][e]]) >>> 0) + v[b]) >>> 0\n    v[d] = rot(v[d] ^ v[a], 8)\n    v[c] = (v[c] + v[d]) >>> 0\n    v[b] = rot(v[b] ^ v[c], 7)\n}\n\nfunction Blake256 () {\n    this._h = [\n        0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a,\n        0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n    ]\n\n    this._s = [0, 0, 0, 0]\n\n    this._block = Buffer.allocUnsafe(64)\n    this._blockOffset = 0\n    this._length = [0, 0]\n\n    this._nullt = false\n\n    this._zo = zo\n    this._oo = oo\n}\n\nBlake256.prototype._compress = function () {\n    var u256 = Blake256.u256\n    var v = new Array(16)\n    var m = new Array(16)\n    var i\n\n    for (i = 0; i < 16; ++i) m[i] = this._block.readUInt32BE(i * 4)\n    for (i = 0; i < 8; ++i) v[i] = this._h[i] >>> 0\n    for (i = 8; i < 12; ++i) v[i] = (this._s[i - 8] ^ u256[i - 8]) >>> 0\n    for (i = 12; i < 16; ++i) v[i] = u256[i - 8]\n\n    if (!this._nullt) {\n        v[12] = (v[12] ^ this._length[0]) >>> 0\n        v[13] = (v[13] ^ this._length[0]) >>> 0\n        v[14] = (v[14] ^ this._length[1]) >>> 0\n        v[15] = (v[15] ^ this._length[1]) >>> 0\n    }\n\n    for (i = 0; i < 14; ++i) {\n        /* column step */\n        g(v, m, i, 0, 4, 8, 12, 0)\n        g(v, m, i, 1, 5, 9, 13, 2)\n        g(v, m, i, 2, 6, 10, 14, 4)\n        g(v, m, i, 3, 7, 11, 15, 6)\n        /* diagonal step */\n        g(v, m, i, 0, 5, 10, 15, 8)\n        g(v, m, i, 1, 6, 11, 12, 10)\n        g(v, m, i, 2, 7, 8, 13, 12)\n        g(v, m, i, 3, 4, 9, 14, 14)\n    }\n\n    for (i = 0; i < 16; ++i) this._h[i % 8] = (this._h[i % 8] ^ v[i]) >>> 0\n    for (i = 0; i < 8; ++i) this._h[i] = (this._h[i] ^ this._s[i % 4]) >>> 0\n}\n\nBlake256.prototype._padding = function () {\n    var lo = this._length[0] + this._blockOffset * 8\n    var hi = this._length[1]\n    if (lo >= 0x0100000000) {\n        lo -= 0x0100000000\n        hi += 1\n    }\n\n    var msglen = Buffer.allocUnsafe(8)\n    msglen.writeUInt32BE(hi, 0)\n    msglen.writeUInt32BE(lo, 4)\n\n    if (this._blockOffset === 55) {\n        this._length[0] -= 8\n        this.update(this._oo)\n    } else {\n        if (this._blockOffset < 55) {\n            if (this._blockOffset === 0) this._nullt = true\n            this._length[0] -= (55 - this._blockOffset) * 8\n            this.update(Blake256.padding.slice(0, 55 - this._blockOffset))\n        } else {\n            this._length[0] -= (64 - this._blockOffset) * 8\n            this.update(Blake256.padding.slice(0, 64 - this._blockOffset))\n            this._length[0] -= 55 * 8\n            this.update(Blake256.padding.slice(1, 1 + 55))\n            this._nullt = true\n        }\n\n        this.update(this._zo)\n        this._length[0] -= 8\n    }\n\n    this._length[0] -= 64\n    this.update(msglen)\n}\n\nBlake256.prototype.digest = function (encoding) {\n    this._padding()\n\n    var buffer = Buffer.allocUnsafe(32)\n    for (var i = 0; i < 8; ++i) buffer.writeUInt32BE(this._h[i], i * 4)\n    return buffer.toString(encoding);\n}\n\nmodule.exports = Blake256;\n"]},"metadata":{},"sourceType":"script"}