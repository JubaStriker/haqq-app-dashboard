{"ast":null,"code":"/*-\n * ‌\n * Hedera JavaScript SDK\n * ​\n * Copyright (C) 2020 - 2022 Hedera Hashgraph, LLC\n * ​\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * ‍\n */\nimport AccountId from \"./AccountId.js\";\nimport Duration from \"../Duration.js\";\nimport KeyList from \"../KeyList.js\";\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").proto.IAccountID} HashgraphProto.proto.IAccountID\n * @typedef {import(\"@hashgraph/proto\").proto.ILiveHash} HashgraphProto.proto.ILiveHash\n * @typedef {import(\"@hashgraph/proto\").proto.IDuration} HashgraphProto.proto.IDuration\n */\n\n/**\n * Response when the client sends the node CryptoGetInfoQuery.\n */\n\nexport default class LiveHash {\n  /**\n   * @private\n   * @param {object} props\n   * @param {AccountId} props.accountId\n   * @param {Uint8Array} props.hash\n   * @param {KeyList} props.keys\n   * @param {Duration} props.duration\n   */\n  constructor(props) {\n    /** @readonly */\n    this.accountId = props.accountId;\n    /** @readonly */\n\n    this.hash = props.hash;\n    /** @readonly */\n\n    this.keys = props.keys;\n    /** @readonly */\n\n    this.duration = props.duration;\n    Object.freeze(this);\n  }\n  /**\n   * @internal\n   * @param {HashgraphProto.proto.ILiveHash} liveHash\n   * @returns {LiveHash}\n   */\n\n\n  static _fromProtobuf(liveHash) {\n    const liveHash_ =\n    /** @type {HashgraphProto.proto.ILiveHash} */\n    liveHash;\n    return new LiveHash({\n      accountId: AccountId._fromProtobuf(\n      /** @type {HashgraphProto.proto.IAccountID} */\n      liveHash_.accountId),\n      hash: liveHash_.hash != null ? liveHash_.hash : new Uint8Array(),\n      keys: liveHash_.keys != null ? KeyList.__fromProtobufKeyList(liveHash_.keys) : new KeyList(),\n      duration: Duration._fromProtobuf(\n      /** @type {HashgraphProto.proto.IDuration} */\n      liveHash_.duration)\n    });\n  }\n  /**\n   * @internal\n   * @returns {HashgraphProto.proto.ILiveHash}\n   */\n\n\n  _toProtobuf() {\n    return {\n      accountId: this.accountId._toProtobuf(),\n      hash: this.hash,\n      keys: this.keys._toProtobufKey().keyList,\n      duration: this.duration._toProtobuf()\n    };\n  }\n\n}","map":{"version":3,"sources":["/Users/jithendra/Desktop/Work/hbar-shop/hbar-shop-dashboard/node_modules/@hashgraph/sdk/src/account/LiveHash.js"],"names":["AccountId","Duration","KeyList","LiveHash","constructor","props","accountId","hash","keys","duration","Object","freeze","_fromProtobuf","liveHash","liveHash_","Uint8Array","__fromProtobufKeyList","_toProtobuf","_toProtobufKey","keyList"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,SAAP,MAAsB,gBAAtB;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,OAAP,MAAoB,eAApB;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AACA,eAAe,MAAMC,QAAN,CAAe;AAC1B;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACIC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf;AACA,SAAKC,SAAL,GAAiBD,KAAK,CAACC,SAAvB;AAEA;;AACA,SAAKC,IAAL,GAAYF,KAAK,CAACE,IAAlB;AAEA;;AACA,SAAKC,IAAL,GAAYH,KAAK,CAACG,IAAlB;AAEA;;AACA,SAAKC,QAAL,GAAgBJ,KAAK,CAACI,QAAtB;AAEAC,IAAAA,MAAM,CAACC,MAAP,CAAc,IAAd;AACH;AAED;AACJ;AACA;AACA;AACA;;;AACwB,SAAbC,aAAa,CAACC,QAAD,EAAW;AAC3B,UAAMC,SAAS;AAAG;AACdD,IAAAA,QADJ;AAIA,WAAO,IAAIV,QAAJ,CAAa;AAChBG,MAAAA,SAAS,EAAEN,SAAS,CAACY,aAAV;AACP;AACIE,MAAAA,SAAS,CAACR,SAFP,CADK;AAMhBC,MAAAA,IAAI,EAAEO,SAAS,CAACP,IAAV,IAAkB,IAAlB,GAAyBO,SAAS,CAACP,IAAnC,GAA0C,IAAIQ,UAAJ,EANhC;AAOhBP,MAAAA,IAAI,EACAM,SAAS,CAACN,IAAV,IAAkB,IAAlB,GACMN,OAAO,CAACc,qBAAR,CAA8BF,SAAS,CAACN,IAAxC,CADN,GAEM,IAAIN,OAAJ,EAVM;AAWhBO,MAAAA,QAAQ,EAAER,QAAQ,CAACW,aAAT;AACN;AACIE,MAAAA,SAAS,CAACL,QAFR;AAXM,KAAb,CAAP;AAiBH;AAED;AACJ;AACA;AACA;;;AACIQ,EAAAA,WAAW,GAAG;AACV,WAAO;AACHX,MAAAA,SAAS,EAAE,KAAKA,SAAL,CAAeW,WAAf,EADR;AAEHV,MAAAA,IAAI,EAAE,KAAKA,IAFR;AAGHC,MAAAA,IAAI,EAAE,KAAKA,IAAL,CAAUU,cAAV,GAA2BC,OAH9B;AAIHV,MAAAA,QAAQ,EAAE,KAAKA,QAAL,CAAcQ,WAAd;AAJP,KAAP;AAMH;;AAjEyB","sourcesContent":["/*-\n * ‌\n * Hedera JavaScript SDK\n * ​\n * Copyright (C) 2020 - 2022 Hedera Hashgraph, LLC\n * ​\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * ‍\n */\n\nimport AccountId from \"./AccountId.js\";\nimport Duration from \"../Duration.js\";\nimport KeyList from \"../KeyList.js\";\n\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").proto.IAccountID} HashgraphProto.proto.IAccountID\n * @typedef {import(\"@hashgraph/proto\").proto.ILiveHash} HashgraphProto.proto.ILiveHash\n * @typedef {import(\"@hashgraph/proto\").proto.IDuration} HashgraphProto.proto.IDuration\n */\n\n/**\n * Response when the client sends the node CryptoGetInfoQuery.\n */\nexport default class LiveHash {\n    /**\n     * @private\n     * @param {object} props\n     * @param {AccountId} props.accountId\n     * @param {Uint8Array} props.hash\n     * @param {KeyList} props.keys\n     * @param {Duration} props.duration\n     */\n    constructor(props) {\n        /** @readonly */\n        this.accountId = props.accountId;\n\n        /** @readonly */\n        this.hash = props.hash;\n\n        /** @readonly */\n        this.keys = props.keys;\n\n        /** @readonly */\n        this.duration = props.duration;\n\n        Object.freeze(this);\n    }\n\n    /**\n     * @internal\n     * @param {HashgraphProto.proto.ILiveHash} liveHash\n     * @returns {LiveHash}\n     */\n    static _fromProtobuf(liveHash) {\n        const liveHash_ = /** @type {HashgraphProto.proto.ILiveHash} */ (\n            liveHash\n        );\n\n        return new LiveHash({\n            accountId: AccountId._fromProtobuf(\n                /** @type {HashgraphProto.proto.IAccountID} */ (\n                    liveHash_.accountId\n                )\n            ),\n            hash: liveHash_.hash != null ? liveHash_.hash : new Uint8Array(),\n            keys:\n                liveHash_.keys != null\n                    ? KeyList.__fromProtobufKeyList(liveHash_.keys)\n                    : new KeyList(),\n            duration: Duration._fromProtobuf(\n                /** @type {HashgraphProto.proto.IDuration} */ (\n                    liveHash_.duration\n                )\n            ),\n        });\n    }\n\n    /**\n     * @internal\n     * @returns {HashgraphProto.proto.ILiveHash}\n     */\n    _toProtobuf() {\n        return {\n            accountId: this.accountId._toProtobuf(),\n            hash: this.hash,\n            keys: this.keys._toProtobufKey().keyList,\n            duration: this.duration._toProtobuf(),\n        };\n    }\n}\n"]},"metadata":{},"sourceType":"module"}